{"version":3,"sources":["webpack:///./src/utils.ts","webpack:///./src/main.ts","webpack:///./web/components/Editor/Editor.tsx","webpack:///./src/adapters/rasa.ts","webpack:///./parser/chatito.js","webpack:///./src/adapters/snips.ts","webpack:///./src/adapters/web.ts","webpack:///./web/lib/editorConfig.ts","webpack:///./web/lib/utils.ts","webpack:///./web/components/Editor/editorStyles.tsx","webpack:///./web/components/globalStyles.tsx","webpack:///./web/components/Logo.tsx","webpack:///./web/pages/index.tsx"],"names":["array","i","j","Math","_ref","validateAndPushToStack","entity","entitiesStack","numberOfSlotsInStack","found","find","et","type","last","Error","concat","key","maxSentencesForSentence","entities","stack","sentence","reduce","accumulator","t","acc","def","innerEntityKey","value","inner","s","innerEntityVariations","maxSentencesForEntity","opt","ed","arguments","length","undefined","map","val","isObject","item","_typeof","Array","mergeDeep","target","source","Object","isArray","utils","_interopRequireWildcard","__webpack_require__","chatito","chatitoFormatPostProcess","data","arr","next","arrShadow","lastWord","replace","trim","assign","getVariationsFromEntity","_asyncToGenerator","regeneratorRuntime","mark","_callee","optional","cache","variationKey","cacheKey","cacheStats","counts","totalCounts","maxCounts","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","c","mxc","currentEntityCache","max","allCounts","min","counterIndexes","sentenceIndex","slotSynonyms","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","slotsInSentenceKeys","currentCache","sentenceVariation","returnSentenceTokens","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","returnToken","wrap","_context","prev","Symbol","iterator","done","t0","return","finish","optionalCounts","p","n","fill","abrupt","Set","Map","sent","args","t1","t2","stop","this","_x","_x2","_x3","_x4","apply","astFromString","str","writterFn","ast","datasetFromAST","_ref2","_callee2","operatorDefinitions","intentKeys","_i","intentKey","maxPossibleCombinations","maxIntentExamples","entityArgs","trainingN","testingN","generatedTrainingExamplesCount","intentMax","maxEx","globalCache","collitionsCache","duplicatesCounter","intentSentence","utterance","utteranceString","maxDupes","maxDupesLimit","_context2","Intent","Slot","Alias","od","odKey","training","parseInt","testing","m","_x5","_x6","_FileSaver","React","rasaAdapter","snipsAdapter","webAdapter","_editorConfig","_utils2","es","adapters","default","rasa","snips","CodeFlask","ReactJson","window","Editor","error","warning","activeTabIndex","showDrawer","dataset","adapterOptions","currentAdapter","useCustomOptions","debounce","_this","codeInputValue","validation","getDSLValidation","newState","setState","saveToLocalStorage","state","createElement","BlockWrapper","BlockWrapperTitle","style","display","flexDirection","DrawerFormField","borderRight","htmlFor","SelectWrapper","id","name","onChange","onAdapterChange","CheckboxWrapper","checked","onCustomOptionsCheckboxChange","renderEditAdapterOptions","padding","textAlign","TabsAreaButton","onClick","generateDataset","fontSize","borderTop","flex","margin","src","theme","iconStyle","enableClipboard","displayDataTypes","collapsed","onEdit","onEditAdapterOptions","onAdd","onDelete","onCloseTab","closerTab","TabButton","active","changeTab","title","CloseTab","e","rasaDefaultOptions","snipsDefaultOptions","changes","updated_src","filename","prompt","tabs","push","tabsContainer","current","scrollTo","left","scrollWidth","behavior","validateChatitoFiles","alert","saveTabs","saveAdapterOptions","saveCurrentAdapter","localStorage","JSON","parseAsJSON","cb","localTabs","loadFromLocalIfPresent","localAdapterOptions","localCurrentAdapter","codeflask","updateCode","setLineNumber","setTimeout","ati","newActiveTabIndex","_toConsumableArray","slice","dsl","intentsWithoutLimit","filter","column","some","tab","testingDataset","adapter","_loop","_ret","datasetBlob","testingBlob","_context3","_step$value","_ref3","_slicedToArray","message","v","entries","delegateYield","Blob","saveAs","Date","getTime","Component","_this2","loadFromLocalStorage","flask","language","lineNumbers","chatitoPrism","code","editorUpdatesSetupCount","debouncedTabDSLValidation","alertState","EditorWrapper","EditorHeader","TabsArea","innerRef","renderTabButton","onAddFile","backgroundColor","onToggleDrawer","disabled","CodeStyles","AlertNotification","EditorOverlay","onCloseDrawer","Drawer","stopPropagation","CloseDrawerButton","renderDatasetGeneratorSettings","renderDatasetPreviewer","gen","formatOptions","synonyms","utteranceWriter","rasa_nlu_data","regex_features","entity_synonyms","common_examples","isTrainingExample","example","slot","synonym","end","start","text","intent","k","peg$SyntaxError","expected","location","captureStackTrace","child","parent","ctor","constructor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","class","escapedParts","parts","classEscape","inverted","any","other","description","hex","ch","charCodeAt","toString","toUpperCase","descriptions","sort","join","describeExpected","describeFound","module","exports","SyntaxError","parse","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","Start","peg$parseStart","peg$startRuleFunction","peg$c0","peg$c1","peg$c2","peg$literalExpectation","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","o","peg$c26","peg$c27","peg$c28","peg$c29","variation","peg$c30","peg$c31","peg$c32","peg$c33","op","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$otherExpectation","peg$c41","peg$c42","peg$c43","level","STEP","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c54","peg$classExpectation","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","curr","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","ek","ev","peg$c68","peg$c69","peg$c70","chars","peg$c71","peg$c72","peg$c73","peg$c74","peg$c75","char","peg$c76","sequence","peg$c77","peg$c78","peg$c79","peg$c80","peg$c81","peg$c82","peg$c83","peg$c84","peg$c85","peg$c86","peg$c87","peg$c88","peg$c89","peg$c90","peg$c91","peg$c92","peg$c93","peg$c94","peg$c95","peg$c96","peg$c97","digits","String","fromCharCode","peg$c98","peg$c99","peg$currPos","peg$savedPos","peg$posDetailsCache","line","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","peg$computeLocation","ignoreCase","peg$computePosDetails","pos","details","startPos","endPos","startPosDetails","endPosDetails","offset","peg$fail","peg$buildStructuredError","s0","s1","peg$parseTopLevelStatement","peg$parseCommentLine","s2","s5","peg$parseEOL","s3","peg$parseEntityBody","peg$parseEntityArguments","peg$parseEntityIntentDefinition","peg$parseIndent","peg$parseIntentAndSlotInnerStatements","peg$parseDedent","peg$parseIntentDefinition","s4","substr","peg$parseSlotKeywordLiteral","peg$parseSlotVariationDefinition","peg$parseEntitySlotDefinition","peg$parseSlotInnerStatement","peg$parseSlotInnerStatements","peg$parseSlotDefinition","peg$parseEntityAliasDefinition","peg$parseAliasDefinition","peg$parseEntityOpt","peg$parseEntityKeywordLiteral","peg$parseIntentAndSlotKeywordLiterals","s6","s7","s8","charAt","peg$parseAnyTextWithSlotAndAlias","peg$parseIntentAndSlotInnerStatement","peg$parseSamedent","peg$parseOptionalSlot","peg$parseOptionalAlias","peg$parseIntentAndSlotValidInner","peg$parseEOS","peg$parseSlotVariationStartDefinition","peg$parseSlotOptionalBody","peg$parseSlotKeywordLiterals","peg$parseAnyTextWithAlias","peg$parseSlotValidInner","peg$parseEntityOptionalBody","peg$parseAnyTextWithoutEOL","s9","peg$parseEOF","peg$parseEOLNonWindows","peg$parseEOLWindows","peg$parseEntityArg","peg$parseArgumentKeyValueString","peg$parseDoubleQuotedString","peg$parseSingleQuotedString","peg$parseStringEscapedChars","peg$parseHEXDIG","substring","test","synonymsForSlots","intents","utterances","u","ret","slotKey","synonymsValue","comments","pattern","greedy","intentDefinition","inside","intentArguments","slotDefinition","slotArguments","alias","func","wait","timeout","_len","_key","context","clearTimeout","_styledComponents","styled","div","withConfig","displayName","componentId","button","_ref4","injectGlobal","_templateObject","Header","viewBox","version","x","y","stroke","d","_reactHelmet","_interopRequireDefault","_Editor","_globalStyles","_Logo","Index","rel","sizes","href","color","content","width","minWidth","height","paddingLeft"],"mappings":"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","file":"component---web-pages-index-tsx-fcd3007912407eb417e9.js","sourcesContent":["import { IChatitoEntityAST, IEntities, ISentenceTokens } from './types';\n\n//  Durstenfeld shuffle, a computer-optimized version of Fisher-Yates:\n// https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\nexport const shuffle = <T>(array: T[]) => {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n};\n\nexport const validateAndPushToStack = (entity: IChatitoEntityAST, entitiesStack: IChatitoEntityAST[]) => {\n    let numberOfSlotsInStack = 0;\n    const found = entitiesStack.find((et) => {\n        if (et.type === 'SlotDefinition') { numberOfSlotsInStack++; }\n        return et.key === entity.key && et.type === entity.type;\n    });\n    if (found) {\n        const last = entitiesStack.pop() || found;\n        throw new Error(`Invalid nesting of entity: '${entity.key}' inside entity '${last.key}'. Infinite loop prevented.`)\n    }\n    if (numberOfSlotsInStack !== 0 && entity.type === 'SlotDefinition') {\n        const last = entitiesStack.pop() || entity;\n        throw new Error(`Invalid nesting of slot: '${entity.key}' inside '${last.key}'. An slot can't reference other slot.`)\n    }\n    entitiesStack.push(entity);\n    return entitiesStack;\n}\n\nexport const maxSentencesForSentence = (\n    entities: IEntities, stack?: IChatitoEntityAST[],\n) => (sentence: ISentenceTokens[]) => {\n    const sr = sentence.reduce((accumulator, t) => {\n        let acc = accumulator;\n        if (t.type === 'Slot' || t.type === 'Alias') {\n            const def = entities[t.type];\n            const innerEntityKey = t.variation ? `${t.value}#${t.variation}` : t.value;\n            if (!def[innerEntityKey]) {\n                if (t.type === 'Alias') {\n                    def[innerEntityKey] = {\n                        inner: [[{ value: innerEntityKey, type: 'Text' }]],\n                        key: t.value,\n                        type: 'AliasDefinition'\n                    };\n                } else {\n                    throw new Error(`${t.type} not defined: ${innerEntityKey}`);\n                }\n            }\n            const s = stack ? stack.slice(0) : [];\n            let innerEntityVariations = maxSentencesForEntity(def[innerEntityKey], entities, s);\n            if (t.opt) {\n                innerEntityVariations++;\n            }\n            acc = acc * innerEntityVariations;\n        }\n        return acc;\n    }, 1);\n    return sr;\n};\n\nexport const maxSentencesForEntity = (ed: IChatitoEntityAST, entities: IEntities, stack: IChatitoEntityAST[] = []): number => {\n    validateAndPushToStack(ed, stack);\n    return ed.inner.map(maxSentencesForSentence(entities, stack)).reduce((acc, val) => acc + val);\n}\n\n// Deep merge objects\n// https://gist.github.com/Salakar/1d7137de9cb8b704e48a\nconst isObject = (item: any) => item && typeof item === 'object' && !Array.isArray(item) && item !== null;\nconst isArray = (item: any) => {\n    if (typeof Array.isArray === 'undefined') {\n        return Object.prototype.toString.call(item) === '[object Array]';\n    } else {\n        return Array.isArray(item);\n    }\n};\nexport const mergeDeep = <T>(target: any, source: any): T => {\n    if (isObject(target) && isObject(source)) {\n        Object.keys(source).forEach(key => {\n            if (isArray(source[key])) {\n                if (target[key] === undefined) {\n                    target[key] = [];\n                }\n                target[key] = target[key].concat(source[key]);\n            } else if (isObject(source[key])) {\n                if (!target[key]) {\n                    Object.assign(target, { [key]: {} });\n                }\n                mergeDeep(target[key], source[key]);\n            } else {\n                Object.assign(target, { [key]: source[key] });\n            }\n        });\n    }\n    return target;\n};\n","import * as utils from './utils';\n\nimport {\n    IChatitoCache,\n    IChatitoEntityAST,\n    IChatitoParser,\n    IEntities,\n    IEntityDef,\n    ISentenceTokens,\n    IStatCache,\n    IUtteranceWriter\n} from './types';\n\n// tslint:disable-next-line:no-var-requires\nconst chatito = require('../parser/chatito') as IChatitoParser;\n\nconst chatitoFormatPostProcess = (data: ISentenceTokens[]) => {\n    const arr = data.reduce(\n        (accumulator: ISentenceTokens[], next: ISentenceTokens, i, arrShadow) => {\n            if (accumulator.length) {\n                const lastWord = accumulator[accumulator.length - 1];\n                if (lastWord.type === next.type && lastWord.type === 'Text') {\n                    accumulator[accumulator.length - 1] = {\n                        type: lastWord.type,\n                        value: (lastWord.value + next.value).replace(/\\s+/g, ' ')\n                    };\n                } else {\n                    accumulator.push(next);\n                }\n            } else if (next.value.trim()) {\n                accumulator.push(next);\n            }\n            if (i === arrShadow.length - 1) {\n                // if its the last token of a sentence\n                // remove empty strings at the end\n                if (!accumulator[accumulator.length - 1].value.trim()) {\n                    accumulator.pop();\n                }\n                if (accumulator.length) {\n                    accumulator[accumulator.length - 1] = Object.assign({}, accumulator[accumulator.length - 1], {\n                        value: accumulator[accumulator.length - 1].value.replace(/\\s+$/g, '')\n                    });\n                }\n            }\n            return accumulator;\n        },\n        [] as ISentenceTokens[]\n    );\n    if (arr.length) {\n        arr[0] = Object.assign({}, arr[0], {\n            value: arr[0].value.replace(/^\\s+/, '')\n        });\n    }\n    return arr;\n};\n\n// recursive function that generates variations using a cache\n// that uses counts to avoid repetitions\nconst getVariationsFromEntity = async <T>(\n    ed: IChatitoEntityAST,\n    entities: IEntities,\n    optional: boolean,\n    cache: IChatitoCache,\n): Promise<ISentenceTokens[]> => {\n    // if this entity is a slot variation, add that as the key\n    const variationKey = ed.variation ? `#${ed.variation}` : '';\n    const cacheKey = `${ed.type}-${ed.key}${variationKey}`;\n    let cacheStats = cache.get(cacheKey) as IStatCache;\n    if (!cacheStats) {\n        // if the entity is not cache, create an empty cache for it\n        const counts: IChatitoCache[] = [];\n        const totalCounts: number[] = [];\n        const maxCounts: number[] = [];\n        for (const c of ed.inner) {\n            // get counts for each of the sentences inside the entity\n            counts.push(new Map());\n            totalCounts.push(0);\n            let mxc = utils.maxSentencesForSentence(entities)(c);\n            if (optional) {\n                mxc++;\n            }\n            maxCounts.push(mxc);\n        }\n        const currentEntityCache: IStatCache = {\n            counts,\n            maxCounts,\n            optional,\n            optionalCounts: 0,\n            totalCounts\n        };\n        cache.set(cacheKey, currentEntityCache);\n        cacheStats = cache.get(cacheKey) as IStatCache;\n    }\n    // each sentence generation should use the ratio between the cache counts and the max possible\n    // combinations, so that generation follows the probability distribuition avoiding repetitions\n    let max = utils.maxSentencesForEntity(ed, entities);\n    if (optional) {\n        max++;\n    }\n    const totalAccumulated = cacheStats.totalCounts.reduce((p, n) => p + n) + cacheStats.optionalCounts;\n    if (totalAccumulated === max) {\n        // reset cache counts if max is reached\n        cacheStats.totalCounts = new Array(cacheStats.totalCounts.length).fill(0);\n        cacheStats.optionalCounts = 0;\n    }\n    const allCounts = cacheStats.maxCounts.map((c, i) => {\n        return cacheStats.totalCounts[i] / cacheStats.maxCounts[i];\n    });\n    let min = Math.min.apply(Math, allCounts);\n    if (cacheStats.optional && cacheStats.optionalCounts / max < min / max) {\n        min = min / max;\n    }\n    // randomly select an index from those that have the same probabilities to be selected\n    const counterIndexes: number[] = [];\n    allCounts.forEach((c: number, i) => {\n        if (c <= min || !c) {\n            counterIndexes.push(i);\n        }\n    });\n    if (cacheStats.optional && cacheStats.optionalCounts <= min / max) {\n        counterIndexes.push(-1);\n    }\n    utils.shuffle(counterIndexes);\n    const sentenceIndex = counterIndexes[0];\n    if (sentenceIndex === -1) {\n        cacheStats.optionalCounts++;\n        return []; // increment optional and return empty if optional is randomly selected\n    }\n    cacheStats.totalCounts[sentenceIndex]++;\n    const sentence = ed.inner[sentenceIndex];\n    let accumulator: ISentenceTokens[] = [];\n    // For slots where a sentence is composed of only one alias, we add the synonym tag,\n    // to denote that the generated alias is a synonym of its alias name\n    const slotSynonyms = ed.type === 'SlotDefinition' && sentence.length === 1 && sentence[0].type === 'Alias';\n    for (const t of sentence) {\n        // slots and alias entities generate the sentences recursively\n        const slotsInSentenceKeys: Set<string> = new Set([]);\n        if (t.type === 'Slot' || t.type === 'Alias') {\n            const def = entities[t.type];\n            const innerEntityKey = t.variation ? `${t.value}#${t.variation}` : t.value;\n            const currentCache = slotsInSentenceKeys.has(innerEntityKey) ? cacheStats.counts[sentenceIndex] : new Map();\n            slotsInSentenceKeys.add(innerEntityKey);\n            const sentenceVariation = await getVariationsFromEntity(def[innerEntityKey], entities, !!t.opt, currentCache);\n            if (sentenceVariation.length) {\n                const returnSentenceTokens = chatitoFormatPostProcess(sentenceVariation);\n                for (const returnToken of returnSentenceTokens) {\n                    if (slotSynonyms) {\n                        returnToken.synonym = t.value;\n                    }\n                    if (t.type === 'Slot') {\n                        if (def[innerEntityKey].args) {\n                            returnToken.args = def[innerEntityKey].args;\n                        }\n                        returnToken.value = returnToken.value.trim();\n                        returnToken.type = t.type;\n                        returnToken.slot = t.value;\n                    }\n                    accumulator = accumulator.concat(returnToken);\n                }\n            }\n        } else {\n            accumulator = accumulator.concat(t);\n        }\n    }\n    return accumulator;\n};\n\nexport const astFromString = (str: string) => chatito.parse(str);\nexport const datasetFromString = (str: string, writterFn: IUtteranceWriter) => {\n    const ast = astFromString(str);\n    return datasetFromAST(ast, writterFn);\n};\n\nexport const datasetFromAST = async (ast: IChatitoEntityAST[], writterFn: IUtteranceWriter) => {\n    const operatorDefinitions: IEntities = { Intent: {}, Slot: {}, Alias: {} };\n    if (!ast || !ast.length) {\n        return;\n    }\n    ast.forEach(od => {\n        let entity: IEntityDef;\n        if (od.type === 'IntentDefinition') {\n            entity = operatorDefinitions.Intent;\n        } else if (od.type === 'SlotDefinition') {\n            entity = operatorDefinitions.Slot;\n        } else if (od.type === 'AliasDefinition') {\n            entity = operatorDefinitions.Alias;\n        } else if (od.type === 'Comment') {\n            return; // skip comments\n        } else {\n            throw new Error(`Unknown definition definition for ${od.type}`);\n        }\n        const odKey = od.variation ? `${od.key}#${od.variation}` : od.key;\n        if (entity[odKey]) {\n            throw new Error(`Duplicate definition for ${od.type} '${odKey}'`);\n        }\n        entity[odKey] = od;\n    });\n    const intentKeys = Object.keys(operatorDefinitions.Intent);\n    if (!intentKeys || !intentKeys.length) {\n        throw new Error('No actions found');\n    }\n    for (const intentKey of intentKeys) {\n        // and for all tokens inside the sentence\n        const maxPossibleCombinations = utils.maxSentencesForEntity(operatorDefinitions.Intent[intentKey], operatorDefinitions);\n        let maxIntentExamples = maxPossibleCombinations; // counter that will change\n        const entityArgs = operatorDefinitions.Intent[intentKey].args;\n        // by default if no training or testing arguments are declared, all go to training\n        let trainingN = maxIntentExamples;\n        let testingN = 0;\n        let generatedTrainingExamplesCount = 0;\n        if (entityArgs) {\n            if (entityArgs.training) {\n                trainingN = parseInt(entityArgs.training, 10);\n                if (trainingN < 1) {\n                    throw new Error(`The 'training' argument for ${intentKey} must be higher than 0.`);\n                }\n                if (entityArgs.testing) {\n                    testingN = parseInt(entityArgs.testing, 10);\n                    if (testingN < 1) {\n                        throw new Error(`The 'testing' argument for ${intentKey} must be higher than 0.`);\n                    }\n                }\n            }\n            const intentMax = trainingN + testingN;\n            if (intentMax > maxIntentExamples) {\n                throw new Error(`Can't generate ${intentMax} examples. Max possible examples is ${maxIntentExamples}`);\n            } else if (intentMax < maxIntentExamples) {\n                maxIntentExamples = intentMax;\n            }\n        }\n        const maxEx = maxIntentExamples;\n        const globalCache: IChatitoCache = new Map();\n        const collitionsCache: { [id: string]: boolean } = {};\n        let duplicatesCounter = 0;\n        while (maxIntentExamples) {\n            const intentSentence = await getVariationsFromEntity(\n                operatorDefinitions.Intent[intentKey],\n                operatorDefinitions,\n                false,\n                globalCache\n            );\n            const utterance = chatitoFormatPostProcess(intentSentence);\n            const utteranceString = utterance.reduce((p, n) => p + n.value, '');\n            if (!collitionsCache[utteranceString]) {\n                collitionsCache[utteranceString] = true;\n                writterFn(utterance, intentKey, generatedTrainingExamplesCount < trainingN);\n                maxIntentExamples--;\n                generatedTrainingExamplesCount++;\n            } else {\n                duplicatesCounter++;\n                // note: trick to make all combinations for small datasets, but avoid them for large ones\n                const maxDupes = maxPossibleCombinations * maxPossibleCombinations;\n                const maxDupesLimit = Math.floor(maxPossibleCombinations / 2);\n                if (duplicatesCounter > (maxPossibleCombinations > 10000 ? maxDupesLimit : maxDupes)) {\n                    // prevent cases where duplicates are part of the entity definitions\n                    let m = `Too many duplicates while generating dataset! Looks like we have probably reached `;\n                    m += `the maximun ammount of possible unique generated examples. `;\n                    m += `The generator has stopped at ${maxEx - maxIntentExamples} examples for intent ${intentKey}.`;\n                    // tslint:disable-next-line:no-console\n                    console.warn(m);\n                    maxIntentExamples = 0;\n                }\n            }\n        }\n    }\n};\n","import { saveAs } from 'file-saver/FileSaver';\nimport * as React from 'react';\nimport * as rasaAdapter from '../../../src/adapters/rasa';\nimport * as snipsAdapter from '../../../src/adapters/snips';\nimport * as webAdapter from '../../../src/adapters/web';\nimport * as chatito from '../../../src/main';\nimport * as utils from '../../../src/utils';\nimport { chatitoPrism, rasaDefaultOptions, snipsDefaultOptions, tabs } from '../../lib/editorConfig';\nimport { debounce } from '../../lib/utils';\nimport * as es from './editorStyles';\n\nconst adapters = {\n    default: webAdapter,\n    rasa: rasaAdapter,\n    snips: snipsAdapter\n};\n\ninterface IEditorState {\n    error: null | string;\n    warning: null | string;\n    activeTabIndex: number;\n    showDrawer: boolean;\n    dataset: any;\n    adapterOptions: any;\n    currentAdapter: 'default' | 'rasa' | 'snips';\n    useCustomOptions: boolean;\n}\n\n// NOTE: for SSR, wrap the require in check for window\nlet CodeFlask = null;\nlet ReactJson = null;\nif (typeof window !== `undefined`) {\n    // tslint:disable-next-line:no-var-requires\n    CodeFlask = require('codeflask').default;\n    // tslint:disable-next-line:no-var-requires\n    ReactJson = require('react-json-view').default;\n}\n\nexport default class Editor extends React.Component<{}, IEditorState> {\n    public state: IEditorState = {\n        error: null,\n        warning: null,\n        activeTabIndex: 0,\n        showDrawer: false,\n        dataset: null,\n        adapterOptions: null,\n        currentAdapter: 'default',\n        useCustomOptions: false\n    };\n    private tabsContainer = React.createRef() as React.RefObject<HTMLDivElement>;\n    private codeflask = null;\n    private editorUpdatesSetupCount = 0;\n    private codeInputValue = '';\n    private tabs = [];\n\n    private debouncedTabDSLValidation = debounce(() => {\n        if (!this.codeInputValue.length) {\n            if (this.state.error || this.state.warning) {\n                this.setState({ error: null, warning: null });\n            }\n            return;\n        }\n        const validation = this.getDSLValidation(this.codeInputValue);\n        let newState = {};\n        if (validation && validation.error) {\n            newState = { error: validation.error, warning: null };\n        } else if (validation && validation.warning) {\n            newState = { error: null, warning: validation.warning };\n        } else {\n            newState = { error: null, warning: null };\n        }\n        this.setState(newState, () => {\n            this.saveToLocalStorage(true, false, false);\n        });\n    }, 300);\n\n    public componentDidMount() {\n        if (!CodeFlask) {\n            return;\n        }\n        this.loadFromLocalStorage(() => {\n            const flask = new CodeFlask('#my-code-editor', {\n                language: 'chatito',\n                lineNumbers: true\n            });\n            flask.addLanguage('chatito', chatitoPrism);\n            flask.onUpdate(code => {\n                if (!this.tabs || !this.tabs[this.state.activeTabIndex]) {\n                    return;\n                }\n                this.codeInputValue = code;\n                this.tabs[this.state.activeTabIndex].value = code;\n                // NOTE: ugly hack to know when codeflask is mounted (it makes 2 calls to update on mount)\n                if (this.editorUpdatesSetupCount < 2) {\n                    this.editorUpdatesSetupCount++;\n                } else {\n                    this.setState({ dataset: null });\n                    this.debouncedTabDSLValidation();\n                }\n            });\n            if (this.tabs && this.tabs[this.state.activeTabIndex]) {\n                flask.updateCode(this.tabs[this.state.activeTabIndex].value);\n            }\n            flask.setLineNumber();\n            this.codeflask = flask;\n        });\n    }\n\n    public render() {\n        const alertState = !!this.state.error ? 'error' : !!this.state.warning ? 'warning' : 'success';\n        return (\n            <es.EditorWrapper>\n                <es.EditorHeader>\n                    <es.TabsArea innerRef={this.tabsContainer}>{this.tabs.map(this.renderTabButton)}</es.TabsArea>\n                    <es.TabsAreaButton onClick={this.onAddFile} style={{ backgroundColor: '#1a6849' }}>\n                        New file\n                    </es.TabsAreaButton>\n                    <es.TabsAreaButton onClick={this.onToggleDrawer} disabled={!!this.state.error}>\n                        Generate Dataset\n                    </es.TabsAreaButton>\n                </es.EditorHeader>\n                <es.CodeStyles id=\"my-code-editor\" />\n                <es.AlertNotification state={alertState}>\n                    {' '}\n                    {this.state.error || this.state.warning || `Correct syntax!`}\n                </es.AlertNotification>\n                <es.EditorOverlay onClick={this.onCloseDrawer} showDrawer={this.state.showDrawer}>\n                    <es.Drawer onClick={e => e.stopPropagation()} showDrawer={this.state.showDrawer}>\n                        <es.CloseDrawerButton onClick={this.onCloseDrawer}>x</es.CloseDrawerButton>\n                        {this.renderDatasetGeneratorSettings()}\n                        {this.renderDatasetPreviewer()}\n                    </es.Drawer>\n                </es.EditorOverlay>\n            </es.EditorWrapper>\n        );\n    }\n\n    /* ================== Renderers ================== */\n    private renderDatasetGeneratorSettings = () => {\n        return (\n            <es.BlockWrapper>\n                <es.BlockWrapperTitle>Dataset generation settings</es.BlockWrapperTitle>\n                <div style={{ display: 'flex', flexDirection: 'row' }}>\n                    <es.DrawerFormField style={{ borderRight: '1px solid #ccc' }}>\n                        <label htmlFor=\"adapterSelect\">Dataset format: </label>\n                        <es.SelectWrapper>\n                            <select\n                                id=\"adapterSelect\"\n                                name=\"adapterSelect\"\n                                onChange={this.onAdapterChange}\n                                value={this.state.currentAdapter}\n                            >\n                                <option value=\"default\">Default</option>\n                                <option value=\"rasa\">Rasa NLU</option>\n                                <option value=\"snips\">Snips NLU</option>\n                            </select>\n                        </es.SelectWrapper>\n                    </es.DrawerFormField>\n                    <es.DrawerFormField>\n                        <es.CheckboxWrapper>\n                            <label>\n                                <input\n                                    type=\"checkbox\"\n                                    checked={this.state.useCustomOptions}\n                                    onChange={this.onCustomOptionsCheckboxChange}\n                                />\n                                Use custom options\n                            </label>\n                        </es.CheckboxWrapper>\n                    </es.DrawerFormField>\n                </div>\n                {this.renderEditAdapterOptions()}\n                <div style={{ padding: 20, textAlign: 'center' }}>\n                    <es.TabsAreaButton onClick={this.generateDataset}>Generate and download dataset!</es.TabsAreaButton>\n                </div>\n            </es.BlockWrapper>\n        );\n    };\n\n    private renderEditAdapterOptions = () => {\n        if (!this.state.useCustomOptions || !ReactJson) {\n            return null;\n        }\n        return (\n            <div>\n                <div style={{ padding: '10px 20px 0 20px', fontSize: 12, borderTop: '1px solid #ccc' }}>\n                    Edit the adapter custom initial options:\n                </div>\n                <div style={{ flex: '1', margin: '10px 20px' }}>\n                    <ReactJson\n                        style={{ padding: '10px' }}\n                        src={this.state.adapterOptions || {}}\n                        theme=\"summerfruit:inverted\"\n                        iconStyle=\"square\"\n                        enableClipboard={false}\n                        displayDataTypes={false}\n                        name={false}\n                        collapsed={false}\n                        onEdit={this.onEditAdapterOptions}\n                        onAdd={this.onEditAdapterOptions}\n                        onDelete={this.onEditAdapterOptions}\n                    />\n                </div>\n            </div>\n        );\n    };\n\n    private renderDatasetPreviewer = () => {\n        if (!this.state.dataset || !ReactJson) {\n            return null;\n        }\n        return (\n            <es.BlockWrapper>\n                <es.BlockWrapperTitle>Review the generated training dataset</es.BlockWrapperTitle>\n                <ReactJson\n                    style={{ padding: 20 }}\n                    src={this.state.dataset}\n                    theme=\"chalk\"\n                    iconStyle=\"square\"\n                    enableClipboard={false}\n                    displayDataTypes={false}\n                    name={false}\n                    collapsed={2}\n                />\n            </es.BlockWrapper>\n        );\n    };\n\n    private renderTabButton = (t, i) => {\n        const changeTab = () => this.changeTab(i);\n        const onCloseTab = this.closerTab(i);\n        return (\n            <es.TabButton active={this.state.activeTabIndex === i} key={`tab-${i}`} onClick={changeTab}>\n                {t.title}\n                <es.CloseTab onClick={onCloseTab} />\n            </es.TabButton>\n        );\n    };\n\n    /* ================== Event Handlers ================== */\n    private onCloseDrawer = () => this.setState({ showDrawer: false, dataset: null });\n\n    private onCustomOptionsCheckboxChange = e => {\n        let adapterOptions = {};\n        if (this.state.currentAdapter === 'rasa') {\n            adapterOptions = Object.assign({}, rasaDefaultOptions);\n        } else if (this.state.currentAdapter === 'snips') {\n            adapterOptions = Object.assign({}, snipsDefaultOptions);\n        }\n        this.setState({ useCustomOptions: e.target.checked, adapterOptions, dataset: null }, () => {\n            this.saveToLocalStorage(false, true, true);\n        });\n    };\n\n    private onAdapterChange = e => {\n        let adapterOptions = {};\n        if (e.target.value === 'rasa') {\n            adapterOptions = Object.assign({}, rasaDefaultOptions);\n        } else if (e.target.value === 'snips') {\n            adapterOptions = Object.assign({}, snipsDefaultOptions);\n        }\n        this.setState({ currentAdapter: e.target.value, adapterOptions, dataset: null }, () => {\n            this.saveToLocalStorage(false, true, true);\n        });\n    };\n\n    private onEditAdapterOptions = changes => {\n        if (changes && changes.updated_src) {\n            this.setState({ adapterOptions: changes.updated_src }, () => {\n                this.saveToLocalStorage(false, true, false);\n            });\n            return null;\n        }\n        return false;\n    };\n\n    private onAddFile = () => {\n        let filename = 'newFile';\n        if (window && window.prompt) {\n            filename = prompt('Please enter the new .chatito file name:', filename);\n        }\n        if (filename) {\n            this.tabs.push({ title: `${filename}.chatito`, value: '' });\n            this.changeTab(this.tabs.length - 1, () => {\n                this.tabsContainer.current.scrollTo({\n                    left: this.tabsContainer.current.scrollWidth,\n                    behavior: 'smooth'\n                });\n            });\n        }\n    };\n\n    private onToggleDrawer = async () => {\n        if (!this.state.showDrawer) {\n            if (this.validateChatitoFiles()) {\n                try {\n                    this.setState({ showDrawer: !this.state.showDrawer });\n                } catch (e) {\n                    return;\n                }\n            } else {\n                if (window && window.alert) {\n                    window.alert('Please fix the errors or warnings found in the code.');\n                }\n            }\n        }\n    };\n\n    /* ================== Utils ================== */\n\n    private saveToLocalStorage = (saveTabs, saveAdapterOptions, saveCurrentAdapter) => {\n        if (window && localStorage) {\n            if (saveTabs) {\n                localStorage.setItem('tabs', JSON.stringify(this.tabs));\n            }\n            if (saveAdapterOptions) {\n                localStorage.setItem('adapterOptions', this.state.useCustomOptions ? JSON.stringify(this.state.adapterOptions) : '');\n            }\n            if (saveCurrentAdapter) {\n                localStorage.setItem('currentAdapter', this.state.currentAdapter);\n            }\n        }\n    };\n\n    private loadFromLocalIfPresent = (key: string, parseAsJSON: boolean) => {\n        if (window && localStorage) {\n            try {\n                const item = localStorage.getItem(key);\n                if (!parseAsJSON) {\n                    return item;\n                }\n                if (item) {\n                    try {\n                        return JSON.parse(item);\n                    } catch (e) {\n                        // just catch the error\n                    }\n                }\n            } catch (e) {\n                // tslint:disable-next-line:no-console\n                console.error(e);\n            }\n        }\n    };\n\n    private loadFromLocalStorage = (cb: () => void) => {\n        if (window && localStorage) {\n            const newState: any = {};\n            const localTabs = this.loadFromLocalIfPresent('tabs', true);\n            const localAdapterOptions = this.loadFromLocalIfPresent('adapterOptions', true);\n            const localCurrentAdapter = this.loadFromLocalIfPresent('currentAdapter', false);\n            this.tabs = localTabs ? localTabs : tabs;\n            if (localAdapterOptions) {\n                newState.adapterOptions = localAdapterOptions;\n                newState.useCustomOptions = true;\n            }\n            if (localCurrentAdapter) {\n                newState.currentAdapter = localCurrentAdapter;\n            }\n            this.setState(newState, cb);\n        } else {\n            this.tabs = tabs;\n        }\n        cb();\n    };\n\n    private changeTab = (i: number, cb?: () => void) => {\n        this.setState({ activeTabIndex: i }, () => {\n            this.codeflask.updateCode(this.tabs[this.state.activeTabIndex].value);\n            this.codeflask.setLineNumber();\n            if (cb) {\n                setTimeout(cb, 600); // note; hack using setTimeout because codeflask uses a timeout on update code\n            }\n        });\n    };\n\n    private closerTab = (i: number) => {\n        return (e: React.SyntheticEvent) => {\n            if (e) {\n                e.stopPropagation();\n            }\n            if (this.tabs[i].value) {\n                if (!window.confirm(`Do you really want to remove '${this.tabs[i].title}'?`)) {\n                    return;\n                }\n            }\n            const ati = this.state.activeTabIndex;\n            let newActiveTabIndex = this.state.activeTabIndex;\n            if (ati === i && ati > 0) {\n                newActiveTabIndex = ati - 1;\n            }\n            this.tabs = [...this.tabs.slice(0, i), ...this.tabs.slice(i + 1)];\n            if (!this.tabs.length) {\n                this.tabs.push({ title: 'newFile.chatito', value: '' });\n                newActiveTabIndex = 0;\n            }\n            this.saveToLocalStorage(true, false, false);\n            this.changeTab(newActiveTabIndex);\n        };\n    };\n\n    private getDSLValidation = (dsl: string): null | { error?: string; warning?: string } => {\n        try {\n            const ast = chatito.astFromString(dsl);\n            const intentsWithoutLimit = ast.filter(entity => entity.type === 'IntentDefinition' && entity.args === null);\n            if (intentsWithoutLimit.length) {\n                return {\n                    warning: `Warning: Limit the number of generated examples for intents. E.g.: %[${\n                        intentsWithoutLimit[0].key\n                    }]('training': '100')`\n                };\n            }\n            return null;\n        } catch (e) {\n            const error =\n                e.constructor === Error\n                    ? e.toString()\n                    : `${e.name}: ${e.message} Line: ${e.location.start.line}, Column: ${e.location.start.column}`;\n            return { error };\n        }\n    };\n\n    private validateChatitoFiles = () => {\n        return !this.tabs.some((tab, i) => {\n            if (tab.value) {\n                const validation = this.getDSLValidation(tab.value);\n                if (validation !== null) {\n                    this.changeTab(i);\n                    return true;\n                }\n            }\n            return false;\n        });\n    };\n\n    private generateDataset = async () => {\n        let dataset: webAdapter.IDefaultDataset | snipsAdapter.ISnipsDataset | rasaAdapter.IRasaDataset | null = null;\n        const testingDataset = {};\n        const adapter = adapters[this.state.currentAdapter];\n        if (!adapter) {\n            return;\n        }\n        for (const [i, tab] of this.tabs.entries()) {\n            try {\n                if (dataset === null && this.state.useCustomOptions && this.state.adapterOptions) {\n                    dataset = JSON.parse(JSON.stringify(this.state.adapterOptions));\n                }\n                const { training, testing } = await adapter.adapter(tab.value, dataset);\n                dataset = training;\n                utils.mergeDeep(testingDataset, testing);\n            } catch (e) {\n                this.setState({ dataset: null, showDrawer: false }, () => {\n                    this.changeTab(i, () =>\n                        this.setState({ error: e.message }, () => {\n                            if (window && window.alert) {\n                                window.alert(`Please fix error: ${e.message}`);\n                            }\n                        })\n                    );\n                });\n                return;\n            }\n        }\n        const datasetBlob = new Blob([JSON.stringify(dataset)], { type: 'text/json;charset=utf-8' });\n        const testingBlob = new Blob([JSON.stringify(testingDataset)], { type: 'text/json;charset=utf-8' });\n        saveAs(datasetBlob, `training_dataset_${Math.round(new Date().getTime() / 1000)}.json`);\n        setTimeout(() => {\n            saveAs(testingBlob, `testing_dataset_${Math.round(new Date().getTime() / 1000)}.json`);\n        }, 100); // note: timeout to allow multiple downloads at once\n        this.setState({ dataset });\n    };\n}\n","import * as gen from '../main';\nimport { ISentenceTokens } from '../types';\nimport * as utils from '../utils';\n\nexport interface IRasaEntity {\n    start: number;\n    end: number;\n    value: string;\n    entity: string;\n}\nexport interface IRasaExample {\n    text: string;\n    intent: string;\n    entities: IRasaEntity[];\n}\nexport interface IRasaDataset {\n    rasa_nlu_data: {\n        regex_features: any[];\n        entity_synonyms: Array<{ value: string; synonyms: string[] }>;\n        common_examples: IRasaExample[];\n    };\n}\n\nexport interface IRasaTestingDataset {\n    [intent: string]: ISentenceTokens[][];\n}\n\nexport async function adapter(dsl: string, formatOptions?: any) {\n    const training: IRasaDataset = {\n        rasa_nlu_data: {\n            regex_features: [],\n            entity_synonyms: [],\n            common_examples: []\n        }\n    };\n    const testing = { rasa_nlu_data: { common_examples: [] as IRasaExample[] } };\n    const synonyms: { [key: string]: Set<string> } = {};\n    if (formatOptions) {\n        utils.mergeDeep(training, formatOptions);\n    }\n    const utteranceWriter = (utterance: ISentenceTokens[], intentKey: string, isTrainingExample: boolean) => {\n        const example = utterance.reduce(\n            (acc, next) => {\n                if (next.type === 'Slot' && next.slot) {\n                    if (next.synonym) {\n                        if (!synonyms[next.synonym]) {\n                            synonyms[next.synonym] = new Set();\n                        }\n                        if (next.synonym !== next.value) {\n                            synonyms[next.synonym].add(next.value);\n                        }\n                    }\n                    acc.entities.push({\n                        end: acc.text.length + next.value.length,\n                        entity: next.slot,\n                        start: acc.text.length,\n                        value: next.value\n                    });\n                }\n                acc.text += next.value;\n                return acc;\n            },\n            { text: '', intent: intentKey, entities: [] } as IRasaExample\n        );\n        if (isTrainingExample) {\n            training.rasa_nlu_data.common_examples.push(example);\n        } else {\n            testing.rasa_nlu_data.common_examples.push(example);\n        }\n    };\n    await gen.datasetFromString(dsl, utteranceWriter);\n    Object.keys(synonyms).forEach(k => {\n        training.rasa_nlu_data.entity_synonyms.push({\n            synonyms: [...synonyms[k]],\n            value: k\n        });\n    });\n    return { training, testing };\n}\n","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { Start: peg$parseStart },\n      peg$startRuleFunction  = peg$parseStart,\n\n      peg$c0 = function(od) { return od; },\n      peg$c1 = \"?\",\n      peg$c2 = peg$literalExpectation(\"?\", false),\n      peg$c3 = \"[\",\n      peg$c4 = peg$literalExpectation(\"[\", false),\n      peg$c5 = \"]\",\n      peg$c6 = peg$literalExpectation(\"]\", false),\n      peg$c7 = function(value) { return value },\n      peg$c8 = function(value, opt) { return { value: value, opt: !!opt  }; },\n      peg$c9 = \"%\",\n      peg$c10 = peg$literalExpectation(\"%\", false),\n      peg$c11 = function(value, args) { return { value: value, type: \"IntentDefinition\", args: args, location: location() } },\n      peg$c12 = \"\\r\\n\",\n      peg$c13 = peg$literalExpectation(\"\\r\\n\", false),\n      peg$c14 = \"\\n\",\n      peg$c15 = peg$literalExpectation(\"\\n\", false),\n      peg$c16 = \"~[\",\n      peg$c17 = peg$literalExpectation(\"~[\", false),\n      peg$c18 = \"@[\",\n      peg$c19 = peg$literalExpectation(\"@[\", false),\n      peg$c20 = peg$anyExpectation(),\n      peg$c21 = function(t) { return t.join(\"\"); },\n      peg$c22 = function(v) { return v.join(\"\"); },\n      peg$c23 = function(value) { return { value: value, type: \"Text\" }},\n      peg$c24 = function(s) { return s; },\n      peg$c25 = function(o, s) { return { type: o.type, key: o.value, args: o.args, location: o.location, inner: s } },\n      peg$c26 = \"#\",\n      peg$c27 = peg$literalExpectation(\"#\", false),\n      peg$c28 = function(id) { return id },\n      peg$c29 = function(value, variation, args) { return { value: value, type: \"SlotDefinition\", variation: variation, args: args, location: location() } },\n      peg$c30 = function(value, variation, opt) { return { value: value, opt: !!opt, variation: variation }; },\n      peg$c31 = \"@\",\n      peg$c32 = peg$literalExpectation(\"@\", false),\n      peg$c33 = function(op) { return { value: op.value, type: \"Slot\", opt: op.opt, location: location(), variation: op.variation } },\n      peg$c34 = function(o, s) { return { type: o.type, key: o.value, args: o.args, location: o.location, inner: s, variation: o.variation } },\n      peg$c35 = \"~\",\n      peg$c36 = peg$literalExpectation(\"~\", false),\n      peg$c37 = function(value) { return { value: value, type: \"AliasDefinition\", location: location() } },\n      peg$c38 = function(op) { return { value: op.value, type: \"Alias\", opt: op.opt } },\n      peg$c39 = function(o, s) { return { type: o.type, key: o.value, location: o.location, inner: s } },\n      peg$c40 = peg$otherExpectation(\"correct indentation\"),\n      peg$c41 = \" \",\n      peg$c42 = peg$literalExpectation(\" \", false),\n      peg$c43 = function(s) { return s.length === level * STEP; },\n      peg$c44 = function() { level++; return true; },\n      peg$c45 = function() { level--; return true; },\n      peg$c46 = \"//\",\n      peg$c47 = peg$literalExpectation(\"//\", false),\n      peg$c48 = function(c) { return { type: \"Comment\" , value: c.trim() }; },\n      peg$c49 = peg$otherExpectation(\"entity name\"),\n      peg$c50 = peg$otherExpectation(\"integer\"),\n      peg$c51 = /^[0-9]/,\n      peg$c52 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c53 = function() { return parseInt(text(), 10); },\n      peg$c54 = peg$otherExpectation(\"end of sentence\"),\n      peg$c55 = peg$otherExpectation(\"end of line \"),\n      peg$c56 = peg$otherExpectation(\"non windows end of line\"),\n      peg$c57 = peg$otherExpectation(\"windows end of line\"),\n      peg$c58 = \"(\",\n      peg$c59 = peg$literalExpectation(\"(\", false),\n      peg$c60 = \")\",\n      peg$c61 = peg$literalExpectation(\")\", false),\n      peg$c62 = function(args) {\n          return args.reduce(function (prev, curr) { prev[curr.key] = curr.value; return prev; }, {});\n      },\n      peg$c63 = \":\",\n      peg$c64 = peg$literalExpectation(\":\", false),\n      peg$c65 = \",\",\n      peg$c66 = peg$literalExpectation(\",\", false),\n      peg$c67 = function(ek, ev) { return { key: ek, value: ev }; },\n      peg$c68 = \"\\\"\",\n      peg$c69 = peg$literalExpectation(\"\\\"\", false),\n      peg$c70 = function(chars) { return chars.join(''); },\n      peg$c71 = \"'\",\n      peg$c72 = peg$literalExpectation(\"'\", false),\n      peg$c73 = \"\\\\\",\n      peg$c74 = peg$literalExpectation(\"\\\\\", false),\n      peg$c75 = function(char) { return char; },\n      peg$c76 = function(sequence) { return sequence; },\n      peg$c77 = \"b\",\n      peg$c78 = peg$literalExpectation(\"b\", false),\n      peg$c79 = function() { return \"\\b\";   },\n      peg$c80 = \"f\",\n      peg$c81 = peg$literalExpectation(\"f\", false),\n      peg$c82 = function() { return \"\\f\";   },\n      peg$c83 = \"n\",\n      peg$c84 = peg$literalExpectation(\"n\", false),\n      peg$c85 = function() { return \"\\n\";   },\n      peg$c86 = \"r\",\n      peg$c87 = peg$literalExpectation(\"r\", false),\n      peg$c88 = function() { return \"\\r\";   },\n      peg$c89 = \"t\",\n      peg$c90 = peg$literalExpectation(\"t\", false),\n      peg$c91 = function() { return \"\\t\";   },\n      peg$c92 = \"v\",\n      peg$c93 = peg$literalExpectation(\"v\", false),\n      peg$c94 = function() { return \"\\x0B\"; },\n      peg$c95 = \"u\",\n      peg$c96 = peg$literalExpectation(\"u\", false),\n      peg$c97 = function(digits) { return String.fromCharCode(parseInt(digits, 16)); },\n      peg$c98 = /^[0-9a-f]/i,\n      peg$c99 = peg$classExpectation([[\"0\", \"9\"], [\"a\", \"f\"]], false, true),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parseStart() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parseTopLevelStatement();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseCommentLine();\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseTopLevelStatement();\n        if (s1 === peg$FAILED) {\n          s1 = peg$parseCommentLine();\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTopLevelStatement() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parseIntentDefinition();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseSlotDefinition();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseAliasDefinition();\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c0(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseEntityOpt() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 63) {\n      s0 = peg$c1;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c2); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntityBody() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c3;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c4); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEntityKeywordLiteral();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s3 = peg$c5;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c7(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntityOptionalBody() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c3;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c4); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEntityKeywordLiteral();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseEntityOpt();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 93) {\n            s4 = peg$c5;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c8(s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntityIntentDefinition() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 37) {\n      s1 = peg$c9;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c10); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEntityBody();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseEntityArguments();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c11(s2, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAnyTextWithSlotAndAlias() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$currPos;\n    s4 = peg$currPos;\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c12) {\n      s5 = peg$c12;\n      peg$currPos += 2;\n    } else {\n      s5 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c13); }\n    }\n    peg$silentFails--;\n    if (s5 === peg$FAILED) {\n      s4 = void 0;\n    } else {\n      peg$currPos = s4;\n      s4 = peg$FAILED;\n    }\n    if (s4 !== peg$FAILED) {\n      s5 = peg$currPos;\n      peg$silentFails++;\n      if (input.charCodeAt(peg$currPos) === 10) {\n        s6 = peg$c14;\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c15); }\n      }\n      peg$silentFails--;\n      if (s6 === peg$FAILED) {\n        s5 = void 0;\n      } else {\n        peg$currPos = s5;\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        s6 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c16) {\n          s7 = peg$c16;\n          peg$currPos += 2;\n        } else {\n          s7 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c17); }\n        }\n        peg$silentFails--;\n        if (s7 === peg$FAILED) {\n          s6 = void 0;\n        } else {\n          peg$currPos = s6;\n          s6 = peg$FAILED;\n        }\n        if (s6 !== peg$FAILED) {\n          s7 = peg$currPos;\n          peg$silentFails++;\n          if (input.substr(peg$currPos, 2) === peg$c18) {\n            s8 = peg$c18;\n            peg$currPos += 2;\n          } else {\n            s8 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c19); }\n          }\n          peg$silentFails--;\n          if (s8 === peg$FAILED) {\n            s7 = void 0;\n          } else {\n            peg$currPos = s7;\n            s7 = peg$FAILED;\n          }\n          if (s7 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n              s8 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s8 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c20); }\n            }\n            if (s8 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7, s8];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      peg$savedPos = s2;\n      s3 = peg$c21(s3);\n    }\n    s2 = s3;\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c12) {\n          s5 = peg$c12;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c13); }\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 10) {\n            s6 = peg$c14;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c15); }\n          }\n          peg$silentFails--;\n          if (s6 === peg$FAILED) {\n            s5 = void 0;\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$currPos;\n            peg$silentFails++;\n            if (input.substr(peg$currPos, 2) === peg$c16) {\n              s7 = peg$c16;\n              peg$currPos += 2;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c17); }\n            }\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$currPos;\n              peg$silentFails++;\n              if (input.substr(peg$currPos, 2) === peg$c18) {\n                s8 = peg$c18;\n                peg$currPos += 2;\n              } else {\n                s8 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c19); }\n              }\n              peg$silentFails--;\n              if (s8 === peg$FAILED) {\n                s7 = void 0;\n              } else {\n                peg$currPos = s7;\n                s7 = peg$FAILED;\n              }\n              if (s7 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s8 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c20); }\n                }\n                if (s8 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7, s8];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c21(s3);\n        }\n        s2 = s3;\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c22(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseIntentAndSlotKeywordLiterals() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parseAnyTextWithSlotAndAlias();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c23(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseIntentAndSlotValidInner() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parseOptionalSlot();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseOptionalAlias();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseIntentAndSlotKeywordLiterals();\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseOptionalSlot();\n        if (s1 === peg$FAILED) {\n          s1 = peg$parseOptionalAlias();\n          if (s1 === peg$FAILED) {\n            s1 = peg$parseIntentAndSlotKeywordLiterals();\n          }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIntentAndSlotInnerStatements() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parseIntentAndSlotInnerStatement();\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseIntentAndSlotInnerStatement();\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIntentAndSlotInnerStatement() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseSamedent();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseIntentAndSlotValidInner();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseEOS();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c24(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIntentDefinition() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = peg$parseEOL();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEntityIntentDefinition();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseEOL();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseIndent();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseIntentAndSlotInnerStatements();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseDedent();\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c25(s2, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSlotVariationStartDefinition() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 35) {\n      s0 = peg$c26;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c27); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseSlotVariationDefinition() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parseSlotVariationStartDefinition();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSlotKeywordLiteral();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c28(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntitySlotDefinition() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c18) {\n      s1 = peg$c18;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c19); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSlotKeywordLiteral();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseSlotVariationDefinition();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 93) {\n            s4 = peg$c5;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseEntityArguments();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c29(s2, s3, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSlotOptionalBody() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c3;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c4); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSlotKeywordLiteral();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseSlotVariationDefinition();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseEntityOpt();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s5 = peg$c5;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c6); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c30(s2, s3, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseOptionalSlot() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 64) {\n      s1 = peg$c31;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c32); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSlotOptionalBody();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c33(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAnyTextWithAlias() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$currPos;\n    s4 = peg$currPos;\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c12) {\n      s5 = peg$c12;\n      peg$currPos += 2;\n    } else {\n      s5 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c13); }\n    }\n    peg$silentFails--;\n    if (s5 === peg$FAILED) {\n      s4 = void 0;\n    } else {\n      peg$currPos = s4;\n      s4 = peg$FAILED;\n    }\n    if (s4 !== peg$FAILED) {\n      s5 = peg$currPos;\n      peg$silentFails++;\n      if (input.charCodeAt(peg$currPos) === 10) {\n        s6 = peg$c14;\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c15); }\n      }\n      peg$silentFails--;\n      if (s6 === peg$FAILED) {\n        s5 = void 0;\n      } else {\n        peg$currPos = s5;\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        s6 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c16) {\n          s7 = peg$c16;\n          peg$currPos += 2;\n        } else {\n          s7 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c17); }\n        }\n        peg$silentFails--;\n        if (s7 === peg$FAILED) {\n          s6 = void 0;\n        } else {\n          peg$currPos = s6;\n          s6 = peg$FAILED;\n        }\n        if (s6 !== peg$FAILED) {\n          if (input.length > peg$currPos) {\n            s7 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c20); }\n          }\n          if (s7 !== peg$FAILED) {\n            s4 = [s4, s5, s6, s7];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      peg$savedPos = s2;\n      s3 = peg$c21(s3);\n    }\n    s2 = s3;\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c12) {\n          s5 = peg$c12;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c13); }\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 10) {\n            s6 = peg$c14;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c15); }\n          }\n          peg$silentFails--;\n          if (s6 === peg$FAILED) {\n            s5 = void 0;\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$currPos;\n            peg$silentFails++;\n            if (input.substr(peg$currPos, 2) === peg$c16) {\n              s7 = peg$c16;\n              peg$currPos += 2;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c17); }\n            }\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s7 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c20); }\n              }\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c21(s3);\n        }\n        s2 = s3;\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c22(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseSlotKeywordLiterals() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parseAnyTextWithAlias();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c23(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseSlotValidInner() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parseOptionalAlias();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseSlotKeywordLiterals();\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseOptionalAlias();\n        if (s1 === peg$FAILED) {\n          s1 = peg$parseSlotKeywordLiterals();\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSlotInnerStatement() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseSamedent();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSlotValidInner();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseEOS();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c24(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSlotInnerStatements() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parseSlotInnerStatement();\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseSlotInnerStatement();\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSlotDefinition() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = peg$parseEOL();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEntitySlotDefinition();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseEOL();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseIndent();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseSlotInnerStatements();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseDedent();\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c34(s2, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntityAliasDefinition() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 126) {\n      s1 = peg$c35;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c36); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEntityBody();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c37(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseOptionalAlias() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 126) {\n      s1 = peg$c35;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c36); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEntityOptionalBody();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c38(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAliasDefinition() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = peg$parseEOL();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEntityAliasDefinition();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseEOL();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseIndent();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseIntentAndSlotInnerStatements();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseDedent();\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c39(s2, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSamedent() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    if (input.charCodeAt(peg$currPos) === 32) {\n      s2 = peg$c41;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c42); }\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      if (input.charCodeAt(peg$currPos) === 32) {\n        s2 = peg$c41;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c42); }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = peg$currPos;\n      s2 = peg$c43(s1);\n      if (s2) {\n        s2 = void 0;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c40); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseIndent() {\n    var s0;\n\n    peg$savedPos = peg$currPos;\n    s0 = peg$c44();\n    if (s0) {\n      s0 = void 0;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDedent() {\n    var s0;\n\n    peg$savedPos = peg$currPos;\n    s0 = peg$c45();\n    if (s0) {\n      s0 = void 0;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAnyTextWithoutEOL() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$currPos;\n    s4 = peg$currPos;\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c12) {\n      s5 = peg$c12;\n      peg$currPos += 2;\n    } else {\n      s5 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c13); }\n    }\n    peg$silentFails--;\n    if (s5 === peg$FAILED) {\n      s4 = void 0;\n    } else {\n      peg$currPos = s4;\n      s4 = peg$FAILED;\n    }\n    if (s4 !== peg$FAILED) {\n      s5 = peg$currPos;\n      peg$silentFails++;\n      if (input.charCodeAt(peg$currPos) === 10) {\n        s6 = peg$c14;\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c15); }\n      }\n      peg$silentFails--;\n      if (s6 === peg$FAILED) {\n        s5 = void 0;\n      } else {\n        peg$currPos = s5;\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        if (input.length > peg$currPos) {\n          s6 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c20); }\n        }\n        if (s6 !== peg$FAILED) {\n          s4 = [s4, s5, s6];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      peg$savedPos = s2;\n      s3 = peg$c21(s3);\n    }\n    s2 = s3;\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c12) {\n          s5 = peg$c12;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c13); }\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 10) {\n            s6 = peg$c14;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c15); }\n          }\n          peg$silentFails--;\n          if (s6 === peg$FAILED) {\n            s5 = void 0;\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n              s6 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c20); }\n            }\n            if (s6 !== peg$FAILED) {\n              s4 = [s4, s5, s6];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c21(s3);\n        }\n        s2 = s3;\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c22(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseCommentLine() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parseEOL();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c46) {\n        s2 = peg$c46;\n        peg$currPos += 2;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c47); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseAnyTextWithoutEOL();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseEOS();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c48(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntityKeywordLiteral() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$currPos;\n    s4 = peg$currPos;\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c12) {\n      s5 = peg$c12;\n      peg$currPos += 2;\n    } else {\n      s5 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c13); }\n    }\n    peg$silentFails--;\n    if (s5 === peg$FAILED) {\n      s4 = void 0;\n    } else {\n      peg$currPos = s4;\n      s4 = peg$FAILED;\n    }\n    if (s4 !== peg$FAILED) {\n      s5 = peg$currPos;\n      peg$silentFails++;\n      if (input.charCodeAt(peg$currPos) === 10) {\n        s6 = peg$c14;\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c15); }\n      }\n      peg$silentFails--;\n      if (s6 === peg$FAILED) {\n        s5 = void 0;\n      } else {\n        peg$currPos = s5;\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        s6 = peg$currPos;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s7 = peg$c5;\n          peg$currPos++;\n        } else {\n          s7 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n        peg$silentFails--;\n        if (s7 === peg$FAILED) {\n          s6 = void 0;\n        } else {\n          peg$currPos = s6;\n          s6 = peg$FAILED;\n        }\n        if (s6 !== peg$FAILED) {\n          s7 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 63) {\n            s8 = peg$c1;\n            peg$currPos++;\n          } else {\n            s8 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c2); }\n          }\n          peg$silentFails--;\n          if (s8 === peg$FAILED) {\n            s7 = void 0;\n          } else {\n            peg$currPos = s7;\n            s7 = peg$FAILED;\n          }\n          if (s7 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n              s8 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s8 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c20); }\n            }\n            if (s8 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7, s8];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      peg$savedPos = s2;\n      s3 = peg$c21(s3);\n    }\n    s2 = s3;\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c12) {\n          s5 = peg$c12;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c13); }\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 10) {\n            s6 = peg$c14;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c15); }\n          }\n          peg$silentFails--;\n          if (s6 === peg$FAILED) {\n            s5 = void 0;\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$currPos;\n            peg$silentFails++;\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s7 = peg$c5;\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c6); }\n            }\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$currPos;\n              peg$silentFails++;\n              if (input.charCodeAt(peg$currPos) === 63) {\n                s8 = peg$c1;\n                peg$currPos++;\n              } else {\n                s8 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c2); }\n              }\n              peg$silentFails--;\n              if (s8 === peg$FAILED) {\n                s7 = void 0;\n              } else {\n                peg$currPos = s7;\n                s7 = peg$FAILED;\n              }\n              if (s7 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s8 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c20); }\n                }\n                if (s8 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7, s8];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c21(s3);\n        }\n        s2 = s3;\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c22(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c49); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseSlotKeywordLiteral() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$currPos;\n    s4 = peg$currPos;\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c12) {\n      s5 = peg$c12;\n      peg$currPos += 2;\n    } else {\n      s5 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c13); }\n    }\n    peg$silentFails--;\n    if (s5 === peg$FAILED) {\n      s4 = void 0;\n    } else {\n      peg$currPos = s4;\n      s4 = peg$FAILED;\n    }\n    if (s4 !== peg$FAILED) {\n      s5 = peg$currPos;\n      peg$silentFails++;\n      if (input.charCodeAt(peg$currPos) === 10) {\n        s6 = peg$c14;\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c15); }\n      }\n      peg$silentFails--;\n      if (s6 === peg$FAILED) {\n        s5 = void 0;\n      } else {\n        peg$currPos = s5;\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        s6 = peg$currPos;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 35) {\n          s7 = peg$c26;\n          peg$currPos++;\n        } else {\n          s7 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c27); }\n        }\n        peg$silentFails--;\n        if (s7 === peg$FAILED) {\n          s6 = void 0;\n        } else {\n          peg$currPos = s6;\n          s6 = peg$FAILED;\n        }\n        if (s6 !== peg$FAILED) {\n          s7 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 93) {\n            s8 = peg$c5;\n            peg$currPos++;\n          } else {\n            s8 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          peg$silentFails--;\n          if (s8 === peg$FAILED) {\n            s7 = void 0;\n          } else {\n            peg$currPos = s7;\n            s7 = peg$FAILED;\n          }\n          if (s7 !== peg$FAILED) {\n            s8 = peg$currPos;\n            peg$silentFails++;\n            if (input.charCodeAt(peg$currPos) === 63) {\n              s9 = peg$c1;\n              peg$currPos++;\n            } else {\n              s9 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c2); }\n            }\n            peg$silentFails--;\n            if (s9 === peg$FAILED) {\n              s8 = void 0;\n            } else {\n              peg$currPos = s8;\n              s8 = peg$FAILED;\n            }\n            if (s8 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s9 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s9 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c20); }\n              }\n              if (s9 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7, s8, s9];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      peg$savedPos = s2;\n      s3 = peg$c21(s3);\n    }\n    s2 = s3;\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c12) {\n          s5 = peg$c12;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c13); }\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 10) {\n            s6 = peg$c14;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c15); }\n          }\n          peg$silentFails--;\n          if (s6 === peg$FAILED) {\n            s5 = void 0;\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$currPos;\n            peg$silentFails++;\n            if (input.charCodeAt(peg$currPos) === 35) {\n              s7 = peg$c26;\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c27); }\n            }\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$currPos;\n              peg$silentFails++;\n              if (input.charCodeAt(peg$currPos) === 93) {\n                s8 = peg$c5;\n                peg$currPos++;\n              } else {\n                s8 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c6); }\n              }\n              peg$silentFails--;\n              if (s8 === peg$FAILED) {\n                s7 = void 0;\n              } else {\n                peg$currPos = s7;\n                s7 = peg$FAILED;\n              }\n              if (s7 !== peg$FAILED) {\n                s8 = peg$currPos;\n                peg$silentFails++;\n                if (input.charCodeAt(peg$currPos) === 63) {\n                  s9 = peg$c1;\n                  peg$currPos++;\n                } else {\n                  s9 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c2); }\n                }\n                peg$silentFails--;\n                if (s9 === peg$FAILED) {\n                  s8 = void 0;\n                } else {\n                  peg$currPos = s8;\n                  s8 = peg$FAILED;\n                }\n                if (s8 !== peg$FAILED) {\n                  if (input.length > peg$currPos) {\n                    s9 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c20); }\n                  }\n                  if (s9 !== peg$FAILED) {\n                    s4 = [s4, s5, s6, s7, s8, s9];\n                    s3 = s4;\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c21(s3);\n        }\n        s2 = s3;\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c22(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c49); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseInteger() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c51.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c52); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c51.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c52); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c53();\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c50); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOS() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$parseEOL();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseEOF();\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c54); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOL() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    s1 = peg$parseEOLNonWindows();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseEOLWindows();\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseEOLNonWindows();\n        if (s1 === peg$FAILED) {\n          s1 = peg$parseEOLWindows();\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c55); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOLNonWindows() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (input.charCodeAt(peg$currPos) === 10) {\n      s0 = peg$c14;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c15); }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c56); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOLWindows() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c12) {\n      s0 = peg$c12;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c13); }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c57); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOF() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    peg$silentFails++;\n    if (input.length > peg$currPos) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c20); }\n    }\n    peg$silentFails--;\n    if (s1 === peg$FAILED) {\n      s0 = void 0;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntityArguments() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c58;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c59); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseEntityArg();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseEntityArg();\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s3 = peg$c60;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c61); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c62(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntityArg() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (input.charCodeAt(peg$currPos) === 32) {\n      s2 = peg$c41;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c42); }\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      if (input.charCodeAt(peg$currPos) === 32) {\n        s2 = peg$c41;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c42); }\n      }\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseArgumentKeyValueString();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (input.charCodeAt(peg$currPos) === 32) {\n          s4 = peg$c41;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c42); }\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (input.charCodeAt(peg$currPos) === 32) {\n            s4 = peg$c41;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c42); }\n          }\n        }\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 58) {\n            s4 = peg$c63;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c64); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            if (input.charCodeAt(peg$currPos) === 32) {\n              s6 = peg$c41;\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c42); }\n            }\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              if (input.charCodeAt(peg$currPos) === 32) {\n                s6 = peg$c41;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c42); }\n              }\n            }\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseArgumentKeyValueString();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$currPos;\n                s8 = [];\n                if (input.charCodeAt(peg$currPos) === 32) {\n                  s9 = peg$c41;\n                  peg$currPos++;\n                } else {\n                  s9 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c42); }\n                }\n                while (s9 !== peg$FAILED) {\n                  s8.push(s9);\n                  if (input.charCodeAt(peg$currPos) === 32) {\n                    s9 = peg$c41;\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c42); }\n                  }\n                }\n                if (s8 === peg$FAILED) {\n                  s8 = null;\n                }\n                if (s8 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 44) {\n                    s9 = peg$c65;\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c66); }\n                  }\n                  if (s9 !== peg$FAILED) {\n                    s8 = [s8, s9];\n                    s7 = s8;\n                  } else {\n                    peg$currPos = s7;\n                    s7 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s7;\n                  s7 = peg$FAILED;\n                }\n                if (s7 === peg$FAILED) {\n                  s7 = null;\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = [];\n                  if (input.charCodeAt(peg$currPos) === 32) {\n                    s9 = peg$c41;\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c42); }\n                  }\n                  while (s9 !== peg$FAILED) {\n                    s8.push(s9);\n                    if (input.charCodeAt(peg$currPos) === 32) {\n                      s9 = peg$c41;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c42); }\n                    }\n                  }\n                  if (s8 === peg$FAILED) {\n                    s8 = null;\n                  }\n                  if (s8 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c67(s2, s6);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseArgumentKeyValueString() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s1 = peg$c68;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c69); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseDoubleQuotedString();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parseDoubleQuotedString();\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 34) {\n          s3 = peg$c68;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c69); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c70(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 39) {\n        s1 = peg$c71;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c72); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseSingleQuotedString();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseSingleQuotedString();\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 39) {\n            s3 = peg$c71;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c72); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c70(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseDoubleQuotedString() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    peg$silentFails++;\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s2 = peg$c68;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c69); }\n    }\n    if (s2 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s2 = peg$c73;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c74); }\n      }\n      if (s2 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 10) {\n          s2 = peg$c14;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c15); }\n        }\n      }\n    }\n    peg$silentFails--;\n    if (s2 === peg$FAILED) {\n      s1 = void 0;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.length > peg$currPos) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c20); }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c75(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s1 = peg$c73;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c74); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseStringEscapedChars();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c76(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseSingleQuotedString() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    peg$silentFails++;\n    if (input.charCodeAt(peg$currPos) === 39) {\n      s2 = peg$c71;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c72); }\n    }\n    if (s2 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s2 = peg$c73;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c74); }\n      }\n      if (s2 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 10) {\n          s2 = peg$c14;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c15); }\n        }\n      }\n    }\n    peg$silentFails--;\n    if (s2 === peg$FAILED) {\n      s1 = void 0;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.length > peg$currPos) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c20); }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c75(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s1 = peg$c73;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c74); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseStringEscapedChars();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c76(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseStringEscapedChars() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    if (input.charCodeAt(peg$currPos) === 39) {\n      s0 = peg$c71;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c72); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s0 = peg$c68;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c69); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 92) {\n          s0 = peg$c73;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c74); }\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 98) {\n            s1 = peg$c77;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c78); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c79();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 102) {\n              s1 = peg$c80;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c81); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c82();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 110) {\n                s1 = peg$c83;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c84); }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c85();\n              }\n              s0 = s1;\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.charCodeAt(peg$currPos) === 114) {\n                  s1 = peg$c86;\n                  peg$currPos++;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c87); }\n                }\n                if (s1 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c88();\n                }\n                s0 = s1;\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  if (input.charCodeAt(peg$currPos) === 116) {\n                    s1 = peg$c89;\n                    peg$currPos++;\n                  } else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c90); }\n                  }\n                  if (s1 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c91();\n                  }\n                  s0 = s1;\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$currPos;\n                    if (input.charCodeAt(peg$currPos) === 118) {\n                      s1 = peg$c92;\n                      peg$currPos++;\n                    } else {\n                      s1 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c93); }\n                    }\n                    if (s1 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c94();\n                    }\n                    s0 = s1;\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$currPos;\n                      if (input.charCodeAt(peg$currPos) === 117) {\n                        s1 = peg$c95;\n                        peg$currPos++;\n                      } else {\n                        s1 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c96); }\n                      }\n                      if (s1 !== peg$FAILED) {\n                        s2 = peg$currPos;\n                        s3 = peg$currPos;\n                        s4 = peg$parseHEXDIG();\n                        if (s4 !== peg$FAILED) {\n                          s5 = peg$parseHEXDIG();\n                          if (s5 !== peg$FAILED) {\n                            s6 = peg$parseHEXDIG();\n                            if (s6 !== peg$FAILED) {\n                              s7 = peg$parseHEXDIG();\n                              if (s7 !== peg$FAILED) {\n                                s4 = [s4, s5, s6, s7];\n                                s3 = s4;\n                              } else {\n                                peg$currPos = s3;\n                                s3 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s3;\n                              s3 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s3;\n                            s3 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s3;\n                          s3 = peg$FAILED;\n                        }\n                        if (s3 !== peg$FAILED) {\n                          s2 = input.substring(s2, peg$currPos);\n                        } else {\n                          s2 = s3;\n                        }\n                        if (s2 !== peg$FAILED) {\n                          peg$savedPos = s0;\n                          s1 = peg$c97(s2);\n                          s0 = s1;\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseHEXDIG() {\n    var s0;\n\n    if (peg$c98.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c99); }\n    }\n\n    return s0;\n  }\n\n   var STEP = 4; var level = 0; var entry = false; \n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","import * as gen from '../main';\nimport { ISentenceTokens } from '../types';\nimport * as utils from '../utils';\n\nexport interface ISnipsUtteranceData {\n    text: string;\n    entity?: string;\n    slot_name?: string;\n}\nexport interface ISnipsUtterance {\n    data: ISnipsUtteranceData[];\n}\nexport interface ISnipsIntent {\n    utterances: ISnipsUtterance[];\n}\nexport interface ISnipsDataset {\n    intents: { [intentKey: string]: ISnipsIntent };\n    entities: {\n        [entityKey: string]: {\n            data?: Array<{ value: string; synonyms: string[] }>;\n            use_synonyms?: boolean;\n            automatically_extensible?: boolean;\n        };\n    };\n    language: string;\n}\n\nexport interface ISnipsTestingDataset {\n    [intent: string]: ISentenceTokens[][];\n}\n\nexport async function adapter(dsl: string, formatOptions?: any) {\n    const training: ISnipsDataset = { language: 'en', entities: {}, intents: {} };\n    const testing: ISnipsTestingDataset = {};\n    if (formatOptions) {\n        utils.mergeDeep(training, formatOptions);\n    }\n    const synonymsForSlots: {\n        [slot: string]: { [key: string]: Set<string> };\n    } = {};\n    // const slots: Set<string> = new Set();\n    const entities: Set<string> = new Set();\n    const utteranceWriter = (utterance: ISentenceTokens[], intentKey: string, isTrainingExample: boolean) => {\n        if (isTrainingExample) {\n            if (!training.intents[intentKey]) {\n                training.intents[intentKey] = { utterances: [] };\n            }\n            const data = utterance.map(u => {\n                const ret: ISnipsUtteranceData = { text: u.value };\n                if (u.type === 'Slot' && u.slot) {\n                    ret.slot_name = u.slot;\n                    if (u.args) {\n                        Object.keys(u.args).forEach(key => {\n                            if (u.args && key === 'entity') {\n                                entities.add(u.args[key]);\n                                ret.entity = u.args[key];\n                            }\n                        });\n                    }\n                    if (!ret.entity) {\n                        ret.entity = u.slot;\n                        entities.add(u.slot);\n                    }\n                    if (u.synonym && ret.entity) {\n                        if (!synonymsForSlots[ret.entity]) {\n                            synonymsForSlots[ret.entity] = {};\n                        }\n                        const synonyms = synonymsForSlots[ret.entity];\n                        if (!synonyms[u.synonym]) {\n                            synonyms[u.synonym] = new Set();\n                        }\n                        if (u.synonym !== u.value) {\n                            synonyms[u.synonym].add(u.value);\n                        }\n                    }\n                }\n                return ret;\n            });\n            training.intents[intentKey].utterances.push({ data });\n        } else {\n            if (!testing[intentKey]) {\n                testing[intentKey] = [];\n            }\n            testing[intentKey].push(utterance);\n        }\n    };\n    await gen.datasetFromString(dsl, utteranceWriter);\n    entities.forEach(slotKey => {\n        if (!synonymsForSlots[slotKey]) {\n            if (!training.entities[slotKey]) {\n                training.entities[slotKey] = {};\n            }\n            return;\n        }\n        Object.keys(synonymsForSlots[slotKey]).forEach(synonymsValue => {\n            if (!training.entities[slotKey]) {\n                training.entities[slotKey] = {};\n            }\n            training.entities[slotKey].use_synonyms = true;\n            training.entities[slotKey].automatically_extensible = true;\n            if (!training.entities[slotKey].data) {\n                training.entities[slotKey].data = [];\n            }\n            (training.entities[slotKey].data as any[]).push({\n                synonyms: [...synonymsForSlots[slotKey][synonymsValue]],\n                value: synonymsValue\n            });\n        });\n    });\n    return { training, testing };\n}\n","import * as gen from '../main';\nimport { ISentenceTokens, IUtteranceWriter } from '../types';\nimport * as utils from '../utils';\n\nexport interface IDefaultDataset {\n    [intent: string]: ISentenceTokens[][];\n}\nexport async function adapter(dsl: string, formatOptions?: any) {\n    const training: IDefaultDataset = {};\n    const testing: IDefaultDataset = {};\n    if (formatOptions) {\n        utils.mergeDeep(training, formatOptions);\n    }\n    const utteranceWriter = (utterance: ISentenceTokens[], intentKey: string, isTrainingExample: boolean) => {\n        const dataset = isTrainingExample ? training : testing;\n        if (!dataset[intentKey]) {\n            dataset[intentKey] = [];\n        }\n        dataset[intentKey].push(utterance);\n    };\n    await gen.datasetFromString(dsl, utteranceWriter);\n    return { training, testing };\n}\n","import * as rasaAdapter from '../../src/adapters/rasa';\nimport * as snipsAdapter from '../../src/adapters/snips';\nimport * as webAdapter from '../../src/adapters/web';\n\nconst findRestaurantsByCity = `// Find restaurants by city\n%[findRestaurantsByCity]('training': '100', 'testing': '100')\n    ~[greet?] ~[please?] ~[find?] ~[restaurants] ~[located at] @[city] ~[city?]\n\n@[city]\n    ~[new york]\n    ~[san francisco]\n    ~[atlanta]\n\n~[greet]\n    hey\n    hi\n    hello\n    greetings\n\n~[located at]\n    at\n    in the area of\n    located at\n\n~[restaurants]\n    restaurants\n    places to eat\n    where to eat\n`;\n\nconst affirmative = `// Ways to say yes\n%[affirmative]('training': '100', 'testing': '100')\n    ~[yes]\n    ~[yes] ~[yes?] ~[please?]\n    you got that ~[yes]\n    you're goddamn ~[yes]\n    ~[yes] ~[wantThat]\n    yes that is ~[yes]\n    ~[yes] ~[yes?] ~[yes?] ~[yes?]\n    ~[wantThat]\n\n~[yes]\n    yes\n    right\n    affirmative\n    yes to that\n    correct\n    yep\n    yes sir\n    si\n    correcto\n    ok\n    right\n    allright\n\n~[wantThat]\n    i want that\n    i desire that\n    i agree\n    i want that\n    that is fine\n    that is correct\n    that is what i want\n    you understood me\n    that is right\n    that is what i mean\n    want that\n    im ok with that\n    ok its good\n    im good with that\n    ok its fine\n    is good\n    it is fine\n    im ok with this\n    im good with this\n`;\n\nconst bye = `// Ways to say goodbye\n%[bye]('training': '100', 'testing': '100')\n    ~[leaving?] ~[bye] ~[bye?] ~[bye?] ~[leaving?]\n    ~[leaving] ~[bye?]\n\n~[bye]\n    bye\n    goodbye\n    ttyl\n    gtg\n    adios\n    farewell\n    adieu\n    chao\n    chau\n\n~[leaving]\n    leaving\n    talk to you soon\n    have to go\n    got to go\n    talk to you later\n    heading out\n    im leaving now\n    going out\n`;\n\nconst greet = `// Ways to say hello\n%[greet]('training': '100', 'testing': '100')\n    ~[hi] ~[hi?] ~[hi?]\n    ~[greetings] ~[greetings?]\n    ~[hi] ~[greetings] ~[hi?]\n    ~[greetings] ~[hi] ~[hi?]\n\n~[hi]\n    hi\n    hello\n    hey\n    howdy\n    hola\n\n~[greetings]\n    greetings\n    how are you\n    whats up\n    how are you doing\n    how is it going\n    good morning\n    good afternoon\n    good day\n    good night\n    are you there\n    morning\n    how are things going\n    are you around\n    whatsup\n    sup\n    are you around?\n`;\n\nconst negative = `// Ways to say no\n%[negative]('training': '100', 'testing': '100')\n    ~[no] ~[no?] ~[please?]\n    ~[no] ~[notWhatIWant]\n    ~[no?] ~[notWhatIWant] ~[no?]\n    ~[no] ~[no?] ~[no?]\n\n~[no]\n    no\n    nope\n    negative\n    not correct\n    incorrect\n    no sir\n    wrong\n\n~[notWhatIWant]\n    dont want that\n    dont desire that\n    dont agree on that\n    didnt meant that\n    dont mean that\n    not what i want\n    not correct\n    wrong\n    bad\n    incorrect\n    im not ok with that\n    not good\n    its bad\n    that is bad\n    that is wrong\n    im not good with that\n    ok its not fine\n    definitely no\n    not good for me\n    its not ok\n    its not correct\n`;\n\nexport const tabs = [\n    { title: 'findRestaurantsByCity.chatito', value: findRestaurantsByCity },\n    { title: 'greet.chatito', value: greet },\n    { title: 'bye.chatito', value: bye },\n    { title: 'affirmative.chatito', value: affirmative },\n    { title: 'negative.chatito', value: negative }\n];\n\nexport const chatitoPrism = {\n    comments: [{ pattern: /^\\/\\/.*/, greedy: true }, { pattern: /((\\n|\\r\\n)+)\\/\\/.*/, greedy: true }],\n    intentDefinition: [\n        {\n            pattern: /^%\\[[^\\]]+\\]((\\(.+\\))?)/,\n            inside: { intentArguments: /((\\(.+\\))?)$/ }\n        },\n        {\n            pattern: /((\\n|\\r\\n)+)%\\[[^\\]]+\\]((\\(.+\\))?)/,\n            inside: { intentArguments: /((\\(.+\\))?)$/ }\n        }\n    ],\n    slotDefinition: [\n        {\n            pattern: /^\\@\\[[^\\]]+\\]((\\(.+\\))?)/,\n            inside: { slotArguments: /((\\(.+\\))?)$/ }\n        },\n        {\n            pattern: /((\\n|\\r\\n)+)\\@\\[[^\\]]+\\]((\\(.+\\))?)/,\n            inside: { slotArguments: /((\\(.+\\))?)$/ }\n        }\n    ],\n    slot: { pattern: /\\@\\[[^\\]]+(\\?)?\\]/, greedy: true },\n    alias: { pattern: /~\\[[^\\]]+(\\?)?\\]/, greedy: true },\n    default: { pattern: /[^\\r\\n]/i, greedy: true }\n};\n\nexport const webDefaultOptions: webAdapter.IDefaultDataset = {};\nexport const rasaDefaultOptions: rasaAdapter.IRasaDataset = {\n    rasa_nlu_data: {\n        regex_features: [],\n        entity_synonyms: [],\n        common_examples: []\n    }\n};\nexport const snipsDefaultOptions: snipsAdapter.ISnipsDataset = { language: 'en', entities: {}, intents: {} };\n","export function debounce(func, wait) {\n    let timeout;\n    return function(...args) {\n        const context = this;\n        clearTimeout(timeout);\n        timeout = setTimeout(() => func.apply(context, args), wait);\n    };\n}\n","import styled from 'styled-components';\n\nexport const AlertNotification = styled.div`\n    width: 100%;\n    background-color: ${({ state }: { state: 'error' | 'warning' | 'success' }) =>\n        state === 'error' ? '#c80000' : state === 'warning' ? '#7f8000' : '#008800'};\n    bottom: 0;\n    margin: auto;\n    right: 0;\n    text-align: center;\n    padding: 12px;\n    color: white;\n    z-index: 99;\n    font-size: 14px;\n`;\n\nexport const CodeStyles = styled.div`\n    white-space: pre-wrap;\n    position: relative;\n    margin: auto;\n    width: inherit;\n    height: calc(100vh - 210px) !important;\n    min-height: 400px;\n    background-color: #282a35;\n    > .codeflask {\n        background-color: #282a35;\n        > textarea.codeflask__textarea {\n            color: #282a35;\n            caret-color: #fff;\n        }\n        &.codeflask--has-line-numbers {\n            :before {\n                background-color: #3c3c4c;\n            }\n            > pre {\n                width: auto !important;\n            }\n            div.codeflask__lines {\n                z-index: 3;\n                height: auto !important;\n                padding: 10px 4px 0 0;\n                > .codeflask__lines__line {\n                    color: #6473a0;\n                    background-color: #3c3c4c;\n                }\n            }\n        }\n        *::-webkit-scrollbar {\n            width: 10px;\n            height: 10px;\n        }\n        *::-webkit-scrollbar-thumb {\n            background-color: #7c7c9c;\n            box-shadow: inset 0 0 2px rgba(0, 0, 0, 0.8);\n        }\n        *::-webkit-scrollbar-track {\n            box-shadow: inset 0 0 2px rgba(0, 0, 0, 0.8);\n        }\n        *::-webkit-scrollbar-corner {\n            background-color: transparent;\n        }\n    }\n    .token.comments {\n        color: #999;\n    }\n    .token.intentDefinition {\n        color: #ef82c3;\n    }\n    .token.slotDefinition {\n        color: #ffaf56;\n    }\n    .token.slot {\n        color: #ffaf56;\n    }\n    .token.alias {\n        color: #a0e7fb;\n    }\n    .token.default {\n        color: #e2e2dd;\n    }\n    .token.intentArguments {\n        color: #b5669e;\n    }\n    .token.slotArguments {\n        color: #7a9d98;\n    }\n`;\n\nexport const TabButton = styled.div`\n    cursor: pointer;\n    display: inline-block;\n    background-color: ${({ active }: { active: boolean }) => (active ? '#282A35' : '#3c3c4c')};\n    font-size: 12px;\n    color: #ededed;\n    padding: 13px 3px 13px 13px;\n    border-right: 1px solid #2c2c3c;\n    zoom: 1;\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n`;\n\nexport const CloseTab = styled.div`\n    :after {\n        content: 'x';\n    }\n    padding: 8px;\n    margin-left: 8px;\n    display: inline-block;\n    color: #ccf;\n    line-height: 10px;\n    font-size: 14px;\n    cursor: pointer;\n    font-weight: bold;\n`;\n\nexport const EditorHeader = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    max-width: 100%;\n    background-color: #3c3c4c;\n    padding-left: 40px;\n    padding-top: 10px;\n`;\n\nexport const TabsAreaButton = styled.button`\n    cursor: pointer;\n    background-color: #6c1de2;\n    font-size: 12px;\n    color: #efefef;\n    line-height: 14px;\n    padding: 8px 24px;\n    white-space: nowrap;\n    margin: auto 10px;\n    border-radius: 4px;\n    border-color: #333;\n    -webkit-transition: 0.25s ease;\n    -moz-transition: 0.25s ease;\n    -o-transition: 0.25s ease;\n    transition: 0.25s ease;\n    &:first-of-type {\n        margin-left: 20px;\n    }\n    :disabled {\n        border: 1px solid #999999;\n        background-color: #cccccc;\n        color: #666666;\n    }\n`;\n\nexport const TabsArea = styled.div`\n    width: auto;\n    max-width: 100%;\n    white-space: nowrap;\n    position: relative;\n    overflow-x: auto;\n    overflow-y: hidden;\n    -webkit-overflow-scrolling: touch;\n    &::-webkit-scrollbar {\n        height: 6px;\n    }\n    &::-webkit-scrollbar-thumb {\n        background-color: #7c7c9c;\n        -webkit-box-shadow: inset 0 0 2px rgba(0, 0, 0, 0.8);\n    }\n    &::-webkit-scrollbar-track {\n        -webkit-box-shadow: inset 0 0 2px rgba(0, 0, 0, 0.8);\n    }\n    *::-webkit-scrollbar-corner {\n        background-color: transparent;\n    }\n`;\n\nexport const EditorWrapper = styled.div`\n    width: 90vw;\n    overflow: auto;\n    margin: auto;\n    position: relative;\n    -webkit-box-shadow: 0px 0px 36px 2px rgba(0, 0, 0, 0.63);\n    -moz-box-shadow: 0px 0px 36px 2px rgba(0, 0, 0, 0.63);\n    box-shadow: 0px 0px 36px 2px rgba(0, 0, 0, 0.63);\n`;\n\nexport const Drawer = styled.div`\n    z-index: 99;\n    position: absolute;\n    background-color: #352252;\n    -webkit-box-shadow: -5px 0px 5px -5px rgba(0, 0, 0, 0.55);\n    -moz-box-shadow: -5px 0px 5px -5px rgba(0, 0, 0, 0.55);\n    box-shadow: -5px 0px 5px -5px rgba(0, 0, 0, 0.55);\n    top: 0;\n    right: 0;\n    max-width: 700px;\n    height: 100%;\n    width: ${({ showDrawer }: { showDrawer: boolean }) => (showDrawer ? `100%` : `0px`)};\n    -webkit-transition: 0.65s ease;\n    -moz-transition: 0.65s ease;\n    -o-transition: 0.65s ease;\n    transition: 0.65s ease;\n    overflow: auto;\n`;\n\nexport const EditorOverlay = styled.div`\n    z-index: 999;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.6);\n    visibility: ${({ showDrawer }: { showDrawer: boolean }) => (showDrawer ? 'visible' : 'hidden')};\n    -webkit-transition: 0.25s ease;\n    -moz-transition: 0.25s ease;\n    -o-transition: 0.25s ease;\n    transition: 0.25s ease;\n`;\n\nexport const BlockWrapper = styled.div`\n    background-color: #e4e4e4;\n    margin: 20px;\n    overflow: auto;\n    border-radius: 8px;\n    -webkit-box-shadow: 0px 0px 50px 0px rgba(0, 0, 0, 0.4);\n    -moz-box-shadow: 0px 0px 50px 0px rgba(0, 0, 0, 0.4);\n    box-shadow: 0px 0px 50px 0px rgba(0, 0, 0, 0.4);\n    clear: both;\n`;\n\nexport const BlockWrapperTitle = styled.div`\n    background-color: #6b5a86;\n    color: #efefef;\n    font-size: 13px;\n    padding: 8px 10px;\n    border-top-left-radius: 8px;\n    border-top-right-radius: 8px;\n`;\n\nexport const CloseDrawerButton = styled.div`\n    cursor: pointer;\n    color: white;\n    font-size: 16px;\n    padding: 8px;\n    font-weight: bold;\n    margin: 8px 20px 8px 20px;\n    float: right;\n`;\n\nexport const DrawerFormField = styled.div`\n    padding: 10px 20px;\n    display: flex;\n    align-items: center;\n    flex: 1;\n    > label {\n        font-size: 12px;\n        padding-right: 10px;\n    }\n`;\n\nexport const SelectWrapper = styled.div`\n    position: relative;\n    z-index: 0;\n    display: inline-block;\n    overflow: hidden;\n    height: auto;\n    padding: 0 5px 0 0;\n    margin: 0 5px 0 0;\n    border-radius: 5px;\n    border: solid 1px #ccc;\n    background-color: #fff;\n    :before {\n        position: absolute;\n        z-index: 1;\n        content: '\\\\25BE';\n        top: 50%;\n        right: 10px;\n        margin-top: -9px;\n    }\n    select {\n        position: relative;\n        z-index: 2;\n        outline: none;\n        width: 120%;\n        padding: 5px 20px 5px 10px;\n        background-color: transparent;\n        background-image: none;\n        -webkit-appearance: none;\n        border: none;\n        box-shadow: none;\n    }\n`;\n\nexport const CheckboxWrapper = styled.div`\n    font-size: 12px;\n    text-decoration: underline;\n    cursor: pointer;\n    input {\n        margin-right: 10px;\n        cursor: pointer;\n    }\n`;\n","import styled, { injectGlobal } from 'styled-components';\n\n// tslint:disable-next-line:no-unused-expression\ninjectGlobal`\n  *, *::after, *::before {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n  :focus { outline: none; }\n  h1, h2 { display: inline; font-size: 20px; }\n  ::-moz-focus-inner { border: 0; }\n  html, body, #app {\n      padding: 0;\n      margin: 0;\n      display: flex;\n      flex-direction: column;\n      flex: 1;\n      height: auto !important;\n      font-family: 'Helvetica Neue', Arial, Helvetica, sans-serif;\n      background-color: #ccc;\n  }\n  a { text-decoration: none; }\n  body {\n      box-sizing: border-box;\n      min-height: 100vh;\n      background: #ececec;\n      padding: 0;\n  }\n  a:focus, a:active, a:any-link { text-decoration: none; }\n`;\n\nexport const Header = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    h1,\n    h2 {\n        display: inline;\n    }\n    a {\n        text-decoration: none;\n        color: #990adb;\n    }\n    a:hover {\n        color: #b92afb;\n    }\n    color: '#444';\n    margin: 20px;\n`;\n","import * as React from 'react';\n\nexport default function Logo() {\n    return (\n        <svg fill=\"#990ADB\" viewBox=\"0 0 14 12\" version=\"1.1\" x=\"0px\" y=\"0px\">\n            <g stroke=\"none\" fill=\"none\">\n                <g fill=\"#990ADB\">\n                    <path d=\"M7.032,5.504 C6.672,5.504 6.384,5.792 6.384,6.152 C6.384,6.512 6.672,6.8 7.032,6.8 C7.392,6.8 7.68,6.512 7.68,6.152 C7.688,5.792 7.392,5.504 7.032,5.504 Z M3.88,5.504 C3.52,5.504 3.232,5.792 3.232,6.152 C3.232,6.512 3.52,6.8 3.88,6.8 C4.24,6.8 4.528,6.512 4.528,6.152 C4.528,5.792 4.24,5.504 3.88,5.504 Z M9.544,6.152 C9.544,6.512 9.832,6.8 10.192,6.8 C10.552,6.8 10.84,6.512 10.84,6.152 C10.84,5.792 10.552,5.504 10.192,5.504 C9.832,5.504 9.544,5.792 9.544,6.152 Z\" />\n                    <path d=\"M13.024,3.096 L13.024,3.08 C13.024,2.744 12.856,1.272 12.368,0.816 C12.208,0.664 12.048,0.64 11.944,0.648 C11.544,0.664 10.976,1.088 10.336,1.6 C10.264,1.656 10.184,1.72 10.12,1.768 L4.328,1.768 C4.184,1.768 4.032,1.76 3.888,1.768 C3.856,1.744 3.832,1.736 3.8,1.704 C3.232,1.16 2.68,0.664 2.24,0.648 C2.136,0.64 1.976,0.672 1.816,0.816 C1.376,1.232 1.192,2.48 1.16,2.952 C1.136,2.968 1.12,2.984 1.104,3.008 C0.624,3.624 0.312,4.584 0.312,5.456 L0.312,6.8 C0.312,8.064 1.024,9.184 2.104,9.848 L2.104,11.392 C2.104,11.456 2.152,11.504 2.216,11.504 C2.248,11.504 2.272,11.496 2.296,11.472 L3.392,10.376 C3.728,10.456 4.08,10.496 4.424,10.496 L9.752,10.496 C11.992,10.496 13.752,8.872 13.752,6.8 L13.752,5.456 C13.752,4.624 13.472,3.704 13.024,3.096 Z M13.08,6.8 C13.08,8.496 11.616,9.824 9.752,9.824 L4.424,9.824 C2.528,9.824 0.984,8.464 0.984,6.8 L0.984,5.456 C0.984,4.736 1.248,3.92 1.632,3.424 C1.648,3.4 1.672,3.368 1.688,3.344 C1.824,3.192 1.816,3.064 1.832,2.888 C1.848,2.68 1.88,2.472 1.928,2.264 C1.984,1.968 2.048,1.552 2.248,1.32 C2.424,1.376 2.784,1.664 3.328,2.184 C3.584,2.424 3.744,2.44 4,2.44 L10.024,2.44 C10.248,2.44 10.392,2.416 10.76,2.128 C10.992,1.944 11.672,1.408 11.936,1.336 C12.128,1.552 12.36,2.536 12.36,3.048 C12.352,3.184 12.384,3.312 12.464,3.424 C12.84,3.92 13.088,4.776 13.088,5.472 L13.08,6.8 Z\" />\n                </g>\n            </g>\n        </svg>\n    );\n}\n","import 'babel-polyfill';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport Editor from '../components/Editor/Editor';\nimport { Header } from '../components/globalStyles';\nimport Logo from '../components/Logo';\n\n// NOTE: gatsby global for prefix\ndeclare var __PATH_PREFIX__;\n\nexport default class Index extends React.Component<{}, {}> {\n    public render() {\n        return (\n            <div>\n                <Helmet>\n                    <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={`${__PATH_PREFIX__}/apple-touch-icon.png`} />\n                    <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={`${__PATH_PREFIX__}/favicon-32x32.png`} />\n                    <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={`${__PATH_PREFIX__}/favicon-16x16.png`} />\n                    <link rel=\"manifest\" href={`${__PATH_PREFIX__}/site.webmanifest`} />\n                    <link rel=\"mask-icon\" href={`${__PATH_PREFIX__}/safari-pinned-tab.svg`} color=\"#5bbad5\" />\n                    <meta name=\"msapplication-TileColor\" content=\"#da532c\" />\n                    <meta name=\"theme-color\" content=\"#ffffff\" />\n                    <title>Chatito DSL - Generate dataset for chatbots</title>\n                    <meta\n                        name=\"keywords\"\n                        content=\"chatbot, dataset generation, dataset generator, generate datasets, rasa nlu, snips nlu, chatbot dataset, datasets for chatbots\"\n                    />\n                    <meta\n                        name=\"description\"\n                        content=\"Chatito helps you helps you generate datasets for natural language understanding models using a simple DSL\"\n                    />\n                </Helmet>\n                <Header>\n                    <div style={{ display: 'inline-block', width: 50, minWidth: 50, height: 43 }}>\n                        <Logo />\n                    </div>\n                    <div style={{ paddingLeft: 24 }}>\n                        <h1>\n                            <a href=\"https://github.com/rodrigopivi/Chatito\">Chatito</a>\n                        </h1>\n                        <h2>\n                            &nbsp;helps you generate datasets for natural language understanding models using a simple DSL&nbsp;\n                            <a href=\"https://github.com/rodrigopivi/Chatito\">Read the docs</a>\n                        </h2>\n                    </div>\n                </Header>\n                <Editor />\n            </div>\n        );\n    }\n}\n"],"sourceRoot":""}