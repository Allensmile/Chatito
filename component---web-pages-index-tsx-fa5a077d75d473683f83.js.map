{"version":3,"sources":["webpack:///./web/pages/index.tsx","webpack:///./src/utils.ts","webpack:///./src/main.ts","webpack:///./web/components/Editor/Editor.tsx","webpack:///./src/adapters/rasa.ts","webpack:///./parser/chatito.js","webpack:///./src/adapters/snips.ts","webpack:///./src/adapters/web.ts","webpack:///./web/lib/editorConfig.ts","webpack:///./web/lib/utils.ts","webpack:///./web/components/Editor/editorStyles.tsx","webpack:///./web/components/globalStyles.tsx","webpack:///./web/components/Logo.tsx"],"names":["__webpack_require__","React","_reactHelmet","_interopRequireDefault","_Editor","_globalStyles","_Logo","u","e","__esModule","default","l","Symbol","r","iterator","constructor","prototype","p","t","n","length","enumerable","configurable","writable","Object","defineProperty","key","d","setPrototypeOf","getPrototypeOf","__proto__","h","Index","ReferenceError","Component","createElement","rel","sizes","href","concat","type","color","name","content","Header","style","display","width","minWidth","height","paddingLeft","g","153","o","value","a","mergeDeep","maxSentencesForEntity","maxSentencesForSentence","shuffle","array","i","j","Math","_ref","entities","sentence","reduce","accumulator","acc","def","innerEntityKey","Error","inner","innerEntityVariations","opt","ed","map","val","isObject","item","_typeof","Array","target","source","utils","c","s","done","Promise","resolve","then","this","arguments","apply","chatito","getVariationsFromEntity","_asyncToGenerator","regeneratorRuntime","mark","_callee","optional","cache","variationKey","cacheKey","cacheStats","counts","totalCounts","maxCounts","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","mxc","currentEntityCache","max","allCounts","min","counterIndexes","sentenceIndex","slotSynonyms","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","slotsInSentenceKeys","currentCache","sentenceVariation","returnSentence","wrap","_context","prev","next","t0","catch","return","finish","optionalCounts","fill","abrupt","Set","Map","sent","ret","synonym","args","t1","stop","_x","_x2","_x3","_x4","astFromString","str","writterFn","ast","datasetFromAST","_ref2","_callee2","operatorDefinitions","intentKeys","_i","intentKey","maxPossibleCombinations","maxIntentExamples","entityArgs","trainingN","testingN","generatedTrainingExamplesCount","intentMax","maxEx","globalCache","collitionsCache","duplicatesCounter","intentSentence","utterance","utteranceString","maxDupes","maxDupesLimit","m","_context2","Intent","Slot","Alias","od","entity","odKey","training","parseInt","testing","chatitoFormatPostProcess","console","_x5","_x6","data","arr","arrShadow","lastWord","replace","trim","assign","_FileSaver","_interopRequireWildcard","rasaAdapter","snipsAdapter","webAdapter","_editorConfig","_utils2","es","hasOwnProperty","call","getOwnPropertyDescriptor","get","set","isArray","push","TypeError","y","v","toString","from","b","w","x","C","k","A","adapters","rasa","snips","CodeFlask","ReactJson","window","Editor","error","warning","activeTabIndex","showDrawer","dataset","adapterOptions","currentAdapter","useCustomOptions","debounce","_this","codeInputValue","newState","validation","getDSLValidation","setState","saveToLocalStorage","state","BlockWrapper","BlockWrapperTitle","flexDirection","DrawerFormField","borderRight","htmlFor","SelectWrapper","id","onChange","onAdapterChange","CheckboxWrapper","checked","onCustomOptionsCheckboxChange","renderEditAdapterOptions","padding","textAlign","TabsAreaButton","onClick","generateDataset","fontSize","borderTop","flex","margin","src","theme","iconStyle","enableClipboard","displayDataTypes","collapsed","onEdit","onEditAdapterOptions","onAdd","onDelete","onCloseTab","closerTab","TabButton","active","changeTab","title","CloseTab","rasaDefaultOptions","snipsDefaultOptions","changes","updated_src","filename","prompt","tabs","tabsContainer","current","scrollTo","left","scrollWidth","behavior","validateChatitoFiles","alert","saveTabs","saveAdapterOptions","saveCurrentAdapter","localStorage","JSON","parseAsJSON","cb","localTabs","loadFromLocalIfPresent","localAdapterOptions","localCurrentAdapter","codeflask","updateCode","setLineNumber","setTimeout","ati","newActiveTabIndex","_toConsumableArray","slice","dsl","intentsWithoutLimit","filter","column","some","tab","testingDataset","adapter","_loop","_ret","datasetBlob","testingBlob","_context3","_step$value","_ref3","_slicedToArray","message","entries","delegateYield","Blob","saveAs","Date","getTime","create","_this2","loadFromLocalStorage","flask","language","lineNumbers","chatitoPrism","code","editorUpdatesSetupCount","debouncedTabDSLValidation","alertState","EditorWrapper","EditorHeader","TabsArea","innerRef","renderTabButton","onAddFile","backgroundColor","onToggleDrawer","disabled","CodeStyles","AlertNotification","EditorOverlay","onCloseDrawer","Drawer","stopPropagation","CloseDrawerButton","renderDatasetGeneratorSettings","renderDatasetPreviewer","formatOptions","synonyms","utteranceWriter","rasa_nlu_data","regex_features","entity_synonyms","common_examples","isTrainingExample","example","slot","end","start","text","intent","gen","peg$SyntaxError","expected","found","location","captureStackTrace","child","parent","ctor","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","class","escapedParts","parts","classEscape","inverted","any","other","description","hex","ch","charCodeAt","toUpperCase","descriptions","sort","join","module","exports","SyntaxError","parse","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","Start","peg$parseStart","peg$startRuleFunction","peg$c0","peg$c1","peg$c2","peg$literalExpectation","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","variation","peg$c30","peg$c31","peg$c32","peg$c33","op","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$otherExpectation","peg$c41","peg$c42","peg$c43","level","STEP","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c54","peg$classExpectation","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","curr","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","ek","ev","peg$c68","peg$c69","peg$c70","chars","peg$c71","peg$c72","peg$c73","peg$c74","peg$c75","char","peg$c76","sequence","peg$c77","peg$c78","peg$c79","peg$c80","peg$c81","peg$c82","peg$c83","peg$c84","peg$c85","peg$c86","peg$c87","peg$c88","peg$c89","peg$c90","peg$c91","peg$c92","peg$c93","peg$c94","peg$c95","peg$c96","peg$c97","digits","String","fromCharCode","peg$c98","peg$c99","peg$currPos","peg$savedPos","peg$posDetailsCache","line","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","peg$computeLocation","ignoreCase","peg$computePosDetails","pos","details","startPos","endPos","startPosDetails","endPosDetails","offset","peg$fail","s0","s1","peg$parseTopLevelStatement","peg$parseCommentLine","s2","s5","peg$parseEOL","s3","peg$parseEntityBody","peg$parseEntityArguments","peg$parseIndent","peg$parseIntentInnerStatement","peg$parseDedent","s4","substr","peg$parseSlotKeywordLiteral","peg$parseSlotVariationDefinition","peg$parseBasicInnerStatements","peg$parseEntityOpt","peg$parseEntityKeywordLiteral","peg$parseBasicKeywordLiterals","s6","s7","charAt","peg$parseBasicInnerStatement","peg$parseSamedent","peg$parseOptionalAlias","peg$parseEOS","peg$parseIntentKeywordLiterals","s8","peg$parseOptionalSlot","s9","peg$parseEOLNonWindows","peg$parseEOLWindows","peg$parseEntityArg","peg$parseArgumentKeyValueString","peg$parseDoubleQuotedString","peg$parseSingleQuotedString","peg$parseStringEscapedChars","peg$parseHEXDIG","substring","test","peg$buildStructuredError","synonymsForSlots","intents","utterances","slotKey","synonymsValue","comments","pattern","greedy","intentDefinition","inside","intentArguments","slotDefinition","slotArguments","alias","webDefaultOptions","func","wait","timeout","_len","_key","context","clearTimeout","_styledComponents","styled","div","withConfig","displayName","button","f","_ref4","465","freeze","defineProperties","raw","injectGlobal","_templateObject","466","viewBox","version","stroke"],"mappings":"iYAAAA,EAAA,KACA,IAAAC,0SAAAD,EAAA,IACAE,EAAAC,EAAAH,EAAA,MACAI,EAAAD,EAAAH,EAAA,MACAK,EAAAL,EAAA,KACAM,EAAAH,EAAAH,EAAA,eAAAO,EAAAC,GAAA,OAAAA,KAAAC,WAAAD,GAAAE,QAAAF,GAAA,SAAAG,EAAAH,GAAA,OAAAG,EAAA,mBAAAC,QAAA,WAAAC,EAAAD,OAAAE,UAAA,SAAAN,GAAA,OAAAK,EAAAL,IAAA,SAAAA,GAAA,OAAAA,GAAA,mBAAAI,QAAAJ,EAAAO,cAAAH,QAAAJ,IAAAI,OAAAI,UAAA,SAAAH,EAAAL,QAAA,SAAAS,EAAAT,EAAAU,GAAA,QAAAC,EAAA,EAAAA,EAAAD,EAAAE,OAAAD,IAAA,KAAAN,EAAAK,EAAAC,GAAAN,EAAAQ,WAAAR,EAAAQ,aAAA,EAAAR,EAAAS,cAAA,YAAAT,MAAAU,UAAA,GAAAC,OAAAC,eAAAjB,EAAAK,EAAAa,IAAAb,IAAA,SAAAc,EAAAnB,GAAA,OAAAmB,EAAAH,OAAAI,eAAAJ,OAAAK,eAAA,SAAArB,GAAA,OAAAA,EAAAsB,WAAAN,OAAAK,eAAArB,QAAA,SAAAuB,EAAAvB,EAAAU,GAAA,OAAAa,EAAAP,OAAAI,gBAAA,SAAApB,EAAAU,GAAA,OAAAV,EAAAsB,UAAAZ,EAAAV,MAAAU,GAAA,IAKqBc,uIALrB,SAAAxB,EAAAU,GAAA,OAAAA,GAAA,WAAAP,EAAAO,IAAA,mBAAAA,EAAA,SAAAV,GAAA,YAAAA,EAAA,UAAAyB,eAAA,oEAAAzB,EAAA,CAAAA,GAAAU,EAKqBc,sRAAc/B,EAAMiC,kDAEjC,OACIjC,EAAAkC,cAAA,WACIlC,EAAAkC,cAACjC,EAADQ,QAAA,KACIT,EAAAkC,cAAA,QAAMC,IAAN,mBAA6BC,MAA7B,UAA6CC,KAAA,GAAAC,OAAA,sCAC7CtC,EAAAkC,cAAA,QAAMC,IAAN,OAAiBI,KAAjB,YAAkCH,MAAlC,QAAgDC,KAAA,GAAAC,OAAA,mCAChDtC,EAAAkC,cAAA,QAAMC,IAAN,OAAiBI,KAAjB,YAAkCH,MAAlC,QAAgDC,KAAA,GAAAC,OAAA,mCAChDtC,EAAAkC,cAAA,QAAMC,IAAN,WAAqBE,KAAA,GAAAC,OAAA,kCACrBtC,EAAAkC,cAAA,QAAMC,IAAN,YAAsBE,KAAA,GAAAC,OAAA,WAAtB,0BAAwEE,MAAM,YAC9ExC,EAAAkC,cAAA,QAAMO,KAAN,0BAAqCC,QAAQ,YAC7C1C,EAAAkC,cAAA,QAAMO,KAAN,cAAyBC,QAAQ,YACjC1C,EAAAkC,cAAA,aARJ,+CASIlC,EAAAkC,cAAA,QACIO,KADJ,WAEIC,QAAQ,mIAEZ1C,EAAAkC,cAAA,QACIO,KADJ,cAEIC,QAAQ,gHAGhB1C,EAAAkC,cAAC9B,EAADuC,OAAA,KACI3C,EAAAkC,cAAA,OAAKU,OAASC,QAAF,eAA2BC,MAA3B,GAAsCC,SAAtC,GAAoDC,OAAQ,KACpEhD,EAAAkC,cAAC7B,EAADI,QAFR,OAIIT,EAAAkC,cAAA,OAAKU,OAASK,YAAa,KACvBjD,EAAAkC,cAAA,UACIlC,EAAAkC,cAAA,KAAGG,KAAK,0CAFhB,YAIIrC,EAAAkC,cAAA,uGAEIlC,EAAAkC,cAAA,KAAGG,KAAK,0CA7BxB,oBAiCIrC,EAAAkC,cAAC/B,EAADM,QAlCR,YAAAO,EAAAE,EAAAH,UAAAH,GAAAK,EAFac,GAEbd,EAAAR,QAAAyC,GAAAC,IAAA,SAAA5C,EAAAU,EAAAC,GAAA,sBAAAN,EAAAL,GAAA,OAAAK,EAAA,mBAAAD,QAAA,iBAAAA,OAAAE,SAAA,SAAAN,GAAA,cAAAA,GAAA,SAAAA,GAAA,OAAAA,GAAA,mBAAAI,QAAAJ,EAAAO,cAAAH,QAAAJ,IAAAI,OAAAI,UAAA,gBAAAR,OAAA,SAAA6C,EAAA7C,EAAAU,EAAAC,GAAA,OAAAD,KAAAV,EAAAgB,OAAAC,eAAAjB,EAAAU,GAAAoC,MAAAnC,EAAAE,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAU,GAAAC,EAAAX,EAAA,SAAA+C,EAAA/C,GAAA,OAAA+C,EAAA,mBAAA3C,QAAA,WAAAC,EAAAD,OAAAE,UAAA,SAAAN,GAAA,OAAAK,EAAAL,IAAA,SAAAA,GAAA,OAAAA,GAAA,mBAAAI,QAAAJ,EAAAO,cAAAH,QAAAJ,IAAAI,OAAAI,UAAA,SAAAH,EAAAL,QAAAgB,OAAAC,eAAAP,EAAA,cAAAoC,OAAA,IAAApC,EAAAsC,UAAAtC,EAAAuC,sBAAAvC,EAAAwC,wBAAAxC,EAAAyC,aAAA,EAAAzC,EAAAyC,QCRgB,SAAAC,GACpB,IAAK,IAAIC,EAAID,SAAb,EAA+BC,EAA/B,EAAAA,IAA2C,CACvC,IAAMC,EAAIC,WAAWA,eAAiBF,EAAtC,IADuCG,GAEfJ,EAADE,GAAWF,EAFKC,IAEtCD,EAFsCC,GAAAG,EAAA,GAE5BJ,EAF4BE,GAAAE,EAAA,KAMxC,IAAMN,EAA0B,SAAAO,GAAA,OAAyB,SAAAC,GAyB5D,OAxBWA,EAAAC,OAAgB,SAAAC,EAAAlD,GACvB,IAAImD,EAAJD,EACA,GAAIlD,iBAAJ,UAAyBA,OAAoB,CACzC,IAAMoD,EAAML,EAAS/C,EAArBsB,MACM+B,EAAiBrD,sBAAiBA,EAAjBA,kBAA4BA,EAA5BA,WAA4CA,EAAnEoC,MACA,IAAKgB,EAALC,GAA0B,CACtB,aAAIrD,OAOA,MAAM,IAAAsD,MAAA,GAAAjC,OAAarB,EAAbsB,KAAA,kBAAAD,OAANgC,IANAD,MACIG,SAAWnB,MAAFiB,EAAyB/B,KAAM,UACxCd,IAAKR,EAFaoC,MAGlBd,KAAM,mBAMlB,IAAIkC,EAAwBjB,EAAsBa,EAAtBb,GAA5BQ,GACI/C,EAAJyD,KACID,IAEJL,KAEJ,OAAAA,GAtBJ,KAAAnD,EAAAwC,wBAAAG,EA2BG,IAAMJ,EAAwB,SAAAmB,EAAAX,GAAA,OACjCW,EAAAH,MAAAI,IAAanB,EAAbO,IAAAE,OAAuD,SAAAE,EAAAS,GAAA,OAAcT,EAAdS,+BAI3D,IAAMC,EAAW,SAAAC,GAAA,OAAeA,cAAQC,EAAAD,KAA6BE,cAArCF,IAAf,OAA2EA,eAClE,SAAbxB,EAAa2B,EAAAC,GAatB,OAZIL,MAAoBA,EAAxBK,IACI5D,uBAA4B,SAAAE,GACpBqD,EAASK,EAAb1D,KACSyD,EAALzD,IACIF,4BAEJgC,EAAU2B,EAAV3B,GAAuB4B,EAAvB5B,KAEAhC,uBAA+B4D,EAA/B5D,OAIZ2D,kJC1DJ,IAAAE,0SAAArF,EAAA,eAAAqD,EAAA7C,EAAAU,EAAAC,EAAAN,EAAAwC,EAAAE,EAAAM,GAAA,QAAAyB,EAAA9E,EAAA+C,GAAAM,GAAA0B,EAAAD,EAAAhC,MAAA,MAAA9C,GAAA,YAAAW,EAAAX,GAAA8E,EAAAE,KAAAtE,EAAAqE,GAAAE,QAAAC,QAAAH,GAAAI,KAAA9E,EAAAwC,GAAA,SAAAE,EAAA/C,GAAA,sBAAAU,EAAA0E,KAAAzE,EAAA0E,UAAA,WAAAJ,QAAA,SAAA5E,EAAA0C,GAAA,IAAAM,EAAArD,EAAAsF,MAAA5E,EAAAC,GAAA,SAAAmE,EAAA9E,GAAA6C,EAAAQ,EAAAhD,EAAA0C,EAAA+B,EAAAC,EAAA,OAAA/E,GAAA,SAAA+E,EAAA/E,GAAA6C,EAAAQ,EAAAhD,EAAA0C,EAAA+B,EAAAC,EAAA,QAAA/E,GAAA8E,OAAA,MAcA,IAAMS,EAAU/F,EAAhB,KAIMgG,EAAA,eAAAhC,EAAAiC,EAAAC,mBAAAC,KAA0B,SAAAC,EAAAxB,EAAAX,EAAAoC,EAAAC,GAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA3B,EAAA4B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtD,EAAAE,EAAAqD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA5G,EAAA6G,EAAAzD,EAAAC,EAAAyD,EAAAC,EAAAC,EAAA,OAAAhC,mBAAAiC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAA/B,EAOP3B,uBAAmBA,EAAnBA,WAPO,GAAA4B,EAAA,GAAAjE,OAQRqC,EARQpC,KAAA,KAAAD,OAQGqC,EARHlD,KAAAa,OAAAgE,GAAAE,EASXH,MATWE,GAAA,CAAA4B,EAAAE,KAAA,SAexB,IAfwB5B,KAAAC,KAAAC,KAAAC,KAAAC,KAAAC,SAAAqB,EAAAC,KAAA,GAexBrB,EAAgBpC,EAAhBH,MAAA7D,OAAAE,cAAA+F,GAAAI,EAAAD,EAAAsB,QAAA9C,MAAAqB,KAAWvB,EAAe2B,EAAA3D,MAEtBoD,OAAY,IAAZA,KACAC,UAHsBO,EAIZ7B,6BAJYC,GAKtBe,GACIa,IAEJN,UAvBoBwB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAG,GAAAH,EAAAI,MAAA,IAAA1B,KAAAC,EAAAqB,EAAAG,GAAA,QAAAH,EAAAC,KAAA,GAAAD,EAAAC,KAAA,GAAAxB,GAAA,MAAAG,EAAAyB,QAAAzB,EAAAyB,SAAA,WAAAL,EAAAC,KAAA,IAAAvB,EAAA,CAAAsB,EAAAE,KAAA,eAAAvB,EAAA,eAAAqB,EAAAM,OAAA,mBAAAN,EAAAM,OAAA,YAAAvB,GA0BpBT,OADmCA,EAEnCE,UAFmCA,EAGnCP,SAHmCA,EAInCsC,eAJmC,EAKnChC,eAEJL,WACAG,EAAaH,MAAbG,GAjCwB,WAAAW,EAqClB/B,0BArCkBpB,GAsC5BoC,GACIe,IAEqBX,EAAAE,YAAAxC,OAA8B,SAAAlD,EAAAE,GAAA,OAAUF,EAAVE,IAAmBsF,EAzC9CkC,iBA0C5BvB,IAEIX,cAAyB,IAAAvB,MAAUuB,cAAVrF,QAAAwH,KAAzBnC,GACAA,oBA7CwBY,EA+CVZ,EAAAG,UAAA/B,IAAyB,SAAAS,EAAAzB,GACvC,OAAO4C,iBAA4BA,YAAnC5C,KAhDwByD,EAkDlBvD,oBAlDkBsD,GAmDxBZ,YAAuBA,mBAAkCa,EAA7DF,IACIE,MApDwBC,KAwD5BF,UAAkB,SAAA/B,EAAAzB,IACVyB,OAAJA,IACIiC,YAGJd,YAAuBA,kBAA6Ba,EAAxDF,GACIG,WAEJlC,cAhE4B,KAAAmC,EAiEND,EAjEM,KAAAa,EAAAE,KAAA,gBAmExB7B,mBAnEwB2B,EAAAS,OAAA,qBAsE5BpC,mBAtE4BvC,EAuEXU,QAvEW4C,GAAApD,KAAAqD,EA2EP7C,+BAAgCV,UA3EzB,UA2EkDA,UA3ElDwD,KAAAC,KAAAC,SAAAQ,EAAAC,KAAA,GAAAR,EAAA3D,EAAAtD,OAAAE,YAAA,WAAA4G,GAAAI,EAAAD,EAAAS,QAAA9C,KAAA,CAAA4C,EAAAE,KAAA,YAAApH,EAAA4G,EAAAxE,MAAAyE,EA8EiB,IAAAe,QACrC5H,iBA/EoB,UA+ECA,OA/ED,CAAAkH,EAAAE,KAAA,gBAAAhE,EAgFRL,EAAS/C,EAhFDsB,MAAA+B,EAiFGrD,sBAAiBA,EAAjBA,kBAA4BA,EAA5BA,WAA4CA,EAjF/CoC,MAAA0E,EAkFCD,SAA0CtB,SAA1CsB,GAA6E,IAlF9EgB,IAmFpBhB,SAnFoBK,EAAAE,KAAA,GAoFYtC,EAAwB1B,EAAxB0B,OAAyD9E,EAAzD8E,IApFZgC,GAAA,SAAAC,EAAAG,EAAAY,MAqFpB5H,SAA8B8G,EACHD,EAAA9D,OACnB,SAAAkE,EAAAC,GACI,IAAMW,GACFzG,KAAM8F,EADmB9F,KAEzBc,MAAO+E,QAAaC,EAAKhF,OAK7B,OAHIgF,EAAJY,UACID,UAAcX,EAAdW,SAEJA,IAEF3F,MAAF,GAAad,KAAM,SAEvBiF,IACIS,UAAyBhH,EAAzBgH,OAEJ,SAAIhH,SACIoD,KAAJ6E,OACIjB,OAAsB5D,KAAtB4D,MAEJA,QAAuBA,QAAvBA,OACAA,OAAsBhH,EAAtBgH,KACAA,OAAsBhH,EAAtBgH,OAEJ9D,EAAcA,SAAdA,IA9GgBgE,EAAAE,KAAA,iBAiHpBlE,EAAcA,SAAdA,GAjHoB,QAAAsD,KAAAU,EAAAE,KAAA,iBAAAF,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAgB,GAAAhB,EAAAI,MAAA,IAAAb,KAAAC,EAAAQ,EAAAgB,GAAA,QAAAhB,EAAAC,KAAA,GAAAD,EAAAC,KAAA,GAAAX,GAAA,MAAAG,EAAAY,QAAAZ,EAAAY,SAAA,WAAAL,EAAAC,KAAA,IAAAV,EAAA,CAAAS,EAAAE,KAAA,eAAAV,EAAA,eAAAQ,EAAAM,OAAA,mBAAAN,EAAAM,OAAA,mBAAAN,EAAAS,OAAA,SAAAzE,GAAA,yBAAAgE,EAAAiB,SAAAjD,EAAAR,OAAA,wDAA1B,gBAAA0D,EAAAC,EAAAC,EAAAC,GAAA,OAAAzF,EAAA8B,MAAAF,KAAAC,YAAA,GAuHO6D,EAAgB,SAAAC,GAAA,OAAiB5D,QAAjB4D,0CACI,SAAAA,EAAAC,GAC7B,IAAMC,EAAMH,EAAZC,GACA,OAAOG,IAAPF,IAGG,IAAME,EAAA,eAAAC,EAAA9D,EAAAC,mBAAAC,KAAiB,SAAA6D,EAAAH,EAAAD,GAAA,IAAAK,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAnF,mBAAAiC,KAAA,SAAAmD,GAAA,cAAAA,EAAAjD,KAAAiD,EAAAhD,MAAA,UAAA2B,GACesB,UAAYC,QAAUC,UAC3D5B,GAASA,EAFazI,OAAA,CAAAkK,EAAAhD,KAAA,eAAAgD,EAAAzC,OAAA,oBAK1BgB,UAAY,SAAA6B,GACR,IAAAC,EACA,wBAAID,OACAC,EAAS1B,EAAT0B,YACG,sBAAID,OACPC,EAAS1B,EAAT0B,SACG,wBAAID,OAEJ,gBAAIA,OAAuB,OAG9B,MAAM,IAAAlH,MAAA,qCAAAjC,OAA+CmJ,EAArDlJ,OAJAmJ,EAAS1B,EAAT0B,MAMJ,IAAMC,EAAQF,sBAAkBA,EAAlBA,gBAA4BA,EAA5BA,WAA6CA,EAA3DhK,IACA,GAAIiK,EAAJC,GACI,MAAM,IAAApH,MAAA,4BAAAjC,OAAsCmJ,EAAtClJ,KAAA,MAAAD,OAAAqJ,EAAN,MAEJD,UAtBsBzB,EAwBP1I,YAAYyI,EAxBLsB,UAyBNrB,EAzBM9I,OAAA,CAAAkK,EAAAhD,KAAA,cA0BhB,IAAA9D,MA1BgB,2BAAA2F,EAAA,cAAAA,EAAAD,EAAA9I,QAAA,CAAAkK,EAAAhD,KAAA,YAAA8B,EAAAF,EAAAC,GAAAE,EA8BUhF,wBAA4B4E,SAA5B5E,GA9BV4E,GAAAK,EAAAD,EAAAE,EAgCHN,YAhCGd,KAAAqB,EAAAF,EAAAG,EAAA,EAAAC,EAAA,GAAAH,EAAA,CAAAe,EAAAhD,KAAA,aAsCdiC,EAtCcsB,SAAA,CAAAP,EAAAhD,KAAA,eAuCdkC,EAAYsB,SAASvB,EAATuB,SAAZtB,KAvCc,IAAAc,EAAAhD,KAAA,eAyCJ,IAAA9D,MAAA,+BAAAjC,OAAA6H,EAzCI,wCA2CVG,EA3CUwB,QAAA,CAAAT,EAAAhD,KAAA,eA4CVmC,EAAWqB,SAASvB,EAATuB,QAAXrB,KA5CU,IAAAa,EAAAhD,KAAA,eA8CA,IAAA9D,MAAA,8BAAAjC,OAAA6H,EA9CA,0CAAAO,EAkDAH,EAlDAC,GAAAH,GAAA,CAAAgB,EAAAhD,KAAA,eAoDR,IAAA9D,MAAA,kBAAAjC,OAAAoI,EAAA,wCAAApI,OApDQ+H,IAAA,QAqDPK,EAAJL,IACHA,KAtDc,QAAAM,EAAAN,EAAAO,EA0Da,IA1Db9B,IAAA+B,KAAAC,EAAA,cAAAT,EAAA,CAAAgB,EAAAhD,KAAA,gBAAAgD,EAAAhD,KAAA,GA8DWtC,EACzBiE,SADyBjE,QA9DX6E,GAAA,QAAAG,EAAAM,EAAAtC,KAAAiC,EAoEAe,EApEAhB,GAAAE,EAqEMD,EAAA9G,OAAiB,SAAAlD,EAAAE,GAAA,OAAUF,EAAIE,EAAdmC,OArEvB,IAsEbwH,EAALI,IAKOH,IAAAI,EAGcd,EAHdA,EAAAe,EAImBrH,WAAWsG,EAJ9B,GAKCU,GAAqBV,QAAzBc,KAAsFE,EAAA,qFAGlFA,iEACAA,0CAAqCT,EAArCS,oCAJkF,KAMlFY,gBACA3B,OAhBJQ,QACAlB,MAAgCc,EAAhCd,GACAU,IACAI,KA1EcY,EAAAhD,KAAA,iBAAA6B,IAAAmB,EAAAhD,KAAA,iCAAAgD,EAAAjC,SAAAW,EAAApE,SAAjB,gBAAAsG,EAAAC,GAAA,OAAApC,EAAAjE,MAAAF,KAAAC,YAAA,GAAA3E,EAAA4I,eAAAvJ,EA8Fb,IAAMyL,EAA2B,SAAAI,GAC7B,IAAMC,EAAMD,EAAAjI,OACR,SAAAC,EAAAkE,EAAAzE,EAAAyI,GACI,GAAIlI,EAAJhD,OAAwB,CACpB,IAAMmL,EAAWnI,EAAYA,SAA7B,GACImI,SAAkBjE,EAAlBiE,MAAJ,SAAmCA,OAC/BnI,EAAYA,SAAZA,IACI5B,KAAM+J,EAD4B/J,KAElCc,OAAQiJ,QAAiBjE,EAAlBhF,OAAAkJ,QAAA,aAGXpI,eAGJA,UAcJ,OAZIP,IAAMyI,SAAV,IAGSlI,EAAYA,SAAZA,SAALqI,QACIrI,QAEAA,EAAJhD,SACIgD,EAAYA,SAAZA,GAAsC5C,OAAAkL,UAAkBtI,EAAYA,SAA9B,IAClCd,MAAOc,EAAYA,SAAZA,iCAInBA,OASR,OALIiI,EAAJjL,SACIiL,KAAS7K,OAAAkL,UAAkBL,EAAlB,IACL/I,MAAO+I,iCAGfA,4UClRJ,IAAAM,EAAA3M,EAAA,KACAC,EAAA2M,EAAA5M,EAAA,IACA6M,EAAAD,EAAA5M,EAAA,MACA8M,EAAAF,EAAA5M,EAAA,MACA+M,EAAAH,EAAA5M,EAAA,MACA+F,EAAA6G,EAAA5M,EAAA,MACAqF,EAAAuH,EAAA5M,EAAA,MACAgN,EAAAhN,EAAA,KACAiN,EAAAjN,EAAA,KACAkN,EAAAN,EAAA5M,EAAA,eAAA+B,EAAAvB,GAAA,GAAAA,KAAAC,WAAA,OAAAD,EAAA,IAAAU,KAAA,SAAAV,EAAA,QAAAW,KAAAX,EAAA,GAAAgB,OAAAR,UAAAmM,eAAAC,KAAA5M,EAAAW,GAAA,KAAAN,EAAAW,OAAAC,gBAAAD,OAAA6L,yBAAA7L,OAAA6L,yBAAA7M,EAAAW,MAAAN,EAAAyM,KAAAzM,EAAA0M,IAAA/L,OAAAC,eAAAP,EAAAC,EAAAN,GAAAK,EAAAC,GAAAX,EAAAW,GAAA,OAAAD,EAAAR,QAAAF,EAAAU,EAAA,SAAAiC,EAAA3C,EAAAU,GAAA,gBAAAV,GAAA,GAAA0E,MAAAsI,QAAAhN,GAAA,OAAAA,EAAA,CAAAA,IAAA,SAAAA,EAAAU,GAAA,IAAAC,KAAAN,GAAA,EAAAwC,GAAA,EAAAE,OAAA,cAAAM,EAAAyB,EAAA9E,EAAAI,OAAAE,cAAAD,GAAAgD,EAAAyB,EAAAgD,QAAA9C,QAAArE,EAAAsM,KAAA5J,EAAAP,QAAApC,GAAAC,EAAAC,SAAAF,GAAAL,GAAA,UAAAL,GAAA6C,GAAA,EAAAE,EAAA/C,EAAA,YAAAK,GAAA,MAAAyE,EAAAmD,QAAAnD,EAAAmD,SAAA,WAAApF,EAAA,MAAAE,GAAA,OAAApC,EAAA,CAAAX,EAAAU,IAAA,qBAAAwM,UAAA,oEAAAC,EAAAnN,GAAA,OAAAmN,EAAA,mBAAA/M,QAAA,WAAAC,EAAAD,OAAAE,UAAA,SAAAN,GAAA,OAAAK,EAAAL,IAAA,SAAAA,GAAA,OAAAA,GAAA,mBAAAI,QAAAJ,EAAAO,cAAAH,QAAAJ,IAAAI,OAAAI,UAAA,SAAAH,EAAAL,QAAA,SAAAoN,EAAApN,GAAA,gBAAAA,GAAA,GAAA0E,MAAAsI,QAAAhN,GAAA,SAAAU,EAAA,EAAAC,EAAA,IAAA+D,MAAA1E,EAAAY,QAAAF,EAAAV,EAAAY,OAAAF,IAAAC,EAAAD,GAAAV,EAAAU,GAAA,OAAAC,GAAA,CAAAX,IAAA,SAAAA,GAAA,GAAAI,OAAAE,YAAAU,OAAAhB,IAAA,uBAAAgB,OAAAR,UAAA6M,SAAAT,KAAA5M,GAAA,OAAA0E,MAAA4I,KAAAtN,GAAA,CAAAA,IAAA,qBAAAkN,UAAA,+DAAAK,EAAAvN,EAAAU,EAAAC,EAAAN,EAAAwC,EAAAE,EAAAM,GAAA,QAAAyB,EAAA9E,EAAA+C,GAAAM,GAAA0B,EAAAD,EAAAhC,MAAA,MAAA9C,GAAA,YAAAW,EAAAX,GAAA8E,EAAAE,KAAAtE,EAAAqE,GAAAE,QAAAC,QAAAH,GAAAI,KAAA9E,EAAAwC,GAAA,SAAAgI,EAAA7K,GAAA,sBAAAU,EAAA0E,KAAAzE,EAAA0E,UAAA,WAAAJ,QAAA,SAAA5E,EAAAwC,GAAA,IAAAE,EAAA/C,EAAAsF,MAAA5E,EAAAC,GAAA,SAAA0C,EAAArD,GAAAuN,EAAAxK,EAAA1C,EAAAwC,EAAAQ,EAAAyB,EAAA,OAAA9E,GAAA,SAAA8E,EAAA9E,GAAAuN,EAAAxK,EAAA1C,EAAAwC,EAAAQ,EAAAyB,EAAA,QAAA9E,GAAAqD,OAAA,eAAAmK,EAAAxN,EAAAU,GAAA,QAAAC,EAAA,EAAAA,EAAAD,EAAAE,OAAAD,IAAA,KAAAN,EAAAK,EAAAC,GAAAN,EAAAQ,WAAAR,EAAAQ,aAAA,EAAAR,EAAAS,cAAA,YAAAT,MAAAU,UAAA,GAAAC,OAAAC,eAAAjB,EAAAK,EAAAa,IAAAb,IAAA,SAAAoN,EAAAzN,GAAA,OAAAyN,EAAAzM,OAAAI,eAAAJ,OAAAK,eAAA,SAAArB,GAAA,OAAAA,EAAAsB,WAAAN,OAAAK,eAAArB,QAAA,SAAA0N,EAAA1N,EAAAU,GAAA,OAAAgN,EAAA1M,OAAAI,gBAAA,SAAApB,EAAAU,GAAA,OAAAV,EAAAsB,UAAAZ,EAAAV,MAAAU,GAAA,SAAAiN,EAAA3N,GAAA,YAAAA,EAAA,UAAAyB,eAAA,oEAAAzB,EAAA,SAAA4N,EAAA5N,EAAAU,EAAAC,GAAA,OAAAD,KAAAV,EAAAgB,OAAAC,eAAAjB,EAAAU,GAAAoC,MAAAnC,EAAAE,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAU,GAAAC,EAAAX,EAEA,IAAM6N,GACF3N,QADaqM,EAEbuB,KAFazB,EAGb0B,MAAOzB,GAeP0B,EAAJ,KACIC,EAAJ,KACA,oBAAIC,SAEAF,EAAYxO,EAAA,KAFmBU,QAI/B+N,EAAYzO,EAAA,KAAZyO,aAGiBE,gVAEbC,MADyB,KAEzBC,QAFyB,KAGzBC,eAHyB,EAIzBC,cACAC,QALyB,KAMzBC,eANyB,KAOzBC,eAPyB,UAQzBC,sBAAkBf,EAAAD,IAAAhN,IAAA,gBAEElB,qCACJ,MAAAmO,EAAAD,IAAAhN,IAAA,0BACc,GAAAiN,EAAAD,IAAAhN,IAAA,iBACT,IAAAiN,EAAAD,IAAAhN,IAAA,WAAAiN,EAAAD,IAAAhN,IAAA,+BAGW8L,EAAAmC,UAAS,WACzC,GAAKC,EAAAC,eAALlO,OAAA,CAMA,IACImO,EADEC,EAAaH,EAAAI,iBAAsBJ,EAAzCC,gBAGIC,EADAC,GAAcA,EAAlBZ,OACiBA,MAAOY,EAATZ,MAA2BC,QAAS,MACxCW,GAAcA,EAAlBX,SACUD,MAAF,KAAeC,QAASW,EAAWX,UAEjCD,MAAF,KAAeC,QAAS,MAEvCQ,EAAAK,SAAAH,EAAwB,WACpBF,EAAAM,uBAAA,aAfIN,EAAAO,MAAAhB,OAAoBS,EAAAO,MAAxBf,UACIQ,EAAAK,UAAgBd,MAAF,KAAeC,QAAS,QAHd,MAAAT,EAAAD,IAAAhN,IAAA,iCAmFK,WACrC,OACIlB,EAAAkC,cAAA+K,EAAA2C,aAAA,KACI5P,EAAAkC,cAAA+K,EAAA4C,kBAAA,KADJ,+BAEI7P,EAAAkC,cAAA,OAAKU,OAASC,QAAF,OAAmBiN,cAAe,QAC1C9P,EAAAkC,cAAA+K,EAAA8C,iBAAoBnN,OAASoN,YAAa,mBACtChQ,EAAAkC,cAAA,SAAO+N,QAAQ,iBADnB,oBAEIjQ,EAAAkC,cAAA+K,EAAAiD,cAAA,KACIlQ,EAAAkC,cAAA,UACIiO,GADJ,gBAEI1N,KAFJ,gBAGI2N,SAAUhB,EAHdiB,gBAIIhN,MAAO+L,EAAAO,MAAWV,gBAElBjP,EAAAkC,cAAA,UAAQmB,MAAM,WANlB,WAOIrD,EAAAkC,cAAA,UAAQmB,MAAM,QAPlB,YAQIrD,EAAAkC,cAAA,UAAQmB,MAAM,SAZ9B,gBAgBIrD,EAAAkC,cAAA+K,EAAA8C,gBAAA,KACI/P,EAAAkC,cAAA+K,EAAAqD,gBAAA,KACItQ,EAAAkC,cAAA,aACIlC,EAAAkC,cAAA,SACIK,KADJ,WAEIgO,QAASnB,EAAAO,MAFbT,iBAGIkB,SAAUhB,EAAKoB,gCAxBvC,yBA+BKpB,EA/BLqB,2BAgCIzQ,EAAAkC,cAAA,OAAKU,OAAS8N,QAAF,GAAeC,UAAW,WAClC3Q,EAAAkC,cAAA+K,EAAA2D,gBAAmBC,QAASzB,EAAK0B,iBAlC7C,sCAAA3C,EAAAD,IAAAhN,IAAA,2BAwC+B,WAC/B,OAAKkO,EAAAO,MAADT,kBAAJV,EAIIxO,EAAAkC,cAAA,WACIlC,EAAAkC,cAAA,OAAKU,OAAS8N,QAAF,mBAA+BK,SAA/B,GAA6CC,UAAW,mBADxE,4CAIIhR,EAAAkC,cAAA,OAAKU,OAASqO,KAAF,IAAaC,OAAQ,cAC7BlR,EAAAkC,cAAAsM,GACI5L,OAAS8N,QAAS,QAClBS,IAAK/B,EAAAO,MAAAX,mBACLoC,MAHJ,uBAIIC,UAJJ,SAKIC,mBACAC,oBACA9O,QACA+O,aACAC,OAAQrC,EATZsC,qBAUIC,MAAOvC,EAVXsC,qBAWIE,SAAUxC,EAAKsC,yBAnB3B,OAAAvD,EAAAD,IAAAhN,IAAA,yBA0ByB,WAC7B,OAAKkO,EAAAO,MAADZ,SAAJP,EAIIxO,EAAAkC,cAAA+K,EAAA2C,aAAA,KACI5P,EAAAkC,cAAA+K,EAAA4C,kBAAA,KADJ,yCAEI7P,EAAAkC,cAAAsM,GACI5L,OAAS8N,QAAS,IAClBS,IAAK/B,EAAAO,MAFTZ,QAGIqC,MAHJ,QAIIC,UAJJ,SAKIC,mBACAC,oBACA9O,QACA+O,UAAW,KAbnB,OAAArD,EAAAD,IAAAhN,IAAA,kBAmBkB,SAAAD,EAAA2C,GACtB,IACMiO,EAAazC,EAAA0C,UAAnBlO,GACA,OACI5D,EAAAkC,cAAA+K,EAAA8E,WAAcC,OAAQ5C,EAAAO,MAAAd,iBAAtBjL,EAAuDnC,IAAA,OAAAa,OAAvDsB,GAAwEiN,QAH1D,kBAAMzB,EAAA6C,UAANrO,KAIT3C,EADLiR,MAEIlS,EAAAkC,cAAA+K,EAAAkF,UAAatB,QAASgB,iCAMV,kBAAMzC,EAAAK,UAAgBX,cAAmBC,QAAS,SAAAZ,EAAAD,IAAAhN,IAAA,gCAElC,SAAAX,GACpC,IAAIyO,KACJ,SAAII,EAAAO,MAAAV,eACAD,EAAiBzN,iBAAkB6Q,EAAnCpD,oBACG,UAAII,EAAAO,MAAAV,iBACPD,EAAiBzN,iBAAkB8Q,EAAnCrD,sBAEJI,EAAAK,UAAgBP,iBAAkB3O,SAApBgQ,QAAsCvB,eAAtCA,EAAsDD,QAAS,MAAQ,WACjFK,EAAAM,uBAAA,UAAAvB,EAAAD,IAAAhN,IAAA,kBAIkB,SAAAX,GACtB,IAAIyO,KACJ,SAAIzO,eACAyO,EAAiBzN,iBAAkB6Q,EAAnCpD,oBACG,UAAIzO,iBACPyO,EAAiBzN,iBAAkB8Q,EAAnCrD,sBAEJI,EAAAK,UAAgBR,eAAgB1O,SAAlB8C,MAAkC2L,eAAlCA,EAAkDD,QAAS,MAAQ,WAC7EK,EAAAM,uBAAA,UAAAvB,EAAAD,IAAAhN,IAAA,uBAIuB,SAAAoR,GAC3B,SAAIA,IAAWA,EAAfC,eACInD,EAAAK,UAAgBT,eAAgBsD,EAAQC,aAAe,WACnDnD,EAAAM,uBAAA,QAEJ,QAAAvB,EAAAD,IAAAhN,IAAA,YAKY,WAChB,IAAIsR,EAAJ,UACI/D,QAAUA,OAAdgE,SACID,EAAWC,kDAAXD,IAEJA,IACIpD,EAAAsD,KAAAlF,MAAiB0E,kBAAF,YAAgC7O,MAAO,KACtD+L,EAAA6C,UAAe7C,EAAAsD,KAAAvR,OAAf,EAAqC,WACjCiO,EAAAuD,cAAAC,QAAAC,UACIC,KAAM1D,EAAAuD,cAAAC,QAD0BG,YAEhCC,SAAU,gBAAA7E,EAAAD,IAAAhN,IAAA,iBAAAkK,EAAAnF,mBAAAC,KAMD,SAAAC,IAAA,OAAAF,mBAAAiC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAChB+G,EAAAO,MADgBb,WAAA,CAAA3G,EAAAE,KAAA,aAEb+G,EAFa6D,uBAAA,CAAA9K,EAAAE,KAAA,SAAAF,EAAAC,KAAA,EAITgH,EAAAK,UAAgBX,YAAaM,EAAAO,MAAWb,aAJ/B3G,EAAAE,KAAA,sBAAAF,EAAAC,KAAA,EAAAD,EAAAG,GAAAH,EAAAI,MAAA,GAAAJ,EAAAS,OAAA,iBAAAT,EAAAE,KAAA,iBASToG,QAAUA,OAAdyE,OACIzE,qEAVS,yBAAAtG,EAAAiB,SAAAjD,EAAAR,OAAA,WAAAwI,EAAAD,IAAAhN,IAAA,qBAkBI,SAAAiS,EAAAC,EAAAC,GACrB5E,QAAJ6E,eACIH,GACIG,4BAA6BC,eAAenE,EAA5CkE,OAEJF,GACIE,sCAAuClE,EAAAO,MAAAT,iBAA8BqE,eAAenE,EAAAO,MAA7CX,gBAAvCsE,IAEJD,GACIC,sCAAuClE,EAAAO,MAAvC2D,sDAKqB,SAAA7R,EAAA+R,GAC7B,GAAI/E,QAAJ6E,aACI,IACI,IAAMvO,EAAOuO,qBAAb7R,GACA,IAAA+R,EACI,OAAAzO,EAEJ,GAAAA,EACI,IACI,OAAOwO,WAAPxO,GACF,MAAAxE,KAIR,MAAAA,GAEEyL,qDAKmB,SAAAyH,GAC3B,GAAIhF,QAAJ6E,aAA4B,CACxB,IAAMhE,KACAoE,EAAYtE,EAAAuE,uBAAA,WACZC,EAAsBxE,EAAAuE,uBAAA,qBACtBE,EAAsBzE,EAAAuE,uBAAA,qBAC5BvE,EAAAsD,KAAYgB,GAAwBhB,EAApCA,KACAkB,IACItE,mBACAA,uBAEJuE,IACIvE,oBAEJF,EAAAK,SAAAH,EAAAmE,QAEArE,EAAAsD,KAAYA,EAAZA,KAEJe,4BAGgB,SAAA7P,EAAA6P,GAChBrE,EAAAK,UAAgBZ,eAAgBjL,GAAK,WACjCwL,EAAA0E,UAAAC,WAA0B3E,EAAAsD,KAAUtD,EAAAO,MAAVd,gBAA1BxL,OACA+L,EAAA0E,UAAAE,gBACAP,GACIQ,aADI,SAAA9F,EAAAD,IAAAhN,IAAA,YAMI,SAAA0C,GAChB,OAAO,SAAArD,GAIH,GAHAA,GACIA,qBAEA6O,EAAAsD,KAAA9O,GAAJP,OACSoL,uDAAgDW,EAAAsD,KAAA9O,GAAhD6K,MAAL,OADJ,CAKA,IAAMyF,EAAM9E,EAAAO,MAAZd,eACIsF,EAAoB/E,EAAAO,MAAxBd,eACIqF,OAAaA,EAAjB,IACIC,EAAoBD,EAApBC,GAEJ/E,EAAAsD,KAAA0B,EAAgBhF,EAAAsD,KAAA2B,MAAA,EAAhBzQ,IAAAtB,OAAA8R,EAA0ChF,EAAAsD,KAAA2B,MAAgBzQ,EAA1D,KACKwL,EAAAsD,KAALvR,SACIiO,EAAAsD,KAAAlF,MAAiB0E,MAAF,kBAA4B7O,MAAO,KAClD8Q,KAEJ/E,EAAAM,uBAAA,MACAN,EAAA6C,UAAAkC,oCAImB,SAAAG,GACvB,IACI,IACMC,EADMzO,gBAAZwO,GAC4BE,OAAW,SAAA9I,GAAA,MAAUA,6BAAV,OAAgDA,SACvF,OAAI6I,EAAJpT,QAEQyN,uFACI2F,KADJ3F,6BAKR,KACF,MAAArO,GAKE,OAASoO,MAHLpO,sBACMA,EADNA,qBAESA,EAFTA,kBAEoBA,EAFpBA,0BAEuCA,iBAFvCA,0BAEyEA,iBAH7EkU,6CAQuB,WAC3B,OAAQrF,EAAAsD,KAAAgC,KAAe,SAAAC,EAAA/Q,GACnB,SAAI+Q,EAAJtR,OAEI,OADmB+L,EAAAI,iBAAsBmF,EAAzCtR,UAEI+L,EAAA6C,UAAArO,WAIRuK,EAAAD,IAAAhN,IAAA,kBAAAkK,EAAAnF,mBAAAC,KAIkB,SAAA6D,IAAA,IAAAgF,EAAA6F,EAAAC,EAAAjO,EAAAC,EAAAC,EAAAgO,EAAA/N,EAAAC,EAAA+N,EAAAC,EAAAC,EAAA,OAAAhP,mBAAAiC,KAAA,SAAAgN,GAAA,cAAAA,EAAA9M,KAAA8M,EAAA7M,MAAA,UAAA0G,EAAA,KAAA6F,KAAAC,EAGNzG,EAASgB,EAAAO,MAHHV,gBAAA,CAAAiG,EAAA7M,KAAA,eAAA6M,EAAAtM,OAAA,iBAAAhC,KAAAC,KAAAC,SAAAoO,EAAA9M,KAAA,EAAA0M,EAAA7O,mBAAAC,KAAA,SAAA4O,IAAA,IAAAK,EAAAvR,EAAA+Q,EAAAS,EAAAxJ,EAAAE,EAAA,OAAA7F,mBAAAiC,KAAA,SAAAmD,GAAA,cAAAA,EAAAjD,KAAAiD,EAAAhD,MAAA,cAAA8M,EAAAE,EAAArO,EAAA3D,MAAA,GAAAO,EAAAuR,EAAA,GAAAR,EAAAQ,EAAA,GAAA9J,EAAAjD,KAAA,EASV2G,UAAoBK,EAAAO,MAApBZ,kBAAmDK,EAAAO,MAAvDX,iBACID,EAAUwE,WAAWA,eAAenE,EAAAO,MAApCZ,kBAVU1D,EAAAhD,KAAA,EAYsBwM,UAAgBF,EAAhBE,MAZtB9F,GAAA,OAAAqG,EAAA/J,EAAAtC,KAAA6C,EAAAwJ,EAAAxJ,SAAAE,EAAAsJ,EAAAtJ,QAadiD,IACA3J,iBAdciG,EAAAhD,KAAA,wBAAAgD,EAAAjD,KAAA,GAAAiD,EAAA/C,GAAA+C,EAAA9C,MAAA,GAgBd6G,EAAAK,UAAgBV,QAAF,KAAiBD,eAAqB,WAChDM,EAAA6C,UAAArO,EAAkB,kBACdwL,EAAAK,UAAgBd,MAAOtD,EAAA/C,GAAEgN,SAAW,WAC5B7G,QAAUA,OAAdyE,OACIzE,yCAAkCpD,EAAA/C,GAAlCmG,gBApBFpD,EAAAzC,OAAA,UAAA+E,WAAA,yBAAAtC,EAAAjC,SAAA0L,EAAAnP,OAAA,UAAAoB,EAOCqI,EAAAsD,KAPD6C,UAAA5U,OAAAE,YAAA,WAAA+F,GAAAI,EAAAD,EAAAsB,QAAA9C,KAAA,CAAA2P,EAAA7M,KAAA,gBAAA6M,EAAAM,cAAAV,IAAA,+BAAA9P,EAAA+P,EAAAG,EAAA5M,IAAA,CAAA4M,EAAA7M,KAAA,gBAAA6M,EAAAtM,OAAA,SAAAmM,EAAApH,GAAA,QAAA/G,KAAAsO,EAAA7M,KAAA,iBAAA6M,EAAA7M,KAAA,iBAAA6M,EAAA9M,KAAA,GAAA8M,EAAA/L,GAAA+L,EAAA3M,MAAA,GAAA1B,KAAAC,EAAAoO,EAAA/L,GAAA,QAAA+L,EAAA9M,KAAA,GAAA8M,EAAA9M,KAAA,GAAAxB,GAAA,MAAAG,EAAAyB,QAAAzB,EAAAyB,SAAA,WAAA0M,EAAA9M,KAAA,IAAAvB,EAAA,CAAAqO,EAAA7M,KAAA,eAAAvB,EAAA,eAAAoO,EAAAzM,OAAA,mBAAAyM,EAAAzM,OAAA,YAAAuM,EA4BF,IAAAS,MAAUlC,eAAVxE,KAAsCxM,KAAM,4BA5B1C0S,EA6BF,IAAAQ,MAAUlC,eAAVqB,KAA6CrS,KAAM,+BACvEmK,EAAAgJ,QAAAV,EAAA,oBAAA1S,OAAwCwB,gBAAW6R,MAAAC,UAAnD,eACA3B,WAAW,cACPvH,EAAAgJ,QAAAT,EAAA,mBAAA3S,OAAuCwB,gBAAW6R,MAAAC,UAAlD,gBAhCkB,KAkCtBxG,EAAAK,UAAgBV,YAlCM,yBAAAmG,EAAA9L,SAAAW,EAAApE,OAAA,8BAAAzE,EAAA,IAAAA,EAAAN,EAAA,gBAAAL,EAAAU,GAAA,sBAAAA,GAAA,OAAAA,EAAA,UAAAwM,UAAA,sDAAAlN,EAAAQ,UAAAQ,OAAAsU,OAAA5U,KAAAF,WAAAD,aAAAuC,MAAA9C,EAAAe,UAAA,EAAAD,cAAA,KAAAJ,GAAAgN,EAAA1N,EAAAU,GAAA,CAAAA,EA7YMjB,EAAMiC,6DAsCX,IAAA6T,EAAAnQ,KACvB4I,GAGA5I,KAAAoQ,qBAA0B,WACtB,IAAMC,EAAQ,IAAAzH,EAAA,mBACV0H,SAD2C,UAE3CC,iBAEJF,wBAA6BG,EAA7BH,cACAA,WAAe,SAAAI,GACNN,EAADpD,MAAeoD,EAAApD,KAAUoD,EAAAnG,MAA7Bd,kBAGAiH,EAAAzG,eAAA+G,EACAN,EAAApD,KAAUoD,EAAAnG,MAAVd,gBAAAxL,MALmB+S,EAOfN,EAAAO,wBAAJ,EACIP,EAAAO,2BAEAP,EAAArG,UAAgBV,QAAS,OACzB+G,EAAAQ,gCAGJR,EAAApD,MAAaoD,EAAApD,KAAUoD,EAAAnG,MAA3Bd,iBACImH,aAAiBF,EAAApD,KAAUoD,EAAAnG,MAAVd,gBAAjBmH,OAEJA,kBACAF,EAAAhC,UAAAkC,qCAKJ,IAAMO,EAAe5Q,KAAAgK,MAAFhB,MAAA,QAAiChJ,KAAAgK,MAAFf,QAAA,UAAlD,UACA,OACI5O,EAAAkC,cAAA+K,EAAAuJ,cAAA,KACIxW,EAAAkC,cAAA+K,EAAAwJ,aAAA,KACIzW,EAAAkC,cAAA+K,EAAAyJ,UAAaC,SAAUhR,KAAKgN,eAAgBhN,KAAA+M,KAAA9N,IAAce,KAD9DiR,kBAEI5W,EAAAkC,cAAA+K,EAAA2D,gBAAmBC,QAASlL,KAA5BkR,UAA4CjU,OAASkU,gBAAiB,YAF1E,YAKI9W,EAAAkC,cAAA+K,EAAA2D,gBAAmBC,QAASlL,KAA5BoR,eAAiDC,WAAYrR,KAAAgK,MAAWhB,OANhF,qBAUI3O,EAAAkC,cAAA+K,EAAAgK,YAAe9G,GAAG,mBAClBnQ,EAAAkC,cAAA+K,EAAAiK,mBAAsBvH,MAAO4G,GAA7B,IAEK5Q,KAAAgK,MAAAhB,OAAoBhJ,KAAAgK,MAApBf,SAbT,mBAeI5O,EAAAkC,cAAA+K,EAAAkK,eAAkBtG,QAASlL,KAA3ByR,cAA+CtI,WAAYnJ,KAAAgK,MAAWb,YAClE9O,EAAAkC,cAAA+K,EAAAoK,QAAWxG,QAAS,SAAAtQ,GAAA,OAAKA,EAAL+W,mBAA0BxI,WAAYnJ,KAAAgK,MAAWb,YACjE9O,EAAAkC,cAAA+K,EAAAsK,mBAAsB1G,QAASlL,KAAKyR,eADxC,KAEKzR,KAFL6R,iCAGK7R,KApBjB8R,oDAxEa/I,GAwEb+I,8HC5GR,eAAAlX,EAAA,OAAAA,EAAA0F,mBAAAC,KAyBO,SAAAC,EAAAmO,EAAAoD,GAAA,IAAA9L,EAAAE,EAAA6L,EAAAC,EAAA,OAAA3R,mBAAAiC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAuD,GAECiM,eACIC,kBACAC,mBACAC,qBALLlM,KAAA6L,KAUHD,GACItS,iBAXDwS,EAaqB,SAAA5M,EAAAb,EAAA8N,GACpB,GAAAA,EAAuB,CACnB,IAAMC,EAAUlN,EAAA9G,OACZ,SAAAE,EAAAiE,GAkBI,MAjBIA,iBAAwBA,EAA5B8P,OACQ9P,EAAJY,UACS0O,EAAStP,EAAdY,WACI0O,EAAStP,EAATsP,SAAyB,IAAzBA,KAEAtP,YAAiBA,EAArBhF,OACIsU,EAAStP,EAATsP,aAA2BtP,EAA3BsP,QAGRvT,iBACIgU,IAAKhU,cAAkBiE,QADTlH,OAEduK,OAAQrD,EAFM8P,KAGdE,MAAOjU,OAHOjD,OAIdkC,MAAOgF,EAAKhF,SAGpBe,QAAYiE,EAAZjE,MACAA,IAEFkU,KAAF,GAAYC,OAAZpO,EAA+BnG,cAEnC4H,6CAEKE,EAAL3B,KACI2B,SAEJA,cA3CL3D,EAAAE,KAAA,EA8CGmQ,sBA9CHZ,GAAA,cA+CHrW,uBAA8B,SAAA2M,GAC1BtC,sCACI+L,WAAcA,EAD0BzJ,IAExC7K,MAAO6K,MAlDZ/F,EAAAS,OAAA,UAqDMgD,SAAFA,EAAYE,YArDhB,wBAAA3D,EAAAiB,SAAAjD,EAAAR,2MDmFC8R,uBC9GR,IAAAe,EAAA7L,EAAA5M,EAAA,MAEAqF,EAAAuH,EAAA5M,EAAA,eAAAuD,EAAA/C,GAAA,GAAAA,KAAAC,WAAA,OAAAD,EAAA,IAAAU,KAAA,SAAAV,EAAA,QAAAW,KAAAX,EAAA,GAAAgB,OAAAR,UAAAmM,eAAAC,KAAA5M,EAAAW,GAAA,KAAAN,EAAAW,OAAAC,gBAAAD,OAAA6L,yBAAA7L,OAAA6L,yBAAA7M,EAAAW,MAAAN,EAAAyM,KAAAzM,EAAA0M,IAAA/L,OAAAC,eAAAP,EAAAC,EAAAN,GAAAK,EAAAC,GAAAX,EAAAW,GAAA,OAAAD,EAAAR,QAAAF,EAAAU,EAAA,SAAA2C,EAAArD,GAAA,gBAAAA,GAAA,GAAA0E,MAAAsI,QAAAhN,GAAA,SAAAU,EAAA,EAAAC,EAAA,IAAA+D,MAAA1E,EAAAY,QAAAF,EAAAV,EAAAY,OAAAF,IAAAC,EAAAD,GAAAV,EAAAU,GAAA,OAAAC,GAAA,CAAAX,IAAA,SAAAA,GAAA,GAAAI,OAAAE,YAAAU,OAAAhB,IAAA,uBAAAgB,OAAAR,UAAA6M,SAAAT,KAAA5M,GAAA,OAAA0E,MAAA4I,KAAAtN,GAAA,CAAAA,IAAA,qBAAAkN,UAAA,+DAAApI,EAAA9E,EAAAU,EAAAC,EAAAN,EAAAwC,EAAAE,EAAAM,GAAA,QAAAyB,EAAA9E,EAAA+C,GAAAM,GAAA0B,EAAAD,EAAAhC,MAAA,MAAA9C,GAAA,YAAAW,EAAAX,GAAA8E,EAAAE,KAAAtE,EAAAqE,GAAAE,QAAAC,QAAAH,GAAAI,KAAA9E,EAAAwC,KAyBOuC,iCCbP,SAAS8S,EAAgBnD,EAASoD,EAAUC,EAAOC,GACjDjT,KAAK2P,QAAWA,EAChB3P,KAAK+S,SAAWA,EAChB/S,KAAKgT,MAAWA,EAChBhT,KAAKiT,SAAWA,EAChBjT,KAAKlD,KAAW,cAEuB,mBAA5B8B,MAAMsU,mBACftU,MAAMsU,kBAAkBlT,KAAM8S,IAdlC,SAAsBK,EAAOC,GAC3B,SAASC,IAASrT,KAAK7E,YAAcgY,EACrCE,EAAKjY,UAAYgY,EAAOhY,UACxB+X,EAAM/X,UAAY,IAAIiY,EAHxB,CAkBaP,EAAiBlU,OAE9BkU,EAAgBQ,aAAe,SAASP,EAAUC,GAChD,IAAIO,GACEC,QAAS,SAASC,GAChB,MAAO,IAAOC,EAAcD,EAAYd,MAAQ,KAGlDgB,MAAS,SAASF,GAChB,IACIxV,EADA2V,EAAe,GAGnB,IAAK3V,EAAI,EAAGA,EAAIwV,EAAYI,MAAMrY,OAAQyC,IACxC2V,GAAgBH,EAAYI,MAAM5V,aAAcqB,MAC5CwU,EAAYL,EAAYI,MAAM5V,GAAG,IAAM,IAAM6V,EAAYL,EAAYI,MAAM5V,GAAG,IAC9E6V,EAAYL,EAAYI,MAAM5V,IAGpC,MAAO,KAAOwV,EAAYM,SAAW,IAAM,IAAMH,EAAe,KAGlEI,IAAK,SAASP,GACZ,MAAO,iBAGThB,IAAK,SAASgB,GACZ,MAAO,gBAGTQ,MAAO,SAASR,GACd,OAAOA,EAAYS,cAI3B,SAASC,EAAIC,GACX,OAAOA,EAAGC,WAAW,GAAGpM,SAAS,IAAIqM,cAGvC,SAASZ,EAAc/T,GACrB,OAAOA,EACJiH,QAAQ,MAAO,QACfA,QAAQ,KAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,eAAyB,SAASwN,GAAM,MAAO,OAASD,EAAIC,KACpExN,QAAQ,wBAAyB,SAASwN,GAAM,MAAO,MAASD,EAAIC,KAGzE,SAASN,EAAYnU,GACnB,OAAOA,EACJiH,QAAQ,MAAO,QACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,KAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,eAAyB,SAASwN,GAAM,MAAO,OAASD,EAAIC,KACpExN,QAAQ,wBAAyB,SAASwN,GAAM,MAAO,MAASD,EAAIC,KA6CzE,MAAO,YAtCP,SAA0BrB,GACxB,IACI9U,EAAGC,EANoBuV,EAKvBc,EAAe,IAAIjV,MAAMyT,EAASvX,QAGtC,IAAKyC,EAAI,EAAGA,EAAI8U,EAASvX,OAAQyC,IAC/BsW,EAAatW,IATYwV,EASaV,EAAS9U,GAR1CsV,EAAyBE,EAAY7W,MAAM6W,IAalD,GAFAc,EAAaC,OAETD,EAAa/Y,OAAS,EAAG,CAC3B,IAAKyC,EAAI,EAAGC,EAAI,EAAGD,EAAIsW,EAAa/Y,OAAQyC,IACtCsW,EAAatW,EAAI,KAAOsW,EAAatW,KACvCsW,EAAarW,GAAKqW,EAAatW,GAC/BC,KAGJqW,EAAa/Y,OAAS0C,EAGxB,OAAQqW,EAAa/Y,QACnB,KAAK,EACH,OAAO+Y,EAAa,GAEtB,KAAK,EACH,OAAOA,EAAa,GAAK,OAASA,EAAa,GAEjD,QACE,OAAOA,EAAa7F,MAAM,GAAI,GAAG+F,KAAK,MAClC,QACAF,EAAaA,EAAa/Y,OAAS,IA9B7C,CAsCsCuX,GAAY,SAAwBC,EAHzD,IAAOU,EAGkDV,GAH3B,IAAO,gBAG6B,WA6/FrF0B,EAAOC,SACLC,YAAa9B,EACb+B,MA5/FF,SAAmBC,EAAOC,GACxBA,WAAUA,EAAqBA,KAE/B,IAmHIC,EAnHAC,KAEAC,GAA2BC,MAAOC,IAClCC,EAAyBD,GAEzBE,EAAS,SAASxP,GAAM,OAAOA,GAC/ByP,EAAS,IACTC,EAASC,GAAuB,QAChCC,EAAS,IACTC,EAASF,GAAuB,QAChCG,EAAS,IACTC,EAASJ,GAAuB,QAChCK,EAAS,SAASpY,GAAS,OAAOA,GAClCqY,EAAS,SAASrY,EAAOqB,GAAO,OAASrB,MAAOA,EAAOqB,MAAOA,IAC9DiX,EAAS,SAAStY,GAAS,OAASA,MAAOA,EAAOd,KAAM,SACxDqZ,EAAU,OACVC,EAAUT,GAAuB,WACjCU,EAAU,KACVC,EAAUX,GAAuB,SACjCY,EAAU,KACVC,EAAUb,GAAuB,SACjCc,GAyIO3Z,KAAM,OAxIb4Z,EAAU,SAASlb,GAAK,OAAOA,EAAEmZ,KAAK,KACtCgC,EAAU,SAASzO,GAAK,OAAOA,EAAEyM,KAAK,KACtCiC,EAAU,SAAS/W,GAAK,OAAOA,GAC/BgX,EAAU,IACVC,EAAUnB,GAAuB,QACjCoB,EAAU,SAASnZ,EAAO6F,GAAQ,OAAS7F,MAAOA,EAAOd,KAAM,mBAAoB2G,KAAMA,EAAM0P,SAAUA,OACzG6D,EAAU,KACVC,EAAUtB,GAAuB,SACjCuB,EAAU,SAASvZ,EAAGkC,GAAK,OAAS/C,KAAMa,EAAEb,KAAMd,IAAK2B,EAAEC,MAAO6F,KAAM9F,EAAE8F,KAAM0P,SAAUxV,EAAEwV,SAAUpU,MAAOc,IAC3GsX,EAAU,IACVC,EAAUzB,GAAuB,QACjC0B,EAAU,SAAS3M,GAAM,OAAOA,GAChC4M,EAAU,SAAS1Z,EAAO2Z,EAAW9T,GAAQ,OAAS7F,MAAOA,EAAOd,KAAM,iBAAkBya,UAAWA,EAAW9T,KAAMA,EAAM0P,SAAUA,OACxIqE,EAAU,SAAS5Z,EAAO2Z,EAAWtY,GAAO,OAASrB,MAAOA,EAAOqB,MAAOA,EAAKsY,UAAWA,IAC1FE,EAAU,IACVC,EAAU/B,GAAuB,QACjCgC,EAAU,SAASC,GAAM,OAASha,MAAOga,EAAGha,MAAOd,KAAM,OAAQmC,IAAK2Y,EAAG3Y,IAAKkU,SAAUA,KAAYoE,UAAWK,EAAGL,YAClHM,EAAU,SAASla,EAAGkC,GAAK,OAAS/C,KAAMa,EAAEb,KAAMd,IAAK2B,EAAEC,MAAO6F,KAAM9F,EAAE8F,KAAM0P,SAAUxV,EAAEwV,SAAUpU,MAAOc,EAAG0X,UAAW5Z,EAAE4Z,YAC3HO,EAAU,IACVC,EAAUpC,GAAuB,QACjCqC,EAAU,SAASpa,GAAS,OAASA,MAAOA,EAAOd,KAAM,kBAAmBqW,SAAUA,OACtF8E,EAAU,SAASL,GAAM,OAASha,MAAOga,EAAGha,MAAOd,KAAM,QAASmC,IAAK2Y,EAAG3Y,MAC1EiZ,EAAU,SAASva,EAAGkC,GAAK,OAAS/C,KAAMa,EAAEb,KAAMd,IAAK2B,EAAEC,MAAOuV,SAAUxV,EAAEwV,SAAUpU,MAAOc,IAC7FsY,EAAUC,GAAqB,uBAC/BC,EAAU,IACVC,EAAU3C,GAAuB,QACjC4C,EAAU,SAAS1Y,GAAK,OAAOA,EAAEnE,SAAW8c,GAAQC,IACpDC,EAAU,WAAsB,OAATF,SACvBG,EAAU,WAAsB,OAATH,SACvBI,EAAU,KACVC,GAAUlD,GAAuB,SACjCmD,GAAU,SAASlZ,GAAK,OAAS9C,KAAM,UAAYc,MAAOgC,EAAEmH,SAC5DgS,GAAUX,GAAqB,eAK/BY,IAJUZ,GAAqB,WAErBa,KAAuB,IAAK,UAAO,GAEnCb,GAAqB,oBAC/Bc,GAAUd,GAAqB,gBAC/Be,GAAUf,GAAqB,2BAC/BgB,GAAUhB,GAAqB,uBAC/BiB,GAAU,IACVC,GAAU3D,GAAuB,QACjC4D,GAAU,IACVC,GAAU7D,GAAuB,QACjC8D,GAAU,SAAShW,GACf,OAAOA,EAAKhF,OAAO,SAAUkE,EAAM+W,GAAqC,OAA7B/W,EAAK+W,EAAK1d,KAAO0d,EAAK9b,MAAc+E,QAEnFgX,GAAU,IACVC,GAAUjE,GAAuB,QACjCkE,GAAU,IACVC,GAAUnE,GAAuB,QACjCoE,GAAU,SAASC,EAAIC,GAAM,OAASje,IAAKge,EAAIpc,MAAOqc,IACtDC,GAAU,IACVC,GAAUxE,GAAuB,QACjCyE,GAAU,SAASC,GAAS,OAAOA,EAAM1F,KAAK,KAC9C2F,GAAU,IACVC,GAAU5E,GAAuB,QACjC6E,GAAU,KACVC,GAAU9E,GAAuB,SACjC+E,GAAU,SAASC,GAAQ,OAAOA,GAClCC,GAAU,SAASC,GAAY,OAAOA,GACtCC,GAAU,IACVC,GAAUpF,GAAuB,QACjCqF,GAAU,WAAa,MAAO,MAC9BC,GAAU,IACVC,GAAUvF,GAAuB,QACjCwF,GAAU,WAAa,MAAO,MAC9BC,GAAU,IACVC,GAAU1F,GAAuB,QACjC2F,GAAU,WAAa,MAAO,MAC9BC,GAAU,IACVC,GAAU7F,GAAuB,QACjC8F,GAAU,WAAa,MAAO,MAC9BC,GAAU,IACVC,GAAUhG,GAAuB,QACjCiG,GAAU,WAAa,MAAO,MAC9BC,GAAU,IACVC,GAAUnG,GAAuB,QACjCoG,GAAU,WAAa,MAAO,MAC9BC,GAAU,IACVC,GAAUtG,GAAuB,QACjCuG,GAAU,SAASC,GAAU,OAAOC,OAAOC,aAAajW,SAAS+V,EAAQ,MACzEG,GAAU,aACVC,GAAUtD,KAAuB,IAAK,MAAO,IAAK,UAAO,GAEzDuD,GAAuB,EACvBC,GAAuB,EACvBC,KAA0BC,KAAM,EAAG3N,OAAQ,IAC3C4N,GAAuB,EACvBC,MACAC,GAAuB,EAI3B,GAAI,cAAe7H,EAAS,CAC1B,KAAMA,EAAQ8H,aAAa3H,GACzB,MAAM,IAAItW,MAAM,mCAAqCmW,EAAQ8H,UAAY,MAG3ExH,EAAwBH,EAAuBH,EAAQ8H,WAOzD,SAAS5J,KACP,OAAO6J,GAAoBP,GAAcD,IAmB3C,SAAS7G,GAAuB9C,EAAMoK,GACpC,OAASngB,KAAM,UAAW+V,KAAMA,EAAMoK,WAAYA,GAGpD,SAAShE,GAAqBlF,EAAOE,EAAUgJ,GAC7C,OAASngB,KAAM,QAASiX,MAAOA,EAAOE,SAAUA,EAAUgJ,WAAYA,GAWxE,SAAS7E,GAAqBhE,GAC5B,OAAStX,KAAM,QAASsX,YAAaA,GAGvC,SAAS8I,GAAsBC,GAC7B,IAAwC5hB,EAApC6hB,EAAUV,GAAoBS,GAElC,GAAIC,EACF,OAAOA,EAGP,IADA7hB,EAAI4hB,EAAM,GACFT,GAAoBnhB,IAC1BA,IASF,IALA6hB,GACET,MAFFS,EAAUV,GAAoBnhB,IAEZohB,KAChB3N,OAAQoO,EAAQpO,QAGXzT,EAAI4hB,GACmB,KAAxBnI,EAAMT,WAAWhZ,IACnB6hB,EAAQT,OACRS,EAAQpO,OAAS,GAEjBoO,EAAQpO,SAGVzT,IAIF,OADAmhB,GAAoBS,GAAOC,EACpBA,EAIX,SAASJ,GAAoBK,EAAUC,GACrC,IAAIC,EAAkBL,GAAsBG,GACxCG,EAAkBN,GAAsBI,GAE5C,OACE1K,OACE6K,OAAQJ,EACRV,KAAQY,EAAgBZ,KACxB3N,OAAQuO,EAAgBvO,QAE1B2D,KACE8K,OAAQH,EACRX,KAAQa,EAAcb,KACtB3N,OAAQwO,EAAcxO,SAK5B,SAAS0O,GAASzK,GACZuJ,GAAcI,KAEdJ,GAAcI,KAChBA,GAAiBJ,GACjBK,OAGFA,GAAoB9U,KAAKkL,IAgB3B,SAASqC,KACP,IAAIqI,EAAIC,EAOR,GALAD,MACAC,EAAKC,QACM1I,IACTyI,EAAKE,MAEHF,IAAOzI,EACT,KAAOyI,IAAOzI,GACZwI,EAAG5V,KAAK6V,IACRA,EAAKC,QACM1I,IACTyI,EAAKE,WAITH,EAAKxI,EAGP,OAAOwI,EAGT,SAASE,KACP,IAAIF,EAAIC,EAgBR,OAdAD,EAAKnB,IACLoB,EA+uBF,WACE,IAAID,EAAIC,EAAIG,EAAYC,EA8CxB,OA5CAL,EAAKnB,IACLoB,EAAKK,QACM9I,IACTyI,EAAK,MAEHA,IAAOzI,IACT4I,EA/WJ,WACE,IAAIJ,EAAIC,EAAIG,EAAIG,EAkChB,OAhCAP,EAAKnB,GACiC,KAAlCxH,EAAMT,WAAWiI,KACnBoB,EAAK/G,EACL2F,OAEAoB,EAAKzI,EACmB,IAApB2H,IAAyBY,GAAS5G,IAEpC8G,IAAOzI,IACT4I,EAAKI,QACMhJ,IACT+I,EAAKE,QACMjJ,IACT+I,EAAK,MAEHA,IAAO/I,GACTsH,GAAekB,EAEfA,EADAC,EAAK7G,EAAQgH,EAAIG,KAGjB1B,GAAcmB,EACdA,EAAKxI,KAOTqH,GAAcmB,EACdA,EAAKxI,GAGAwI,EAnCT,MAgXexI,GACJ8I,OACM9I,GACJkJ,OACMlJ,IACT6I,EA7DV,WACE,IAAIL,EAAIC,EAIR,GAFAD,MACAC,EAAKU,QACMnJ,EACT,KAAOyI,IAAOzI,GACZwI,EAAG5V,KAAK6V,GACRA,EAAKU,UAGPX,EAAKxI,EAGP,OAAOwI,EAdT,MA8DqBxI,GACJoJ,OACMpJ,GACTsH,GAAekB,EAEfA,EADAC,EAAK1G,EAAQ6G,EAAIC,KAuB3BxB,GAAcmB,EACdA,EAAKxI,GAGAwI,EA/CT,MA9uBaxI,IACTyI,EAu9BJ,WACE,IAAID,EAAIC,EAAIG,EAAYC,EA8CxB,OA5CAL,EAAKnB,IACLoB,EAAKK,QACM9I,IACTyI,EAAK,MAEHA,IAAOzI,IACT4I,EA5JJ,WACE,IAAIJ,EAAIC,EAAIG,EAAIG,EAAIM,EAAIR,EAuDxB,OArDAL,EAAKnB,GACDxH,EAAMyJ,OAAOjC,GAAa,KAAOxF,GACnC4G,EAAK5G,EACLwF,IAAe,IAEfoB,EAAKzI,EACmB,IAApB2H,IAAyBY,GAASzG,IAEpC2G,IAAOzI,IACT4I,EAAKW,QACMvJ,IACT+I,EAAKS,QACMxJ,IACT+I,EAAK,MAEHA,IAAO/I,GAC6B,KAAlCH,EAAMT,WAAWiI,KACnBgC,EAAK1I,EACL0G,OAEAgC,EAAKrJ,EACmB,IAApB2H,IAAyBY,GAAS3H,IAEpCyI,IAAOrJ,IACT6I,EAAKI,QACMjJ,IACT6I,EAAK,MAEHA,IAAO7I,GACTsH,GAAekB,EAEfA,EADAC,EAAKtG,EAAQyG,EAAIG,EAAIF,KAGrBxB,GAAcmB,EACdA,EAAKxI,KAGPqH,GAAcmB,EACdA,EAAKxI,KAGPqH,GAAcmB,EACdA,EAAKxI,KAOTqH,GAAcmB,EACdA,EAAKxI,GAGAwI,EAxDT,MA6JexI,GACJ8I,OACM9I,GACJkJ,OACMlJ,IACT6I,EAAKY,QACMzJ,GACJoJ,OACMpJ,GACTsH,GAAekB,EAEfA,EADAC,EAAK/F,EAAQkG,EAAIC,KAuB3BxB,GAAcmB,EACdA,EAAKxI,GAGAwI,EA/CT,MAt9BexI,IACTyI,EAikCN,WACE,IAAID,EAAIC,EAAIG,EAAYC,EA8CxB,OA5CAL,EAAKnB,IACLoB,EAAKK,QACM9I,IACTyI,EAAK,MAEHA,IAAOzI,IACT4I,EAnEJ,WACE,IAAIJ,EAAIC,EAAIG,EAyBZ,OAvBAJ,EAAKnB,GACiC,MAAlCxH,EAAMT,WAAWiI,KACnBoB,EAAK9F,EACL0E,OAEAoB,EAAKzI,EACmB,IAApB2H,IAAyBY,GAAS3F,IAEpC6F,IAAOzI,IACT4I,EAAKI,QACMhJ,GACTsH,GAAekB,EAEfA,EADAC,EAAK5F,EAAQ+F,KAOfvB,GAAcmB,EACdA,EAAKxI,GAGAwI,EA1BT,MAoEexI,GACJ8I,OACM9I,GACJkJ,OACMlJ,IACT6I,EAAKY,QACMzJ,GACJoJ,OACMpJ,GACTsH,GAAekB,EAEfA,EADAC,EAAK1F,EAAQ6F,EAAIC,KAuB3BxB,GAAcmB,EACdA,EAAKxI,GAGAwI,EA/CT,IA9jCMC,IAAOzI,IACTsH,GAAekB,EACfC,EAAKpI,EAAOoI,IAETA,EAKP,SAASiB,KACP,IAAIlB,EAUJ,OARsC,KAAlC3I,EAAMT,WAAWiI,KACnBmB,EAAKlI,EACL+G,OAEAmB,EAAKxI,EACmB,IAApB2H,IAAyBY,GAAShI,IAGjCiI,EAGT,SAASQ,KACP,IAAIR,EAAIC,EAAIG,EAAIG,EAqChB,OAnCAP,EAAKnB,GACiC,KAAlCxH,EAAMT,WAAWiI,KACnBoB,EAAKhI,EACL4G,OAEAoB,EAAKzI,EACmB,IAApB2H,IAAyBY,GAAS7H,IAEpC+H,IAAOzI,IACT4I,EAAKe,QACM3J,GAC6B,KAAlCH,EAAMT,WAAWiI,KACnB0B,EAAKpI,EACL0G,OAEA0B,EAAK/I,EACmB,IAApB2H,IAAyBY,GAAS3H,IAEpCmI,IAAO/I,GACTsH,GAAekB,EAEfA,EADAC,EAAK5H,EAAO+H,KAGZvB,GAAcmB,EACdA,EAAKxI,KAOTqH,GAAcmB,EACdA,EAAKxI,GAGAwI,EAqDT,SAASoB,KACP,IAAIpB,EAAIC,EAUR,OARAD,EAAKnB,IACLoB,EAUF,WACE,IAAID,EAAIC,EAAIG,EAAIG,EAAIM,EAAIR,EAAIgB,EAAIC,EAwFhC,GAtFAtB,EAAKnB,GACLoB,KACAG,EAAKvB,GACL0B,EAAK1B,GACLgC,EAAKhC,GACLM,KACI9H,EAAMyJ,OAAOjC,GAAa,KAAOrG,GACnC6H,EAAK7H,EACLqG,IAAe,IAEfwB,EAAK7I,EACmB,IAApB2H,IAAyBY,GAAStH,IAExC0G,KACIkB,IAAO7I,EACTqJ,UAEAhC,GAAcgC,EACdA,EAAKrJ,GAEHqJ,IAAOrJ,GACT6I,EAAKxB,GACLM,KACsC,KAAlC9H,EAAMT,WAAWiI,KACnBwC,EAAK3I,EACLmG,OAEAwC,EAAK7J,EACmB,IAApB2H,IAAyBY,GAASpH,IAExCwG,KACIkC,IAAO7J,EACT6I,UAEAxB,GAAcwB,EACdA,EAAK7I,GAEH6I,IAAO7I,GACT6J,EAAKxC,GACLM,KACI9H,EAAMyJ,OAAOjC,GAAa,KAAOjG,GACnC0I,EAAK1I,EACLiG,IAAe,IAEfyC,EAAK9J,EACmB,IAApB2H,IAAyBY,GAASlH,IAExCsG,KACImC,IAAO9J,EACT6J,UAEAxC,GAAcwC,EACdA,EAAK7J,GAEH6J,IAAO7J,GACLH,EAAMtZ,OAAS8gB,IACjByC,EAAKjK,EAAMkK,OAAO1C,IAClBA,OAEAyC,EAAK9J,EACmB,IAApB2H,IAAyBY,GAASjH,IAEpCwI,IAAO9J,EAET+I,EADAM,GAAMA,EAAIR,EAAIgB,EAAIC,IAGlBzC,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,GAEH+I,IAAO/I,IACTsH,GAAesB,EACfG,EAAKxH,EAAQwH,KAEfH,EAAKG,KACM/I,EACT,KAAO4I,IAAO5I,GACZyI,EAAG7V,KAAKgW,GACRA,EAAKvB,GACL0B,EAAK1B,GACLgC,EAAKhC,GACLM,KACI9H,EAAMyJ,OAAOjC,GAAa,KAAOrG,GACnC6H,EAAK7H,EACLqG,IAAe,IAEfwB,EAAK7I,EACmB,IAApB2H,IAAyBY,GAAStH,IAExC0G,KACIkB,IAAO7I,EACTqJ,UAEAhC,GAAcgC,EACdA,EAAKrJ,GAEHqJ,IAAOrJ,GACT6I,EAAKxB,GACLM,KACsC,KAAlC9H,EAAMT,WAAWiI,KACnBwC,EAAK3I,EACLmG,OAEAwC,EAAK7J,EACmB,IAApB2H,IAAyBY,GAASpH,IAExCwG,KACIkC,IAAO7J,EACT6I,UAEAxB,GAAcwB,EACdA,EAAK7I,GAEH6I,IAAO7I,GACT6J,EAAKxC,GACLM,KACI9H,EAAMyJ,OAAOjC,GAAa,KAAOjG,GACnC0I,EAAK1I,EACLiG,IAAe,IAEfyC,EAAK9J,EACmB,IAApB2H,IAAyBY,GAASlH,IAExCsG,KACImC,IAAO9J,EACT6J,UAEAxC,GAAcwC,EACdA,EAAK7J,GAEH6J,IAAO7J,GACLH,EAAMtZ,OAAS8gB,IACjByC,EAAKjK,EAAMkK,OAAO1C,IAClBA,OAEAyC,EAAK9J,EACmB,IAApB2H,IAAyBY,GAASjH,IAEpCwI,IAAO9J,EAET+I,EADAM,GAAMA,EAAIR,EAAIgB,EAAIC,IAGlBzC,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,GAEH+I,IAAO/I,IACTsH,GAAesB,EACfG,EAAKxH,EAAQwH,IAEfH,EAAKG,OAGPN,EAAKzI,EAQP,OANIyI,IAAOzI,IACTsH,GAAekB,EACfC,EAAKjH,EAAQiH,IAEVA,EAxLP,MATazI,IACTsH,GAAekB,EACfC,EAAK1H,EAAO0H,IAETA,EAyNP,SAASuB,KACP,IAAIxB,EAAQI,EAyBZ,OAvBAJ,EAAKnB,GACA4C,OACMjK,IACT4I,EA7BJ,WACE,IAAIJ,EAAIC,EAOR,GALAD,MACAC,EAAKyB,QACMlK,IACTyI,EAAKmB,MAEHnB,IAAOzI,EACT,KAAOyI,IAAOzI,GACZwI,EAAG5V,KAAK6V,IACRA,EAAKyB,QACMlK,IACTyI,EAAKmB,WAITpB,EAAKxI,EAGP,OAAOwI,EApBT,MA8BexI,GACJmK,OACMnK,GACTsH,GAAekB,EAEfA,EADK/G,EAAQmH,KAWjBvB,GAAcmB,EACdA,EAAKxI,GAGAwI,EAGT,SAASiB,KACP,IAAIjB,EAAIC,EAIR,GAFAD,MACAC,EAAKuB,QACMhK,EACT,KAAOyI,IAAOzI,GACZwI,EAAG5V,KAAK6V,GACRA,EAAKuB,UAGPxB,EAAKxI,EAGP,OAAOwI,EAgRT,SAAS4B,KACP,IAAI5B,EAAIC,EAUR,OARAD,EAAKnB,IACLoB,EA3OF,WACE,IAAID,EAAIC,EAAIG,EAAIG,EAAIM,EAAIR,EAAIgB,EAAIC,EAAIO,EA6GpC,GA3GA7B,EAAKnB,GACLoB,KACAG,EAAKvB,GACL0B,EAAK1B,GACLgC,EAAKhC,GACLM,KACI9H,EAAMyJ,OAAOjC,GAAa,KAAOrG,GACnC6H,EAAK7H,EACLqG,IAAe,IAEfwB,EAAK7I,EACmB,IAApB2H,IAAyBY,GAAStH,IAExC0G,KACIkB,IAAO7I,EACTqJ,UAEAhC,GAAcgC,EACdA,EAAKrJ,GAEHqJ,IAAOrJ,GACT6I,EAAKxB,GACLM,KACsC,KAAlC9H,EAAMT,WAAWiI,KACnBwC,EAAK3I,EACLmG,OAEAwC,EAAK7J,EACmB,IAApB2H,IAAyBY,GAASpH,IAExCwG,KACIkC,IAAO7J,EACT6I,UAEAxB,GAAcwB,EACdA,EAAK7I,GAEH6I,IAAO7I,GACT6J,EAAKxC,GACLM,KACI9H,EAAMyJ,OAAOjC,GAAa,KAAOjG,GACnC0I,EAAK1I,EACLiG,IAAe,IAEfyC,EAAK9J,EACmB,IAApB2H,IAAyBY,GAASlH,IAExCsG,KACImC,IAAO9J,EACT6J,UAEAxC,GAAcwC,EACdA,EAAK7J,GAEH6J,IAAO7J,GACT8J,EAAKzC,GACLM,KACI9H,EAAMyJ,OAAOjC,GAAa,KAAOxF,GACnCwI,EAAKxI,EACLwF,IAAe,IAEfgD,EAAKrK,EACmB,IAApB2H,IAAyBY,GAASzG,IAExC6F,KACI0C,IAAOrK,EACT8J,UAEAzC,GAAcyC,EACdA,EAAK9J,GAEH8J,IAAO9J,GACLH,EAAMtZ,OAAS8gB,IACjBgD,EAAKxK,EAAMkK,OAAO1C,IAClBA,OAEAgD,EAAKrK,EACmB,IAApB2H,IAAyBY,GAASjH,IAEpC+I,IAAOrK,EAET+I,EADAM,GAAMA,EAAIR,EAAIgB,EAAIC,EAAIO,IAGtBhD,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,GAEH+I,IAAO/I,IACTsH,GAAesB,EACfG,EAAKxH,EAAQwH,KAEfH,EAAKG,KACM/I,EACT,KAAO4I,IAAO5I,GACZyI,EAAG7V,KAAKgW,GACRA,EAAKvB,GACL0B,EAAK1B,GACLgC,EAAKhC,GACLM,KACI9H,EAAMyJ,OAAOjC,GAAa,KAAOrG,GACnC6H,EAAK7H,EACLqG,IAAe,IAEfwB,EAAK7I,EACmB,IAApB2H,IAAyBY,GAAStH,IAExC0G,KACIkB,IAAO7I,EACTqJ,UAEAhC,GAAcgC,EACdA,EAAKrJ,GAEHqJ,IAAOrJ,GACT6I,EAAKxB,GACLM,KACsC,KAAlC9H,EAAMT,WAAWiI,KACnBwC,EAAK3I,EACLmG,OAEAwC,EAAK7J,EACmB,IAApB2H,IAAyBY,GAASpH,IAExCwG,KACIkC,IAAO7J,EACT6I,UAEAxB,GAAcwB,EACdA,EAAK7I,GAEH6I,IAAO7I,GACT6J,EAAKxC,GACLM,KACI9H,EAAMyJ,OAAOjC,GAAa,KAAOjG,GACnC0I,EAAK1I,EACLiG,IAAe,IAEfyC,EAAK9J,EACmB,IAApB2H,IAAyBY,GAASlH,IAExCsG,KACImC,IAAO9J,EACT6J,UAEAxC,GAAcwC,EACdA,EAAK7J,GAEH6J,IAAO7J,GACT8J,EAAKzC,GACLM,KACI9H,EAAMyJ,OAAOjC,GAAa,KAAOxF,GACnCwI,EAAKxI,EACLwF,IAAe,IAEfgD,EAAKrK,EACmB,IAApB2H,IAAyBY,GAASzG,IAExC6F,KACI0C,IAAOrK,EACT8J,UAEAzC,GAAcyC,EACdA,EAAK9J,GAEH8J,IAAO9J,GACLH,EAAMtZ,OAAS8gB,IACjBgD,EAAKxK,EAAMkK,OAAO1C,IAClBA,OAEAgD,EAAKrK,EACmB,IAApB2H,IAAyBY,GAASjH,IAEpC+I,IAAOrK,EAET+I,EADAM,GAAMA,EAAIR,EAAIgB,EAAIC,EAAIO,IAGtBhD,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,GAEH+I,IAAO/I,IACTsH,GAAesB,EACfG,EAAKxH,EAAQwH,IAEfH,EAAKG,OAGPN,EAAKzI,EAQP,OANIyI,IAAOzI,IACTsH,GAAekB,EACfC,EAAKjH,EAAQiH,IAEVA,EAlOP,MA4OazI,IACTsH,GAAekB,EACfC,EAAK1H,EAAO0H,IAETA,EAmDP,SAASU,KACP,IAAIX,EAAQI,EAyBZ,OAvBAJ,EAAKnB,GACA4C,OACMjK,IACT4I,EApDJ,WACE,IAAIJ,EAAIC,EAUR,GARAD,MACAC,EAAK6B,QACMtK,IACTyI,EAAKyB,QACMlK,IACTyI,EAAK2B,MAGL3B,IAAOzI,EACT,KAAOyI,IAAOzI,GACZwI,EAAG5V,KAAK6V,IACRA,EAAK6B,QACMtK,IACTyI,EAAKyB,QACMlK,IACTyI,EAAK2B,WAKX5B,EAAKxI,EAGP,OAAOwI,EA1BT,MAqDexI,GACJmK,OACMnK,GACTsH,GAAekB,EAEfA,EADK/G,EAAQmH,KAWjBvB,GAAcmB,EACdA,EAAKxI,GAGAwI,EAmET,SAASgB,KACP,IAAIhB,EAAQI,EAmBZ,OAjBAJ,EAAKnB,GAjBP,WACE,IAAImB,EAUJ,OARsC,KAAlC3I,EAAMT,WAAWiI,KACnBmB,EAAKxG,EACLqF,OAEAmB,EAAKxI,EACmB,IAApB2H,IAAyBY,GAAStG,IAGjCuG,EAXT,KAmBaxI,IACT4I,EAAKW,QACMvJ,GACTsH,GAAekB,EAEfA,EADKtG,EAAQ0G,KAOfvB,GAAcmB,EACdA,EAAKxI,GAGAwI,EAyHT,SAAS8B,KACP,IAAI9B,EAAIC,EAAIG,EAyBZ,OAvBAJ,EAAKnB,GACiC,KAAlCxH,EAAMT,WAAWiI,KACnBoB,EAAKnG,EACL+E,OAEAoB,EAAKzI,EACmB,IAApB2H,IAAyBY,GAAShG,IAEpCkG,IAAOzI,IACT4I,EAvEJ,WACE,IAAIJ,EAAIC,EAAIG,EAAIG,EAAIM,EAAIR,EAuDxB,OArDAL,EAAKnB,GACiC,KAAlCxH,EAAMT,WAAWiI,KACnBoB,EAAKhI,EACL4G,OAEAoB,EAAKzI,EACmB,IAApB2H,IAAyBY,GAAS7H,IAEpC+H,IAAOzI,IACT4I,EAAKW,QACMvJ,IACT+I,EAAKS,QACMxJ,IACT+I,EAAK,MAEHA,IAAO/I,IACTqJ,EAAKK,QACM1J,IACTqJ,EAAK,MAEHA,IAAOrJ,GAC6B,KAAlCH,EAAMT,WAAWiI,KACnBwB,EAAKlI,EACL0G,OAEAwB,EAAK7I,EACmB,IAApB2H,IAAyBY,GAAS3H,IAEpCiI,IAAO7I,GACTsH,GAAekB,EAEfA,EADAC,EAAKpG,EAAQuG,EAAIG,EAAIM,KAGrBhC,GAAcmB,EACdA,EAAKxI,KAGPqH,GAAcmB,EACdA,EAAKxI,KAGPqH,GAAcmB,EACdA,EAAKxI,KAOTqH,GAAcmB,EACdA,EAAKxI,GAGAwI,EAxDT,MAwEexI,GACTsH,GAAekB,EAEfA,EADAC,EAAKjG,EAAQoG,KAOfvB,GAAcmB,EACdA,EAAKxI,GAGAwI,EAkFT,SAAS0B,KACP,IAAI1B,EAAIC,EAAIG,EAyBZ,OAvBAJ,EAAKnB,GACiC,MAAlCxH,EAAMT,WAAWiI,KACnBoB,EAAK9F,EACL0E,OAEAoB,EAAKzI,EACmB,IAApB2H,IAAyBY,GAAS3F,IAEpC6F,IAAOzI,IACT4I,EA7+BJ,WACE,IAAIJ,EAAIC,EAAIG,EAAIG,EAAIM,EA8CpB,OA5CAb,EAAKnB,GACiC,KAAlCxH,EAAMT,WAAWiI,KACnBoB,EAAKhI,EACL4G,OAEAoB,EAAKzI,EACmB,IAApB2H,IAAyBY,GAAS7H,IAEpC+H,IAAOzI,IACT4I,EAAKe,QACM3J,IACT+I,EAAKW,QACM1J,IACT+I,EAAK,MAEHA,IAAO/I,GAC6B,KAAlCH,EAAMT,WAAWiI,KACnBgC,EAAK1I,EACL0G,OAEAgC,EAAKrJ,EACmB,IAApB2H,IAAyBY,GAAS3H,IAEpCyI,IAAOrJ,GACTsH,GAAekB,EAEfA,EADAC,EAAK3H,EAAO8H,EAAIG,KAGhB1B,GAAcmB,EACdA,EAAKxI,KAGPqH,GAAcmB,EACdA,EAAKxI,KAOTqH,GAAcmB,EACdA,EAAKxI,GAGAwI,EA/CT,MA8+BexI,GACTsH,GAAekB,EAEfA,EADAC,EAAK3F,EAAQ8F,KAOfvB,GAAcmB,EACdA,EAAKxI,GAGAwI,EAqDT,SAASyB,KACP,IAAIzB,EAAIC,EAAIG,EAYZ,IAVAjB,KACAa,EAAKnB,GACLoB,KACsC,KAAlC5I,EAAMT,WAAWiI,KACnBuB,EAAK1F,EACLmE,OAEAuB,EAAK5I,EACmB,IAApB2H,IAAyBY,GAASpF,IAEjCyF,IAAO5I,GACZyI,EAAG7V,KAAKgW,GAC8B,KAAlC/I,EAAMT,WAAWiI,KACnBuB,EAAK1F,EACLmE,OAEAuB,EAAK5I,EACmB,IAApB2H,IAAyBY,GAASpF,IA4B1C,OAzBIsF,IAAOzI,GACTsH,GAAeD,IAGbuB,GAFFA,EAAKxF,EAAQqF,WAINzI,KAEIA,EAETwI,EADAC,GAAMA,EAAIG,IAGVvB,GAAcmB,EACdA,EAAKxI,KAGPqH,GAAcmB,EACdA,EAAKxI,GAEP2H,KACIa,IAAOxI,IACTyI,EAAKzI,EACmB,IAApB2H,IAAyBY,GAASvF,IAGjCwF,EAGT,SAASU,KAWP,OARA5B,GAAeD,GACV9D,WAIEvD,EAMT,SAASoJ,KAWP,OARA9B,GAAeD,GACV7D,WAIExD,EAyJT,SAAS2I,KACP,IAAIH,EAAIC,EAAIG,EAAIG,EAAIM,EA2CpB,OAzCAb,EAAKnB,IACLoB,EAAKK,QACM9I,IACTyI,EAAK,MAEHA,IAAOzI,GACLH,EAAMyJ,OAAOjC,GAAa,KAAO5D,GACnCmF,EAAKnF,EACL4D,IAAe,IAEfuB,EAAK5I,EACmB,IAApB2H,IAAyBY,GAAS7E,KAEpCkF,IAAO5I,IACT+I,EApKN,WACE,IAAIP,EAAIC,EAAIG,EAAIG,EAAIM,EAAIR,EAAIgB,EAmE5B,GAjEArB,EAAKnB,GACLoB,KACAG,EAAKvB,GACL0B,EAAK1B,GACLgC,EAAKhC,GACLM,KACI9H,EAAMyJ,OAAOjC,GAAa,KAAOrG,GACnC6H,EAAK7H,EACLqG,IAAe,IAEfwB,EAAK7I,EACmB,IAApB2H,IAAyBY,GAAStH,IAExC0G,KACIkB,IAAO7I,EACTqJ,UAEAhC,GAAcgC,EACdA,EAAKrJ,GAEHqJ,IAAOrJ,GACT6I,EAAKxB,GACLM,KACsC,KAAlC9H,EAAMT,WAAWiI,KACnBwC,EAAK3I,EACLmG,OAEAwC,EAAK7J,EACmB,IAApB2H,IAAyBY,GAASpH,IAExCwG,KACIkC,IAAO7J,EACT6I,UAEAxB,GAAcwB,EACdA,EAAK7I,GAEH6I,IAAO7I,GACLH,EAAMtZ,OAAS8gB,IACjBwC,EAAKhK,EAAMkK,OAAO1C,IAClBA,OAEAwC,EAAK7J,EACmB,IAApB2H,IAAyBY,GAASjH,IAEpCuI,IAAO7J,EAET+I,EADAM,GAAMA,EAAIR,EAAIgB,IAGdxC,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,GAEH+I,IAAO/I,IACTsH,GAAesB,EACfG,EAAKxH,EAAQwH,KAEfH,EAAKG,KACM/I,EACT,KAAO4I,IAAO5I,GACZyI,EAAG7V,KAAKgW,GACRA,EAAKvB,GACL0B,EAAK1B,GACLgC,EAAKhC,GACLM,KACI9H,EAAMyJ,OAAOjC,GAAa,KAAOrG,GACnC6H,EAAK7H,EACLqG,IAAe,IAEfwB,EAAK7I,EACmB,IAApB2H,IAAyBY,GAAStH,IAExC0G,KACIkB,IAAO7I,EACTqJ,UAEAhC,GAAcgC,EACdA,EAAKrJ,GAEHqJ,IAAOrJ,GACT6I,EAAKxB,GACLM,KACsC,KAAlC9H,EAAMT,WAAWiI,KACnBwC,EAAK3I,EACLmG,OAEAwC,EAAK7J,EACmB,IAApB2H,IAAyBY,GAASpH,IAExCwG,KACIkC,IAAO7J,EACT6I,UAEAxB,GAAcwB,EACdA,EAAK7I,GAEH6I,IAAO7I,GACLH,EAAMtZ,OAAS8gB,IACjBwC,EAAKhK,EAAMkK,OAAO1C,IAClBA,OAEAwC,EAAK7J,EACmB,IAApB2H,IAAyBY,GAASjH,IAEpCuI,IAAO7J,EAET+I,EADAM,GAAMA,EAAIR,EAAIgB,IAGdxC,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,GAEH+I,IAAO/I,IACTsH,GAAesB,EACfG,EAAKxH,EAAQwH,IAEfH,EAAKG,OAGPN,EAAKzI,EAQP,OANIyI,IAAOzI,IACTsH,GAAekB,EACfC,EAAKjH,EAAQiH,IAEVA,EA9IP,MAqKiBzI,IACTqJ,EAAKc,QACMnK,IACTqJ,EAAK,MAEHA,IAAOrJ,GACTsH,GAAekB,EAEfA,EADAC,EAAK9E,GAAQoF,KAGb1B,GAAcmB,EACdA,EAAKxI,KAOTqH,GAAcmB,EACdA,EAAKxI,KAGPqH,GAAcmB,EACdA,EAAKxI,GAGAwI,EAGT,SAASmB,KACP,IAAInB,EAAIC,EAAIG,EAAIG,EAAIM,EAAIR,EAAIgB,EAAIC,EAAIO,EA8GpC,GA5GA1C,KACAa,EAAKnB,GACLoB,KACAG,EAAKvB,GACL0B,EAAK1B,GACLgC,EAAKhC,GACLM,KACI9H,EAAMyJ,OAAOjC,GAAa,KAAOrG,GACnC6H,EAAK7H,EACLqG,IAAe,IAEfwB,EAAK7I,EACmB,IAApB2H,IAAyBY,GAAStH,IAExC0G,KACIkB,IAAO7I,EACTqJ,UAEAhC,GAAcgC,EACdA,EAAKrJ,GAEHqJ,IAAOrJ,GACT6I,EAAKxB,GACLM,KACsC,KAAlC9H,EAAMT,WAAWiI,KACnBwC,EAAK3I,EACLmG,OAEAwC,EAAK7J,EACmB,IAApB2H,IAAyBY,GAASpH,IAExCwG,KACIkC,IAAO7J,EACT6I,UAEAxB,GAAcwB,EACdA,EAAK7I,GAEH6I,IAAO7I,GACT6J,EAAKxC,GACLM,KACsC,KAAlC9H,EAAMT,WAAWiI,KACnByC,EAAKnJ,EACL0G,OAEAyC,EAAK9J,EACmB,IAApB2H,IAAyBY,GAAS3H,IAExC+G,KACImC,IAAO9J,EACT6J,UAEAxC,GAAcwC,EACdA,EAAK7J,GAEH6J,IAAO7J,GACT8J,EAAKzC,GACLM,KACsC,KAAlC9H,EAAMT,WAAWiI,KACnBgD,EAAK/J,EACL+G,OAEAgD,EAAKrK,EACmB,IAApB2H,IAAyBY,GAAShI,IAExCoH,KACI0C,IAAOrK,EACT8J,UAEAzC,GAAcyC,EACdA,EAAK9J,GAEH8J,IAAO9J,GACLH,EAAMtZ,OAAS8gB,IACjBgD,EAAKxK,EAAMkK,OAAO1C,IAClBA,OAEAgD,EAAKrK,EACmB,IAApB2H,IAAyBY,GAASjH,IAEpC+I,IAAOrK,EAET+I,EADAM,GAAMA,EAAIR,EAAIgB,EAAIC,EAAIO,IAGtBhD,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,GAEH+I,IAAO/I,IACTsH,GAAesB,EACfG,EAAKxH,EAAQwH,KAEfH,EAAKG,KACM/I,EACT,KAAO4I,IAAO5I,GACZyI,EAAG7V,KAAKgW,GACRA,EAAKvB,GACL0B,EAAK1B,GACLgC,EAAKhC,GACLM,KACI9H,EAAMyJ,OAAOjC,GAAa,KAAOrG,GACnC6H,EAAK7H,EACLqG,IAAe,IAEfwB,EAAK7I,EACmB,IAApB2H,IAAyBY,GAAStH,IAExC0G,KACIkB,IAAO7I,EACTqJ,UAEAhC,GAAcgC,EACdA,EAAKrJ,GAEHqJ,IAAOrJ,GACT6I,EAAKxB,GACLM,KACsC,KAAlC9H,EAAMT,WAAWiI,KACnBwC,EAAK3I,EACLmG,OAEAwC,EAAK7J,EACmB,IAApB2H,IAAyBY,GAASpH,IAExCwG,KACIkC,IAAO7J,EACT6I,UAEAxB,GAAcwB,EACdA,EAAK7I,GAEH6I,IAAO7I,GACT6J,EAAKxC,GACLM,KACsC,KAAlC9H,EAAMT,WAAWiI,KACnByC,EAAKnJ,EACL0G,OAEAyC,EAAK9J,EACmB,IAApB2H,IAAyBY,GAAS3H,IAExC+G,KACImC,IAAO9J,EACT6J,UAEAxC,GAAcwC,EACdA,EAAK7J,GAEH6J,IAAO7J,GACT8J,EAAKzC,GACLM,KACsC,KAAlC9H,EAAMT,WAAWiI,KACnBgD,EAAK/J,EACL+G,OAEAgD,EAAKrK,EACmB,IAApB2H,IAAyBY,GAAShI,IAExCoH,KACI0C,IAAOrK,EACT8J,UAEAzC,GAAcyC,EACdA,EAAK9J,GAEH8J,IAAO9J,GACLH,EAAMtZ,OAAS8gB,IACjBgD,EAAKxK,EAAMkK,OAAO1C,IAClBA,OAEAgD,EAAKrK,EACmB,IAApB2H,IAAyBY,GAASjH,IAEpC+I,IAAOrK,EAET+I,EADAM,GAAMA,EAAIR,EAAIgB,EAAIC,EAAIO,IAGtBhD,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,GAEH+I,IAAO/I,IACTsH,GAAesB,EACfG,EAAKxH,EAAQwH,IAEfH,EAAKG,OAGPN,EAAKzI,EAaP,OAXIyI,IAAOzI,IACTsH,GAAekB,EACfC,EAAKjH,EAAQiH,IAGfd,MADAa,EAAKC,KAEMzI,IACTyI,EAAKzI,EACmB,IAApB2H,IAAyBY,GAAS3E,KAGjC4E,EAGT,SAASe,KACP,IAAIf,EAAIC,EAAIG,EAAIG,EAAIM,EAAIR,EAAIgB,EAAIC,EAAIO,EAAIE,EAmIxC,GAjIA5C,KACAa,EAAKnB,GACLoB,KACAG,EAAKvB,GACL0B,EAAK1B,GACLgC,EAAKhC,GACLM,KACI9H,EAAMyJ,OAAOjC,GAAa,KAAOrG,GACnC6H,EAAK7H,EACLqG,IAAe,IAEfwB,EAAK7I,EACmB,IAApB2H,IAAyBY,GAAStH,IAExC0G,KACIkB,IAAO7I,EACTqJ,UAEAhC,GAAcgC,EACdA,EAAKrJ,GAEHqJ,IAAOrJ,GACT6I,EAAKxB,GACLM,KACsC,KAAlC9H,EAAMT,WAAWiI,KACnBwC,EAAK3I,EACLmG,OAEAwC,EAAK7J,EACmB,IAApB2H,IAAyBY,GAASpH,IAExCwG,KACIkC,IAAO7J,EACT6I,UAEAxB,GAAcwB,EACdA,EAAK7I,GAEH6I,IAAO7I,GACT6J,EAAKxC,GACLM,KACsC,KAAlC9H,EAAMT,WAAWiI,KACnByC,EAAK9H,EACLqF,OAEAyC,EAAK9J,EACmB,IAApB2H,IAAyBY,GAAStG,IAExC0F,KACImC,IAAO9J,EACT6J,UAEAxC,GAAcwC,EACdA,EAAK7J,GAEH6J,IAAO7J,GACT8J,EAAKzC,GACLM,KACsC,KAAlC9H,EAAMT,WAAWiI,KACnBgD,EAAK1J,EACL0G,OAEAgD,EAAKrK,EACmB,IAApB2H,IAAyBY,GAAS3H,IAExC+G,KACI0C,IAAOrK,EACT8J,UAEAzC,GAAcyC,EACdA,EAAK9J,GAEH8J,IAAO9J,GACTqK,EAAKhD,GACLM,KACsC,KAAlC9H,EAAMT,WAAWiI,KACnBkD,EAAKjK,EACL+G,OAEAkD,EAAKvK,EACmB,IAApB2H,IAAyBY,GAAShI,IAExCoH,KACI4C,IAAOvK,EACTqK,UAEAhD,GAAcgD,EACdA,EAAKrK,GAEHqK,IAAOrK,GACLH,EAAMtZ,OAAS8gB,IACjBkD,EAAK1K,EAAMkK,OAAO1C,IAClBA,OAEAkD,EAAKvK,EACmB,IAApB2H,IAAyBY,GAASjH,IAEpCiJ,IAAOvK,EAET+I,EADAM,GAAMA,EAAIR,EAAIgB,EAAIC,EAAIO,EAAIE,IAG1BlD,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,GAEH+I,IAAO/I,IACTsH,GAAesB,EACfG,EAAKxH,EAAQwH,KAEfH,EAAKG,KACM/I,EACT,KAAO4I,IAAO5I,GACZyI,EAAG7V,KAAKgW,GACRA,EAAKvB,GACL0B,EAAK1B,GACLgC,EAAKhC,GACLM,KACI9H,EAAMyJ,OAAOjC,GAAa,KAAOrG,GACnC6H,EAAK7H,EACLqG,IAAe,IAEfwB,EAAK7I,EACmB,IAApB2H,IAAyBY,GAAStH,IAExC0G,KACIkB,IAAO7I,EACTqJ,UAEAhC,GAAcgC,EACdA,EAAKrJ,GAEHqJ,IAAOrJ,GACT6I,EAAKxB,GACLM,KACsC,KAAlC9H,EAAMT,WAAWiI,KACnBwC,EAAK3I,EACLmG,OAEAwC,EAAK7J,EACmB,IAApB2H,IAAyBY,GAASpH,IAExCwG,KACIkC,IAAO7J,EACT6I,UAEAxB,GAAcwB,EACdA,EAAK7I,GAEH6I,IAAO7I,GACT6J,EAAKxC,GACLM,KACsC,KAAlC9H,EAAMT,WAAWiI,KACnByC,EAAK9H,EACLqF,OAEAyC,EAAK9J,EACmB,IAApB2H,IAAyBY,GAAStG,IAExC0F,KACImC,IAAO9J,EACT6J,UAEAxC,GAAcwC,EACdA,EAAK7J,GAEH6J,IAAO7J,GACT8J,EAAKzC,GACLM,KACsC,KAAlC9H,EAAMT,WAAWiI,KACnBgD,EAAK1J,EACL0G,OAEAgD,EAAKrK,EACmB,IAApB2H,IAAyBY,GAAS3H,IAExC+G,KACI0C,IAAOrK,EACT8J,UAEAzC,GAAcyC,EACdA,EAAK9J,GAEH8J,IAAO9J,GACTqK,EAAKhD,GACLM,KACsC,KAAlC9H,EAAMT,WAAWiI,KACnBkD,EAAKjK,EACL+G,OAEAkD,EAAKvK,EACmB,IAApB2H,IAAyBY,GAAShI,IAExCoH,KACI4C,IAAOvK,EACTqK,UAEAhD,GAAcgD,EACdA,EAAKrK,GAEHqK,IAAOrK,GACLH,EAAMtZ,OAAS8gB,IACjBkD,EAAK1K,EAAMkK,OAAO1C,IAClBA,OAEAkD,EAAKvK,EACmB,IAApB2H,IAAyBY,GAASjH,IAEpCiJ,IAAOvK,EAET+I,EADAM,GAAMA,EAAIR,EAAIgB,EAAIC,EAAIO,EAAIE,IAG1BlD,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,KAGPqH,GAAc0B,EACdA,EAAK/I,GAEH+I,IAAO/I,IACTsH,GAAesB,EACfG,EAAKxH,EAAQwH,IAEfH,EAAKG,OAGPN,EAAKzI,EAaP,OAXIyI,IAAOzI,IACTsH,GAAekB,EACfC,EAAKjH,EAAQiH,IAGfd,MADAa,EAAKC,KAEMzI,IACTyI,EAAKzI,EACmB,IAApB2H,IAAyBY,GAAS3E,KAGjC4E,EA4CT,SAAS2B,KACP,IAAI3B,EAaJ,OAXAb,MACAa,EAAKM,QACM9I,IACTwI,EAgFJ,WACE,IAAIA,EAAIC,EAmBR,OAjBAD,EAAKnB,GACLM,KACI9H,EAAMtZ,OAAS8gB,IACjBoB,EAAK5I,EAAMkK,OAAO1C,IAClBA,OAEAoB,EAAKzI,EACmB,IAApB2H,IAAyBY,GAASjH,IAExCqG,KACIc,IAAOzI,EACTwI,UAEAnB,GAAcmB,EACdA,EAAKxI,GAGAwI,EApBT,IA9EEb,KACIa,IAAOxI,GAEe,IAApB2H,IAAyBY,GAAS1E,IAGjC2E,EAGT,SAASM,KACP,IAAIN,EAAIC,EAQR,GANAd,KACAa,MACAC,EAAK+B,QACMxK,IACTyI,EAAKgC,MAEHhC,IAAOzI,EACT,KAAOyI,IAAOzI,GACZwI,EAAG5V,KAAK6V,IACRA,EAAK+B,QACMxK,IACTyI,EAAKgC,WAITjC,EAAKxI,EAQP,OANA2H,KACIa,IAAOxI,IACTyI,EAAKzI,EACmB,IAApB2H,IAAyBY,GAASxE,KAGjCyE,EAGT,SAASgC,KACP,IAAIhC,EAgBJ,OAdAb,KACsC,KAAlC9H,EAAMT,WAAWiI,KACnBmB,EAAKtH,EACLmG,OAEAmB,EAAKxI,EACmB,IAApB2H,IAAyBY,GAASpH,IAExCwG,KACIa,IAAOxI,GAEe,IAApB2H,IAAyBY,GAASvE,IAGjCwE,EAGT,SAASiC,KACP,IAAIjC,EAgBJ,OAdAb,KACI9H,EAAMyJ,OAAOjC,GAAa,KAAOrG,GACnCwH,EAAKxH,EACLqG,IAAe,IAEfmB,EAAKxI,EACmB,IAApB2H,IAAyBY,GAAStH,IAExC0G,KACIa,IAAOxI,GAEe,IAApB2H,IAAyBY,GAAStE,IAGjCuE,EA0BT,SAASS,KACP,IAAIT,EAAIC,EAAIG,EAAIG,EAUhB,GARAP,EAAKnB,GACiC,KAAlCxH,EAAMT,WAAWiI,KACnBoB,EAAKvE,GACLmD,OAEAoB,EAAKzI,EACmB,IAApB2H,IAAyBY,GAASpE,KAEpCsE,IAAOzI,EAAY,CAGrB,GAFA4I,MACAG,EAAK2B,QACM1K,EACT,KAAO+I,IAAO/I,GACZ4I,EAAGhW,KAAKmW,GACRA,EAAK2B,UAGP9B,EAAK5I,EAEH4I,IAAO5I,GAC6B,KAAlCH,EAAMT,WAAWiI,KACnB0B,EAAK3E,GACLiD,OAEA0B,EAAK/I,EACmB,IAApB2H,IAAyBY,GAASlE,KAEpC0E,IAAO/I,GACTsH,GAAekB,EAEfA,EADAC,EAAKnE,GAAQsE,KAGbvB,GAAcmB,EACdA,EAAKxI,KAGPqH,GAAcmB,EACdA,EAAKxI,QAGPqH,GAAcmB,EACdA,EAAKxI,EAGP,OAAOwI,EAGT,SAASkC,KACP,IAAIlC,EAAIC,EAAIG,EAAIG,EAAIM,EAAIR,EAAIgB,EAAIC,EAAIO,EAAIE,EAWxC,IATA/B,EAAKnB,GACLoB,KACsC,KAAlC5I,EAAMT,WAAWiI,KACnBuB,EAAK1F,EACLmE,OAEAuB,EAAK5I,EACmB,IAApB2H,IAAyBY,GAASpF,IAEjCyF,IAAO5I,GACZyI,EAAG7V,KAAKgW,GAC8B,KAAlC/I,EAAMT,WAAWiI,KACnBuB,EAAK1F,EACLmE,OAEAuB,EAAK5I,EACmB,IAApB2H,IAAyBY,GAASpF,IAM1C,GAHIsF,IAAOzI,IACTyI,EAAK,MAEHA,IAAOzI,EAET,IADA4I,EAAK+B,QACM3K,EAAY,CASrB,IARA+I,KACsC,KAAlClJ,EAAMT,WAAWiI,KACnBgC,EAAKnG,EACLmE,OAEAgC,EAAKrJ,EACmB,IAApB2H,IAAyBY,GAASpF,IAEjCkG,IAAOrJ,GACZ+I,EAAGnW,KAAKyW,GAC8B,KAAlCxJ,EAAMT,WAAWiI,KACnBgC,EAAKnG,EACLmE,OAEAgC,EAAKrJ,EACmB,IAApB2H,IAAyBY,GAASpF,IAM1C,GAHI4F,IAAO/I,IACT+I,EAAK,MAEHA,IAAO/I,EAQT,GAPsC,KAAlCH,EAAMT,WAAWiI,KACnBgC,EAAK7E,GACL6C,OAEAgC,EAAKrJ,EACmB,IAApB2H,IAAyBY,GAAS9D,KAEpC4E,IAAOrJ,EAAY,CASrB,IARA6I,KACsC,KAAlChJ,EAAMT,WAAWiI,KACnBwC,EAAK3G,EACLmE,OAEAwC,EAAK7J,EACmB,IAApB2H,IAAyBY,GAASpF,IAEjC0G,IAAO7J,GACZ6I,EAAGjW,KAAKiX,GAC8B,KAAlChK,EAAMT,WAAWiI,KACnBwC,EAAK3G,EACLmE,OAEAwC,EAAK7J,EACmB,IAApB2H,IAAyBY,GAASpF,IAM1C,GAHI0F,IAAO7I,IACT6I,EAAK,MAEHA,IAAO7I,EAET,IADA6J,EAAKc,QACM3K,EAAY,CAUrB,IATA8J,EAAKzC,GACLgD,KACsC,KAAlCxK,EAAMT,WAAWiI,KACnBkD,EAAKrH,EACLmE,OAEAkD,EAAKvK,EACmB,IAApB2H,IAAyBY,GAASpF,IAEjCoH,IAAOvK,GACZqK,EAAGzX,KAAK2X,GAC8B,KAAlC1K,EAAMT,WAAWiI,KACnBkD,EAAKrH,EACLmE,OAEAkD,EAAKvK,EACmB,IAApB2H,IAAyBY,GAASpF,IA4B1C,GAzBIkH,IAAOrK,IACTqK,EAAK,MAEHA,IAAOrK,GAC6B,KAAlCH,EAAMT,WAAWiI,KACnBkD,EAAK7F,GACL2C,OAEAkD,EAAKvK,EACmB,IAApB2H,IAAyBY,GAAS5D,KAEpC4F,IAAOvK,EAET8J,EADAO,GAAMA,EAAIE,IAGVlD,GAAcyC,EACdA,EAAK9J,KAGPqH,GAAcyC,EACdA,EAAK9J,GAEH8J,IAAO9J,IACT8J,EAAK,MAEHA,IAAO9J,EAAY,CASrB,IARAqK,KACsC,KAAlCxK,EAAMT,WAAWiI,KACnBkD,EAAKrH,EACLmE,OAEAkD,EAAKvK,EACmB,IAApB2H,IAAyBY,GAASpF,IAEjCoH,IAAOvK,GACZqK,EAAGzX,KAAK2X,GAC8B,KAAlC1K,EAAMT,WAAWiI,KACnBkD,EAAKrH,EACLmE,OAEAkD,EAAKvK,EACmB,IAApB2H,IAAyBY,GAASpF,IAGtCkH,IAAOrK,IACTqK,EAAK,MAEHA,IAAOrK,GACTsH,GAAekB,EAEfA,EADAC,EAAK7D,GAAQgE,EAAIiB,KAGjBxC,GAAcmB,EACdA,EAAKxI,QAGPqH,GAAcmB,EACdA,EAAKxI,OAGPqH,GAAcmB,EACdA,EAAKxI,OAGPqH,GAAcmB,EACdA,EAAKxI,OAGPqH,GAAcmB,EACdA,EAAKxI,OAGPqH,GAAcmB,EACdA,EAAKxI,OAGPqH,GAAcmB,EACdA,EAAKxI,OAGPqH,GAAcmB,EACdA,EAAKxI,EAGP,OAAOwI,EAGT,SAASmC,KACP,IAAInC,EAAIC,EAAIG,EAAIG,EAUhB,GARAP,EAAKnB,GACiC,KAAlCxH,EAAMT,WAAWiI,KACnBoB,EAAK1D,GACLsC,OAEAoB,EAAKzI,EACmB,IAApB2H,IAAyBY,GAASvD,KAEpCyD,IAAOzI,EAAY,CAGrB,IAFA4I,KACAG,EAAK6B,KACE7B,IAAO/I,GACZ4I,EAAGhW,KAAKmW,GACRA,EAAK6B,KAEHhC,IAAO5I,GAC6B,KAAlCH,EAAMT,WAAWiI,KACnB0B,EAAKhE,GACLsC,OAEA0B,EAAK/I,EACmB,IAApB2H,IAAyBY,GAASvD,KAEpC+D,IAAO/I,GACTsH,GAAekB,EAEfA,EADAC,EAAKxD,GAAQ2D,KAGbvB,GAAcmB,EACdA,EAAKxI,KAGPqH,GAAcmB,EACdA,EAAKxI,QAGPqH,GAAcmB,EACdA,EAAKxI,EAEP,GAAIwI,IAAOxI,EAST,GARAwI,EAAKnB,GACiC,KAAlCxH,EAAMT,WAAWiI,KACnBoB,EAAKtD,GACLkC,OAEAoB,EAAKzI,EACmB,IAApB2H,IAAyBY,GAASnD,KAEpCqD,IAAOzI,EAAY,CAGrB,IAFA4I,KACAG,EAAK8B,KACE9B,IAAO/I,GACZ4I,EAAGhW,KAAKmW,GACRA,EAAK8B,KAEHjC,IAAO5I,GAC6B,KAAlCH,EAAMT,WAAWiI,KACnB0B,EAAK5D,GACLkC,OAEA0B,EAAK/I,EACmB,IAApB2H,IAAyBY,GAASnD,KAEpC2D,IAAO/I,GACTsH,GAAekB,EAEfA,EADAC,EAAKxD,GAAQ2D,KAGbvB,GAAcmB,EACdA,EAAKxI,KAGPqH,GAAcmB,EACdA,EAAKxI,QAGPqH,GAAcmB,EACdA,EAAKxI,EAIT,OAAOwI,EAGT,SAASoC,KACP,IAAIpC,EAAIC,EAAIG,EAkFZ,OAhFAJ,EAAKnB,GACLoB,EAAKpB,GACLM,KACsC,KAAlC9H,EAAMT,WAAWiI,KACnBuB,EAAK7D,GACLsC,OAEAuB,EAAK5I,EACmB,IAApB2H,IAAyBY,GAASvD,KAEpC4D,IAAO5I,IAC6B,KAAlCH,EAAMT,WAAWiI,KACnBuB,EAAKvD,GACLgC,OAEAuB,EAAK5I,EACmB,IAApB2H,IAAyBY,GAASjD,KAEpCsD,IAAO5I,IAC6B,KAAlCH,EAAMT,WAAWiI,KACnBuB,EAAK1H,EACLmG,OAEAuB,EAAK5I,EACmB,IAApB2H,IAAyBY,GAASpH,MAI5CwG,KACIiB,IAAO5I,EACTyI,UAEApB,GAAcoB,EACdA,EAAKzI,GAEHyI,IAAOzI,GACLH,EAAMtZ,OAAS8gB,IACjBuB,EAAK/I,EAAMkK,OAAO1C,IAClBA,OAEAuB,EAAK5I,EACmB,IAApB2H,IAAyBY,GAASjH,IAEpCsH,IAAO5I,GACTsH,GAAekB,EAEfA,EADAC,EAAKlD,GAAQqD,KAGbvB,GAAcmB,EACdA,EAAKxI,KAGPqH,GAAcmB,EACdA,EAAKxI,GAEHwI,IAAOxI,IACTwI,EAAKnB,GACiC,KAAlCxH,EAAMT,WAAWiI,KACnBoB,EAAKpD,GACLgC,OAEAoB,EAAKzI,EACmB,IAApB2H,IAAyBY,GAASjD,KAEpCmD,IAAOzI,IACT4I,EAAKkC,QACM9K,GACTsH,GAAekB,EAEfA,EADAC,EAAKhD,GAAQmD,KAOfvB,GAAcmB,EACdA,EAAKxI,IAIFwI,EAGT,SAASqC,KACP,IAAIrC,EAAIC,EAAIG,EAkFZ,OAhFAJ,EAAKnB,GACLoB,EAAKpB,GACLM,KACsC,KAAlC9H,EAAMT,WAAWiI,KACnBuB,EAAKzD,GACLkC,OAEAuB,EAAK5I,EACmB,IAApB2H,IAAyBY,GAASnD,KAEpCwD,IAAO5I,IAC6B,KAAlCH,EAAMT,WAAWiI,KACnBuB,EAAKvD,GACLgC,OAEAuB,EAAK5I,EACmB,IAApB2H,IAAyBY,GAASjD,KAEpCsD,IAAO5I,IAC6B,KAAlCH,EAAMT,WAAWiI,KACnBuB,EAAK1H,EACLmG,OAEAuB,EAAK5I,EACmB,IAApB2H,IAAyBY,GAASpH,MAI5CwG,KACIiB,IAAO5I,EACTyI,UAEApB,GAAcoB,EACdA,EAAKzI,GAEHyI,IAAOzI,GACLH,EAAMtZ,OAAS8gB,IACjBuB,EAAK/I,EAAMkK,OAAO1C,IAClBA,OAEAuB,EAAK5I,EACmB,IAApB2H,IAAyBY,GAASjH,IAEpCsH,IAAO5I,GACTsH,GAAekB,EAEfA,EADAC,EAAKlD,GAAQqD,KAGbvB,GAAcmB,EACdA,EAAKxI,KAGPqH,GAAcmB,EACdA,EAAKxI,GAEHwI,IAAOxI,IACTwI,EAAKnB,GACiC,KAAlCxH,EAAMT,WAAWiI,KACnBoB,EAAKpD,GACLgC,OAEAoB,EAAKzI,EACmB,IAApB2H,IAAyBY,GAASjD,KAEpCmD,IAAOzI,IACT4I,EAAKkC,QACM9K,GACTsH,GAAekB,EAEfA,EADAC,EAAKhD,GAAQmD,KAOfvB,GAAcmB,EACdA,EAAKxI,IAIFwI,EAGT,SAASsC,KACP,IAAItC,EAAIC,EAAIG,EAAIG,EAAIM,EAAIR,EAAIgB,EAAIC,EA8KhC,OA5KsC,KAAlCjK,EAAMT,WAAWiI,KACnBmB,EAAKrD,GACLkC,OAEAmB,EAAKxI,EACmB,IAApB2H,IAAyBY,GAASnD,KAEpCoD,IAAOxI,IAC6B,KAAlCH,EAAMT,WAAWiI,KACnBmB,EAAKzD,GACLsC,OAEAmB,EAAKxI,EACmB,IAApB2H,IAAyBY,GAASvD,KAEpCwD,IAAOxI,IAC6B,KAAlCH,EAAMT,WAAWiI,KACnBmB,EAAKnD,GACLgC,OAEAmB,EAAKxI,EACmB,IAApB2H,IAAyBY,GAASjD,KAEpCkD,IAAOxI,IACTwI,EAAKnB,GACiC,KAAlCxH,EAAMT,WAAWiI,KACnBoB,EAAK9C,GACL0B,OAEAoB,EAAKzI,EACmB,IAApB2H,IAAyBY,GAAS3C,KAEpC6C,IAAOzI,IACTsH,GAAekB,EACfC,EAAK5C,OAEP2C,EAAKC,KACMzI,IACTwI,EAAKnB,GACiC,MAAlCxH,EAAMT,WAAWiI,KACnBoB,EAAK3C,GACLuB,OAEAoB,EAAKzI,EACmB,IAApB2H,IAAyBY,GAASxC,KAEpC0C,IAAOzI,IACTsH,GAAekB,EACfC,EAAKzC,OAEPwC,EAAKC,KACMzI,IACTwI,EAAKnB,GACiC,MAAlCxH,EAAMT,WAAWiI,KACnBoB,EAAKxC,GACLoB,OAEAoB,EAAKzI,EACmB,IAApB2H,IAAyBY,GAASrC,KAEpCuC,IAAOzI,IACTsH,GAAekB,EACfC,EAAKtC,OAEPqC,EAAKC,KACMzI,IACTwI,EAAKnB,GACiC,MAAlCxH,EAAMT,WAAWiI,KACnBoB,EAAKrC,GACLiB,OAEAoB,EAAKzI,EACmB,IAApB2H,IAAyBY,GAASlC,KAEpCoC,IAAOzI,IACTsH,GAAekB,EACfC,EAAKnC,OAEPkC,EAAKC,KACMzI,IACTwI,EAAKnB,GACiC,MAAlCxH,EAAMT,WAAWiI,KACnBoB,EAAKlC,GACLc,OAEAoB,EAAKzI,EACmB,IAApB2H,IAAyBY,GAAS/B,KAEpCiC,IAAOzI,IACTsH,GAAekB,EACfC,EAAKhC,OAEP+B,EAAKC,KACMzI,IACTwI,EAAKnB,GACiC,MAAlCxH,EAAMT,WAAWiI,KACnBoB,EAAK/B,GACLW,OAEAoB,EAAKzI,EACmB,IAApB2H,IAAyBY,GAAS5B,KAEpC8B,IAAOzI,IACTsH,GAAekB,EACfC,EAAK7B,OAEP4B,EAAKC,KACMzI,IACTwI,EAAKnB,GACiC,MAAlCxH,EAAMT,WAAWiI,KACnBoB,EAAK5B,GACLQ,OAEAoB,EAAKzI,EACmB,IAApB2H,IAAyBY,GAASzB,KAEpC2B,IAAOzI,GACT4I,EAAKvB,GACL0B,EAAK1B,IACLgC,EAAK0B,QACM/K,IACT6I,EAAKkC,QACM/K,IACT6J,EAAKkB,QACM/K,IACT8J,EAAKiB,QACM/K,EAET+I,EADAM,GAAMA,EAAIR,EAAIgB,EAAIC,IAexBzC,GAAc0B,EACdA,EAAK/I,IAGL4I,EADEG,IAAO/I,EACJH,EAAMmL,UAAUpC,EAAIvB,IAEpB0B,KAEI/I,GACTsH,GAAekB,EAEfA,EADAC,EAAK1B,GAAQ6B,KAGbvB,GAAcmB,EACdA,EAAKxI,KAGPqH,GAAcmB,EACdA,EAAKxI,YAYlBwI,EAGT,SAASuC,KACP,IAAIvC,EAUJ,OARIrB,GAAQ8D,KAAKpL,EAAMkK,OAAO1C,MAC5BmB,EAAK3I,EAAMkK,OAAO1C,IAClBA,OAEAmB,EAAKxI,EACmB,IAApB2H,IAAyBY,GAASnB,KAGjCoB,EAGR,IAAIlF,GAAO,EAAOD,GAAQ,EAI3B,IAFAtD,EAAaK,OAEMJ,GAAcqH,KAAgBxH,EAAMtZ,OACrD,OAAOwZ,EAMP,MAJIA,IAAeC,GAAcqH,GAAcxH,EAAMtZ,QACnDgiB,IAx0FO5gB,KAAM,QAyEjB,SAAkCmW,EAAUC,EAAOC,GACjD,OAAO,IAAIH,EACTA,EAAgBQ,aAAaP,EAAUC,GACvCD,EACAC,EACAC,GA6vFIkN,CACJxD,GACAD,GAAiB5H,EAAMtZ,OAASsZ,EAAMkK,OAAOtC,IAAkB,KAC/DA,GAAiB5H,EAAMtZ,OACnBshB,GAAoBJ,GAAgBA,GAAiB,GACrDI,GAAoBJ,GAAgBA,yHC1nG9C,eAAA9hB,EAAA,OAAAA,EAAA0F,mBAAAC,KA6BO,SAAAC,EAAAmO,EAAAoD,GAAA,IAAA9L,EAAAE,EAAAia,EAAA/hB,EAAA4T,EAAA,OAAA3R,mBAAAiC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAuD,GAC+BqK,SAAF,KAAkBjS,YAAcgiB,YAD7Dla,KAGH4L,GACItS,iBAJD2gB,KAAA/hB,EAU2B,IAV3B6E,IAAA+O,EAWqB,SAAA5M,EAAAb,EAAA8N,GACpB,GAAAA,EAAuB,CACdrM,UAALzB,KACIyB,cAAgCqa,gBAEpC,IAAM9Z,EAAOnB,EAAApG,IAAc,SAAAtE,GACvB,IAAM0I,GAA6BsP,KAAMhY,EAAE+C,OAC3C,GAAI/C,iBAAqBA,EAAzB6X,OACInP,YAAgB1I,EAAhB0I,KACI1I,EAAJ4I,MACI3H,YAAYjB,EAAZiB,cAA4B,SAAAE,GACpBnB,QAAJ,WAAcmB,IACVuC,MAAa1D,OAAb0D,IACAgF,SAAa1I,OAAb0I,OAIPA,EAAL0C,SACI1C,SAAa1I,EAAb0I,KACAhF,MAAa1D,EAAb0D,MACI1D,EAAJ2I,UAAe,CACN8c,EAAiBzlB,EAAtB6X,QACI4N,EAAiBzlB,EAAjBylB,UAEJ,IAAMpO,EAAWoO,EAAiBzlB,EAAlC6X,MACKR,EAASrX,EAAd2I,WACI0O,EAASrX,EAATqX,SAAsB,IAAtBA,KAEArX,YAAcA,EAAlB+C,OACIsU,EAASrX,EAATqX,aAAwBrX,EAAxBqX,OAKhB,OAAA3O,IAEJ4C,8BAA8CO,cAEzCL,EAAL3B,KACI2B,SAEJA,cApDL3D,EAAAE,KAAA,EAuDGmQ,sBAvDHZ,GAAA,cAwDH5T,UAAiB,SAAAkiB,GACRH,EAALG,GAMA3kB,YAAYwkB,EAAZxkB,YAA+C,SAAA4kB,GACtCva,WAALsa,KACIta,kBAEJA,8BACAA,0CACKA,cAALO,OACIP,uBAEHA,cAADO,KAAAqB,MACImK,WAAcoO,KAD8BI,IAE5C9iB,MAAO8iB,MAhBNva,WAALsa,KACIta,oBA3DTzD,EAAAS,OAAA,UA8EMgD,SAAFA,EAAYE,YA9EhB,yBAAA3D,EAAAiB,SAAAjD,EAAAR,2MD6lGuC0c,uBC5nG9C,IAAA7J,EAAA7L,EAAA5M,EAAA,MAEAqF,EAAAuH,EAAA5M,EAAA,eAAAuD,EAAA/C,GAAA,GAAAA,KAAAC,WAAA,OAAAD,EAAA,IAAAU,KAAA,SAAAV,EAAA,QAAAW,KAAAX,EAAA,GAAAgB,OAAAR,UAAAmM,eAAAC,KAAA5M,EAAAW,GAAA,KAAAN,EAAAW,OAAAC,gBAAAD,OAAA6L,yBAAA7L,OAAA6L,yBAAA7M,EAAAW,MAAAN,EAAAyM,KAAAzM,EAAA0M,IAAA/L,OAAAC,eAAAP,EAAAC,EAAAN,GAAAK,EAAAC,GAAAX,EAAAW,GAAA,OAAAD,EAAAR,QAAAF,EAAAU,EAAA,SAAA2C,EAAArD,GAAA,gBAAAA,GAAA,GAAA0E,MAAAsI,QAAAhN,GAAA,SAAAU,EAAA,EAAAC,EAAA,IAAA+D,MAAA1E,EAAAY,QAAAF,EAAAV,EAAAY,OAAAF,IAAAC,EAAAD,GAAAV,EAAAU,GAAA,OAAAC,GAAA,CAAAX,IAAA,SAAAA,GAAA,GAAAI,OAAAE,YAAAU,OAAAhB,IAAA,uBAAAgB,OAAAR,UAAA6M,SAAAT,KAAA5M,GAAA,OAAA0E,MAAA4I,KAAAtN,GAAA,CAAAA,IAAA,qBAAAkN,UAAA,+DAAApI,EAAA9E,EAAAU,EAAAC,EAAAN,EAAAwC,EAAAE,EAAAM,GAAA,QAAAyB,EAAA9E,EAAA+C,GAAAM,GAAA0B,EAAAD,EAAAhC,MAAA,MAAA9C,GAAA,YAAAW,EAAAX,GAAA8E,EAAAE,KAAAtE,EAAAqE,GAAAE,QAAAC,QAAAH,GAAAI,KAAA9E,EAAAwC,KA6BOuC,iHC7BP,eAAApF,EAAA,OAAAA,EAAA0F,mBAAAC,KAKO,SAAAC,EAAAmO,EAAAoD,GAAA,IAAA9L,EAAAE,EAAA8L,EAAA,OAAA3R,mBAAAiC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAuD,KAAAE,KAGH4L,GACItS,iBAJDwS,EAMqB,SAAA5M,EAAAb,EAAA8N,GACpB,IAAMlJ,EAAUkJ,IAAhBnM,EACKiD,EAAL5E,KACI4E,SAEJA,cAXD5G,EAAAE,KAAA,EAaGmQ,sBAbHZ,GAAA,cAAAzP,EAAAS,OAAA,UAcMgD,SAAFA,EAAYE,YAdhB,wBAAA3D,EAAAiB,SAAAjD,EAAAR,2MDwBAA,uBC/BP,IAAA6S,EAAA7L,EAAA5M,EAAA,MAEAqF,EAAAuH,EAAA5M,EAAA,eAAAuD,EAAA/C,GAAA,GAAAA,KAAAC,WAAA,OAAAD,EAAA,IAAAU,KAAA,SAAAV,EAAA,QAAAW,KAAAX,EAAA,GAAAgB,OAAAR,UAAAmM,eAAAC,KAAA5M,EAAAW,GAAA,KAAAN,EAAAW,OAAAC,gBAAAD,OAAA6L,yBAAA7L,OAAA6L,yBAAA7M,EAAAW,MAAAN,EAAAyM,KAAAzM,EAAA0M,IAAA/L,OAAAC,eAAAP,EAAAC,EAAAN,GAAAK,EAAAC,GAAAX,EAAAW,GAAA,OAAAD,EAAAR,QAAAF,EAAAU,EAAA,SAAA2C,EAAArD,EAAAU,EAAAC,EAAAN,EAAAwC,EAAAE,EAAAM,GAAA,QAAAyB,EAAA9E,EAAA+C,GAAAM,GAAA0B,EAAAD,EAAAhC,MAAA,MAAA9C,GAAA,YAAAW,EAAAX,GAAA8E,EAAAE,KAAAtE,EAAAqE,GAAAE,QAAAC,QAAAH,GAAAI,KAAA9E,EAAAwC,KAKOuC,8KCkIP1E,EAAAyR,OAyCMR,MAAF,gCAA0C7O,MA9K9C,gbA+KM6O,MAAF,gBAA0B7O,MA3E9B,kiBA4EM6O,MAAF,cAAwB7O,MAvG5B,4ZAwGM6O,MAAF,sBAAgC7O,MAvJpC,syBAwJM6O,MAAF,mBAA6B7O,MA7CjC,2rBAAApC,EAAAkV,cAiDIiQ,WAAaC,QAAF,UAAsBC,YAAkBD,QAAF,qBAAiCC,YAClFC,mBAEQF,QADJ,0BAEIG,QAAUC,gBAAiB,kBAG3BJ,QADJ,qCAEIG,QAAUC,gBAAiB,kBAGnCC,iBAEQL,QADJ,2BAEIG,QAAUG,cAAe,kBAGzBN,QADJ,sCAEIG,QAAUG,cAAe,kBAGjCxO,MAAQkO,QAAF,oBAAgCC,WACtCM,OAASP,QAAF,mBAA+BC,WACtC7lB,SAAW4lB,QAAF,WAAuBC,YAAQrlB,EAAA4lB,qBAAA5lB,EAAAmR,oBAKxCyF,eACIC,kBACAC,mBACAC,4CAGyD/B,SAAF,KAAkBjS,YAAcgiB,0GC5NxF,SAAAc,EAAAC,GACH,IAAAC,EACA,OAAO,WAAkB,QAAAC,EAAArhB,UAAAzE,OAAN+H,EAAM,IAAAjE,MAAAgiB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANhe,EAAMge,GAAAthB,UAAAshB,GACrB,IAAMC,EAANxhB,KACAyhB,gBACAJ,EAAU/S,WAAW,kBAAM6S,UAAN5d,IAArB8d,sVCLR,IAAApmB,EAAAymB,KAAAtnB,EAAA,OAAAa,EAAAJ,WAAAI,GAAAH,QAAAG,GAEasW,EAAoBoQ,UAApBC,IAAAC,YAAAC,YAAA,mCAAoBH,EAApB,sIAEW,SAAAvjB,GAAA,IAAA4L,EAAA5L,EAAA4L,MAAA,MAChBA,sBAAgCA,wBADhB,YAAA1O,EAAAiW,kBAAA5T,EAYjB,IAAM2T,EAAaqQ,UAAbC,IAAAC,YAAAC,YAAA,4BAAaH,EAAnB,y/BAAArmB,EAAAgW,WAAArT,EAwEA,IAAMmO,EAAYuV,UAAZC,IAAAC,YAAAC,YAAA,2BAAYH,EAAZ,2QAGW,SAAAxd,GAAA,OAAAA,EAAAkI,OAAsCA,UAAtC,YAAA/Q,EAAA8Q,UAAA1M,EAajB,IAAM8M,EAAWmV,UAAXC,IAAAC,YAAAC,YAAA,0BAAWH,EAAjB,qJAAArmB,EAAAkR,SAAA7M,EAcA,IAAMmR,EAAe6Q,UAAfC,IAAAC,YAAAC,YAAA,8BAAeH,EAArB,2HAAArmB,EAAAwV,aAAAnW,EAUA,IAAMsQ,EAAiB0W,UAAjBI,OAAAF,YAAAC,YAAA,gCAAiBH,EAAvB,yYAAArmB,EAAA2P,eAAAlQ,EAyBA,IAAMgW,EAAW4Q,UAAXC,IAAAC,YAAAC,YAAA,0BAAWH,EAAjB,qZAAArmB,EAAAyV,SAAA1V,EAuBA,IAAMwV,EAAgB8Q,UAAhBC,IAAAC,YAAAC,YAAA,+BAAgBH,EAAtB,gNAAArmB,EAAAuV,cAAAmR,EAUA,IAAMtQ,EAASiQ,UAATC,IAAAC,YAAAC,YAAA,wBAASH,EAAT,2XAWA,SAAAlS,GAAA,OAAAA,EAAAtG,WAA8CA,OAA9C,QAAA7N,EAAAoW,OAAA3V,EAQN,IAAMyV,EAAgBmQ,UAAhBC,IAAAC,YAAAC,YAAA,+BAAgBH,EAAhB,wNAQK,SAAAM,GAAA,OAAAA,EAAA9Y,WAA8CA,UAA9C,WAAA7N,EAAAkW,cAAArV,EAOX,IAAM8N,EAAe0X,UAAfC,IAAAC,YAAAC,YAAA,8BAAeH,EAArB,sOAAArmB,EAAA2O,aAAA1M,EAWA,IAAM2M,EAAoByX,UAApBC,IAAAC,YAAAC,YAAA,mCAAoBH,EAA1B,mIAAArmB,EAAA4O,kBAAAnC,EASA,IAAM6J,EAAoB+P,UAApBC,IAAAC,YAAAC,YAAA,mCAAoBH,EAA1B,iHAAArmB,EAAAsW,kBAAA5J,EAUA,IAAMoC,EAAkBuX,UAAlBC,IAAAC,YAAAC,YAAA,iCAAkBH,EAAxB,yGAAArmB,EAAA8O,gBAAAjC,EAWA,IAAMoC,EAAgBoX,UAAhBC,IAAAC,YAAAC,YAAA,+BAAgBH,EAAtB,ycAAArmB,EAAAiP,cAAA9E,EAiCA,IAAMkF,EAAkBgX,UAAlBC,IAAAC,YAAAC,YAAA,iCAAkBH,EAAxB,qGAAArmB,EAAAqP,gBAAAvC,GAAA8Z,IAAA,SAAAtnB,EAAAU,EAAAC,GAAA,aAAAK,OAAAC,eAAAP,EAAA,cAAAoC,OAAA,IAAApC,EAAA0B,YAAA,ECtSP,IAAA0kB,0SAAAtnB,EAAA,eAAAqD,IAAA,IAAA7C,EAAA,SAAAA,EAAAU,GAAA,OAAAA,MAAAV,EAAA8T,MAAA,IAAA9S,OAAAumB,OAAAvmB,OAAAwmB,iBAAAxnB,GAAAynB,KAAA3kB,MAAA9B,OAAAumB,OAAA7mB,OAAA,4rBAAAmC,EAAA,kBAAA7C,MAAA,EAGA8mB,EAAAY,cAAAC,KA6BO,IAAMvlB,EAAS2kB,UAATC,IAAAC,YAAAC,YAAA,wBAASH,EAAf,wKAAArmB,EAAA0B,OAAAW,GAAA6kB,IAAA,SAAA5nB,EAAAU,EAAAC,GAAA,aAAAK,OAAAC,eAAAP,EAAA,cAAAoC,OAAA,IAAApC,EAAAR,QC9BQ,WACX,OACIT,EAAAkC,cAAA,OAAKyG,KAAL,UAAoByf,QAApB,YAAwCC,QAAxC,MAAsDra,EAAtD,MAA8DN,EAAE,OAC5D1N,EAAAkC,cAAA,KAAGomB,OAAH,OAAiB3f,KAAK,QAClB3I,EAAAkC,cAAA,KAAGyG,KAAK,WACJ3I,EAAAkC,cAAA,QAAMR,EAAE,sdACR1B,EAAAkC,cAAA,QAAMR,EAAE,qzCAR5B,IAAA1B,0SAAAD,EAAA","file":"component---web-pages-index-tsx-fa5a077d75d473683f83.js","sourcesContent":["import 'babel-polyfill';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport Editor from '../components/Editor/Editor';\nimport { Header } from '../components/globalStyles';\nimport Logo from '../components/Logo';\n\n// NOTE: gatsby global for prefix\ndeclare var __PATH_PREFIX__;\n\nexport default class Index extends React.Component<{}, {}> {\n    public render() {\n        return (\n            <div>\n                <Helmet>\n                    <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={`${__PATH_PREFIX__}/apple-touch-icon.png`} />\n                    <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={`${__PATH_PREFIX__}/favicon-32x32.png`} />\n                    <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={`${__PATH_PREFIX__}/favicon-16x16.png`} />\n                    <link rel=\"manifest\" href={`${__PATH_PREFIX__}/site.webmanifest`} />\n                    <link rel=\"mask-icon\" href={`${__PATH_PREFIX__}/safari-pinned-tab.svg`} color=\"#5bbad5\" />\n                    <meta name=\"msapplication-TileColor\" content=\"#da532c\" />\n                    <meta name=\"theme-color\" content=\"#ffffff\" />\n                    <title>Chatito DSL - Generate dataset for chatbots</title>\n                    <meta\n                        name=\"keywords\"\n                        content=\"chatbot, dataset generation, dataset generator, generate datasets, rasa nlu, snips nlu, chatbot dataset, datasets for chatbots\"\n                    />\n                    <meta\n                        name=\"description\"\n                        content=\"Chatito helps you helps you generate datasets for natural language understanding models using a simple DSL\"\n                    />\n                </Helmet>\n                <Header>\n                    <div style={{ display: 'inline-block', width: 50, minWidth: 50, height: 43 }}>\n                        <Logo />\n                    </div>\n                    <div style={{ paddingLeft: 24 }}>\n                        <h1>\n                            <a href=\"https://github.com/rodrigopivi/Chatito\">Chatito</a>\n                        </h1>\n                        <h2>\n                            &nbsp;helps you generate datasets for natural language understanding models using a simple DSL&nbsp;\n                            <a href=\"https://github.com/rodrigopivi/Chatito\">Read the docs</a>\n                        </h2>\n                    </div>\n                </Header>\n                <Editor />\n            </div>\n        );\n    }\n}\n","import { IChatitoEntityAST, IEntities, ISentenceTokens } from './types';\n\n//  Durstenfeld shuffle, a computer-optimized version of Fisher-Yates:\n// https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\nexport const shuffle = <T>(array: T[]) => {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n};\n\nexport const maxSentencesForSentence = (entities: IEntities) => (sentence: ISentenceTokens[]) => {\n    const sr = sentence.reduce((accumulator, t) => {\n        let acc = accumulator;\n        if (t.type === 'Slot' || t.type === 'Alias') {\n            const def = entities[t.type];\n            const innerEntityKey = t.variation ? `${t.value}#${t.variation}` : t.value;\n            if (!def[innerEntityKey]) {\n                if (t.type === 'Alias') {\n                    def[innerEntityKey] = {\n                        inner: [[{ value: innerEntityKey, type: 'Text' }]],\n                        key: t.value,\n                        type: 'AliasDefinition'\n                    };\n                } else {\n                    throw new Error(`${t.type} not defined: ${innerEntityKey}`);\n                }\n            }\n            let innerEntityVariations = maxSentencesForEntity(def[innerEntityKey], entities);\n            if (t.opt) {\n                innerEntityVariations++;\n            }\n            acc = acc * innerEntityVariations;\n        }\n        return acc;\n    }, 1);\n    return sr;\n};\n\nexport const maxSentencesForEntity = (ed: IChatitoEntityAST, entities: IEntities): number =>\n    ed.inner.map(maxSentencesForSentence(entities)).reduce((acc, val) => acc + val);\n\n// Deep merge objects\n// https://gist.github.com/Salakar/1d7137de9cb8b704e48a\nconst isObject = (item: any) => item && typeof item === 'object' && !Array.isArray(item) && item !== null;\nexport const mergeDeep = <T>(target: any, source: any): T => {\n    if (isObject(target) && isObject(source)) {\n        Object.keys(source).forEach(key => {\n            if (isObject(source[key])) {\n                if (!target[key]) {\n                    Object.assign(target, { [key]: {} });\n                }\n                mergeDeep(target[key], source[key]);\n            } else {\n                Object.assign(target, { [key]: source[key] });\n            }\n        });\n    }\n    return target;\n};\n","import * as utils from './utils';\n\nimport {\n    IChatitoCache,\n    IChatitoEntityAST,\n    IChatitoParser,\n    IEntities,\n    IEntityDef,\n    ISentenceTokens,\n    IStatCache,\n    IUtteranceWriter\n} from './types';\n\n// tslint:disable-next-line:no-var-requires\nconst chatito = require('../parser/chatito') as IChatitoParser;\n\n// recursive function that generates variations using a cache\n// that uses counts to avoid repetitions\nconst getVariationsFromEntity = async <T>(\n    ed: IChatitoEntityAST,\n    entities: IEntities,\n    optional: boolean,\n    cache: IChatitoCache\n): Promise<ISentenceTokens[]> => {\n    // if this entity is a slot variation, add that as the key\n    const variationKey = ed.variation ? `#${ed.variation}` : '';\n    const cacheKey = `${ed.type}-${ed.key}${variationKey}`;\n    let cacheStats = cache.get(cacheKey) as IStatCache;\n    if (!cacheStats) {\n        // if the entity is not cache, create an empty cache for it\n        const counts: IChatitoCache[] = [];\n        const totalCounts: number[] = [];\n        const maxCounts: number[] = [];\n        for (const c of ed.inner) {\n            // get counts for each of the sentences inside the entity\n            counts.push(new Map());\n            totalCounts.push(0);\n            let mxc = utils.maxSentencesForSentence(entities)(c);\n            if (optional) {\n                mxc++;\n            }\n            maxCounts.push(mxc);\n        }\n        const currentEntityCache: IStatCache = {\n            counts,\n            maxCounts,\n            optional,\n            optionalCounts: 0,\n            totalCounts\n        };\n        cache.set(cacheKey, currentEntityCache);\n        cacheStats = cache.get(cacheKey) as IStatCache;\n    }\n    // each sentence generation should use the ratio between the cache counts and the max possible\n    // combinations, so that generation follows the probability distribuition avoiding repetitions\n    let max = utils.maxSentencesForEntity(ed, entities);\n    if (optional) {\n        max++;\n    }\n    const totalAccumulated = cacheStats.totalCounts.reduce((p, n) => p + n) + cacheStats.optionalCounts;\n    if (totalAccumulated === max) {\n        // reset cache counts if max is reached\n        cacheStats.totalCounts = new Array(cacheStats.totalCounts.length).fill(0);\n        cacheStats.optionalCounts = 0;\n    }\n    const allCounts = cacheStats.maxCounts.map((c, i) => {\n        return cacheStats.totalCounts[i] / cacheStats.maxCounts[i];\n    });\n    let min = Math.min.apply(Math, allCounts);\n    if (cacheStats.optional && cacheStats.optionalCounts / max < min / max) {\n        min = min / max;\n    }\n    // randomly select an index from those that have the same probabilities to be selected\n    const counterIndexes: number[] = [];\n    allCounts.forEach((c: number, i) => {\n        if (c <= min || !c) {\n            counterIndexes.push(i);\n        }\n    });\n    if (cacheStats.optional && cacheStats.optionalCounts <= min / max) {\n        counterIndexes.push(-1);\n    }\n    utils.shuffle(counterIndexes);\n    const sentenceIndex = counterIndexes[0];\n    if (sentenceIndex === -1) {\n        cacheStats.optionalCounts++;\n        return []; // increment optional and return empty if optional is randomly selected\n    }\n    cacheStats.totalCounts[sentenceIndex]++;\n    const sentence = ed.inner[sentenceIndex];\n    let accumulator: ISentenceTokens[] = [];\n    // For slots where a sentence is composed of only one alias, we add the synonym tag,\n    // to denote that the generated alias is a synonym of its alias name\n    const slotSynonyms = ed.type === 'SlotDefinition' && sentence.length === 1 && sentence[0].type === 'Alias';\n    for (const t of sentence) {\n        // slots and alias entities generate the sentences recursively\n        const slotsInSentenceKeys: Set<string> = new Set([]);\n        if (t.type === 'Slot' || t.type === 'Alias') {\n            const def = entities[t.type];\n            const innerEntityKey = t.variation ? `${t.value}#${t.variation}` : t.value;\n            const currentCache = slotsInSentenceKeys.has(innerEntityKey) ? cacheStats.counts[sentenceIndex] : new Map();\n            slotsInSentenceKeys.add(innerEntityKey);\n            const sentenceVariation = await getVariationsFromEntity(def[innerEntityKey], entities, !!t.opt, currentCache);\n            if (sentenceVariation.length) {\n                const returnSentence = sentenceVariation.reduce(\n                    (prev, next) => {\n                        const ret: ISentenceTokens = {\n                            type: next.type,\n                            value: prev.value + next.value\n                        };\n                        if (next.synonym) {\n                            ret.synonym = next.synonym;\n                        }\n                        return ret;\n                    },\n                    { value: '', type: 'Text' }\n                );\n                if (slotSynonyms) {\n                    returnSentence.synonym = t.value;\n                }\n                if (t.type === 'Slot') {\n                    if (def[innerEntityKey].args) {\n                        returnSentence.args = def[innerEntityKey].args;\n                    }\n                    returnSentence.value = returnSentence.value.trim();\n                    returnSentence.type = t.type;\n                    returnSentence.slot = t.value;\n                }\n                accumulator = accumulator.concat(returnSentence);\n            }\n        } else {\n            accumulator = accumulator.concat(t);\n        }\n    }\n    return accumulator;\n};\n\nexport const astFromString = (str: string) => chatito.parse(str);\nexport const datasetFromString = (str: string, writterFn: IUtteranceWriter) => {\n    const ast = astFromString(str);\n    return datasetFromAST(ast, writterFn);\n};\n\nexport const datasetFromAST = async (ast: IChatitoEntityAST[], writterFn: IUtteranceWriter) => {\n    const operatorDefinitions: IEntities = { Intent: {}, Slot: {}, Alias: {} };\n    if (!ast || !ast.length) {\n        return;\n    }\n    ast.forEach(od => {\n        let entity: IEntityDef;\n        if (od.type === 'IntentDefinition') {\n            entity = operatorDefinitions.Intent;\n        } else if (od.type === 'SlotDefinition') {\n            entity = operatorDefinitions.Slot;\n        } else if (od.type === 'AliasDefinition') {\n            entity = operatorDefinitions.Alias;\n        } else if (od.type === 'Comment') {\n            return; // skip comments\n        } else {\n            throw new Error(`Unknown definition definition for ${od.type}`);\n        }\n        const odKey = od.variation ? `${od.key}#${od.variation}` : od.key;\n        if (entity[odKey]) {\n            throw new Error(`Duplicate definition for ${od.type} '${odKey}'`);\n        }\n        entity[odKey] = od;\n    });\n    const intentKeys = Object.keys(operatorDefinitions.Intent);\n    if (!intentKeys || !intentKeys.length) {\n        throw new Error('No actions found');\n    }\n    for (const intentKey of intentKeys) {\n        // and for all tokens inside the sentence\n        const maxPossibleCombinations = utils.maxSentencesForEntity(operatorDefinitions.Intent[intentKey], operatorDefinitions);\n        let maxIntentExamples = maxPossibleCombinations; // counter that will change\n        const entityArgs = operatorDefinitions.Intent[intentKey].args;\n        // by default if no training or testing arguments are declared, all go to training\n        let trainingN = maxIntentExamples;\n        let testingN = 0;\n        let generatedTrainingExamplesCount = 0;\n        if (entityArgs) {\n            if (entityArgs.training) {\n                trainingN = parseInt(entityArgs.training, 10);\n                if (trainingN < 1) {\n                    throw new Error(`The 'training' argument for ${intentKey} must be higher than 0.`);\n                }\n                if (entityArgs.testing) {\n                    testingN = parseInt(entityArgs.testing, 10);\n                    if (testingN < 1) {\n                        throw new Error(`The 'testing' argument for ${intentKey} must be higher than 0.`);\n                    }\n                }\n            }\n            const intentMax = trainingN + testingN;\n            if (intentMax > maxIntentExamples) {\n                throw new Error(`Can't generate ${intentMax} examples. Max possible examples is ${maxIntentExamples}`);\n            } else if (intentMax < maxIntentExamples) {\n                maxIntentExamples = intentMax;\n            }\n        }\n        const maxEx = maxIntentExamples;\n        const globalCache: IChatitoCache = new Map();\n        const collitionsCache: { [id: string]: boolean } = {};\n        let duplicatesCounter = 0;\n        while (maxIntentExamples) {\n            const intentSentence = await getVariationsFromEntity(\n                operatorDefinitions.Intent[intentKey],\n                operatorDefinitions,\n                false,\n                globalCache\n            );\n            const utterance = chatitoFormatPostProcess(intentSentence);\n            const utteranceString = utterance.reduce((p, n) => p + n.value, '');\n            if (!collitionsCache[utteranceString]) {\n                collitionsCache[utteranceString] = true;\n                writterFn(utterance, intentKey, generatedTrainingExamplesCount < trainingN);\n                maxIntentExamples--;\n                generatedTrainingExamplesCount++;\n            } else {\n                duplicatesCounter++;\n                // note: trick to make all combinations for small datasets, but avoid them for large ones\n                const maxDupes = maxPossibleCombinations * maxPossibleCombinations;\n                const maxDupesLimit = Math.floor(maxPossibleCombinations / 2);\n                if (duplicatesCounter > (maxPossibleCombinations > 10000 ? maxDupesLimit : maxDupes)) {\n                    // prevent cases where duplicates are part of the entity definitions\n                    let m = `Too many duplicates while generating dataset! Looks like we have probably reached `;\n                    m += `the maximun ammount of possible unique generated examples. `;\n                    m += `The generator has stopped at ${maxEx - maxIntentExamples} examples for intent ${intentKey}.`;\n                    // tslint:disable-next-line:no-console\n                    console.warn(m);\n                    maxIntentExamples = 0;\n                }\n            }\n        }\n    }\n};\n\nconst chatitoFormatPostProcess = (data: ISentenceTokens[]) => {\n    const arr = data.reduce(\n        (accumulator: ISentenceTokens[], next: ISentenceTokens, i, arrShadow) => {\n            if (accumulator.length) {\n                const lastWord = accumulator[accumulator.length - 1];\n                if (lastWord.type === next.type && lastWord.type === 'Text') {\n                    accumulator[accumulator.length - 1] = {\n                        type: lastWord.type,\n                        value: (lastWord.value + next.value).replace(/\\s+/g, ' ')\n                    };\n                } else {\n                    accumulator.push(next);\n                }\n            } else {\n                accumulator.push(next);\n            }\n            if (i === arrShadow.length - 1) {\n                // if its the last token of a sentence\n                // remove empty strings at the end\n                if (!accumulator[accumulator.length - 1].value.trim()) {\n                    accumulator.pop();\n                }\n                if (accumulator.length) {\n                    accumulator[accumulator.length - 1] = Object.assign({}, accumulator[accumulator.length - 1], {\n                        value: accumulator[accumulator.length - 1].value.replace(/\\s+$/g, '')\n                    });\n                }\n            }\n            return accumulator;\n        },\n        [] as ISentenceTokens[]\n    );\n    if (arr.length) {\n        arr[0] = Object.assign({}, arr[0], {\n            value: arr[0].value.replace(/^\\s+/, '')\n        });\n    }\n    return arr;\n};\n","import { saveAs } from 'file-saver/FileSaver';\nimport * as React from 'react';\nimport * as rasaAdapter from '../../../src/adapters/rasa';\nimport * as snipsAdapter from '../../../src/adapters/snips';\nimport * as webAdapter from '../../../src/adapters/web';\nimport * as chatito from '../../../src/main';\nimport * as utils from '../../../src/utils';\nimport { chatitoPrism, rasaDefaultOptions, snipsDefaultOptions, tabs } from '../../lib/editorConfig';\nimport { debounce } from '../../lib/utils';\nimport * as es from './editorStyles';\n\nconst adapters = {\n    default: webAdapter,\n    rasa: rasaAdapter,\n    snips: snipsAdapter\n};\n\ninterface IEditorState {\n    error: null | string;\n    warning: null | string;\n    activeTabIndex: number;\n    showDrawer: boolean;\n    dataset: any;\n    adapterOptions: any;\n    currentAdapter: 'default' | 'rasa' | 'snips';\n    useCustomOptions: boolean;\n}\n\n// NOTE: for SSR, wrap the require in check for window\nlet CodeFlask = null;\nlet ReactJson = null;\nif (typeof window !== `undefined`) {\n    // tslint:disable-next-line:no-var-requires\n    CodeFlask = require('codeflask').default;\n    // tslint:disable-next-line:no-var-requires\n    ReactJson = require('react-json-view').default;\n}\n\nexport default class Editor extends React.Component<{}, IEditorState> {\n    public state: IEditorState = {\n        error: null,\n        warning: null,\n        activeTabIndex: 0,\n        showDrawer: false,\n        dataset: null,\n        adapterOptions: null,\n        currentAdapter: 'default',\n        useCustomOptions: false\n    };\n    private tabsContainer = React.createRef() as React.RefObject<HTMLDivElement>;\n    private codeflask = null;\n    private editorUpdatesSetupCount = 0;\n    private codeInputValue = '';\n    private tabs = [];\n\n    private debouncedTabDSLValidation = debounce(() => {\n        if (!this.codeInputValue.length) {\n            if (this.state.error || this.state.warning) {\n                this.setState({ error: null, warning: null });\n            }\n            return;\n        }\n        const validation = this.getDSLValidation(this.codeInputValue);\n        let newState = {};\n        if (validation && validation.error) {\n            newState = { error: validation.error, warning: null };\n        } else if (validation && validation.warning) {\n            newState = { error: null, warning: validation.warning };\n        } else {\n            newState = { error: null, warning: null };\n        }\n        this.setState(newState, () => {\n            this.saveToLocalStorage(true, false, false);\n        });\n    }, 300);\n\n    public componentDidMount() {\n        if (!CodeFlask) {\n            return;\n        }\n        this.loadFromLocalStorage(() => {\n            const flask = new CodeFlask('#my-code-editor', {\n                language: 'chatito',\n                lineNumbers: true\n            });\n            flask.addLanguage('chatito', chatitoPrism);\n            flask.onUpdate(code => {\n                if (!this.tabs || !this.tabs[this.state.activeTabIndex]) {\n                    return;\n                }\n                this.codeInputValue = code;\n                this.tabs[this.state.activeTabIndex].value = code;\n                // NOTE: ugly hack to know when codeflask is mounted (it makes 2 calls to update on mount)\n                if (this.editorUpdatesSetupCount < 2) {\n                    this.editorUpdatesSetupCount++;\n                } else {\n                    this.setState({ dataset: null });\n                    this.debouncedTabDSLValidation();\n                }\n            });\n            if (this.tabs && this.tabs[this.state.activeTabIndex]) {\n                flask.updateCode(this.tabs[this.state.activeTabIndex].value);\n            }\n            flask.setLineNumber();\n            this.codeflask = flask;\n        });\n    }\n\n    public render() {\n        const alertState = !!this.state.error ? 'error' : !!this.state.warning ? 'warning' : 'success';\n        return (\n            <es.EditorWrapper>\n                <es.EditorHeader>\n                    <es.TabsArea innerRef={this.tabsContainer}>{this.tabs.map(this.renderTabButton)}</es.TabsArea>\n                    <es.TabsAreaButton onClick={this.onAddFile} style={{ backgroundColor: '#1a6849' }}>\n                        New file\n                    </es.TabsAreaButton>\n                    <es.TabsAreaButton onClick={this.onToggleDrawer} disabled={!!this.state.error}>\n                        Generate Dataset\n                    </es.TabsAreaButton>\n                </es.EditorHeader>\n                <es.CodeStyles id=\"my-code-editor\" />\n                <es.AlertNotification state={alertState}>\n                    {' '}\n                    {this.state.error || this.state.warning || `Correct syntax!`}\n                </es.AlertNotification>\n                <es.EditorOverlay onClick={this.onCloseDrawer} showDrawer={this.state.showDrawer}>\n                    <es.Drawer onClick={e => e.stopPropagation()} showDrawer={this.state.showDrawer}>\n                        <es.CloseDrawerButton onClick={this.onCloseDrawer}>x</es.CloseDrawerButton>\n                        {this.renderDatasetGeneratorSettings()}\n                        {this.renderDatasetPreviewer()}\n                    </es.Drawer>\n                </es.EditorOverlay>\n            </es.EditorWrapper>\n        );\n    }\n\n    /* ================== Renderers ================== */\n    private renderDatasetGeneratorSettings = () => {\n        return (\n            <es.BlockWrapper>\n                <es.BlockWrapperTitle>Dataset generation settings</es.BlockWrapperTitle>\n                <div style={{ display: 'flex', flexDirection: 'row' }}>\n                    <es.DrawerFormField style={{ borderRight: '1px solid #ccc' }}>\n                        <label htmlFor=\"adapterSelect\">Dataset format: </label>\n                        <es.SelectWrapper>\n                            <select\n                                id=\"adapterSelect\"\n                                name=\"adapterSelect\"\n                                onChange={this.onAdapterChange}\n                                value={this.state.currentAdapter}\n                            >\n                                <option value=\"default\">Default</option>\n                                <option value=\"rasa\">Rasa NLU</option>\n                                <option value=\"snips\">Snips NLU</option>\n                            </select>\n                        </es.SelectWrapper>\n                    </es.DrawerFormField>\n                    <es.DrawerFormField>\n                        <es.CheckboxWrapper>\n                            <label>\n                                <input\n                                    type=\"checkbox\"\n                                    checked={this.state.useCustomOptions}\n                                    onChange={this.onCustomOptionsCheckboxChange}\n                                />\n                                Use custom options\n                            </label>\n                        </es.CheckboxWrapper>\n                    </es.DrawerFormField>\n                </div>\n                {this.renderEditAdapterOptions()}\n                <div style={{ padding: 20, textAlign: 'center' }}>\n                    <es.TabsAreaButton onClick={this.generateDataset}>Generate and download dataset!</es.TabsAreaButton>\n                </div>\n            </es.BlockWrapper>\n        );\n    };\n\n    private renderEditAdapterOptions = () => {\n        if (!this.state.useCustomOptions || !ReactJson) {\n            return null;\n        }\n        return (\n            <div>\n                <div style={{ padding: '10px 20px 0 20px', fontSize: 12, borderTop: '1px solid #ccc' }}>\n                    Edit the adapter custom initial options:\n                </div>\n                <div style={{ flex: '1', margin: '10px 20px' }}>\n                    <ReactJson\n                        style={{ padding: '10px' }}\n                        src={this.state.adapterOptions || {}}\n                        theme=\"summerfruit:inverted\"\n                        iconStyle=\"square\"\n                        enableClipboard={false}\n                        displayDataTypes={false}\n                        name={false}\n                        collapsed={false}\n                        onEdit={this.onEditAdapterOptions}\n                        onAdd={this.onEditAdapterOptions}\n                        onDelete={this.onEditAdapterOptions}\n                    />\n                </div>\n            </div>\n        );\n    };\n\n    private renderDatasetPreviewer = () => {\n        if (!this.state.dataset || !ReactJson) {\n            return null;\n        }\n        return (\n            <es.BlockWrapper>\n                <es.BlockWrapperTitle>Review the generated training dataset</es.BlockWrapperTitle>\n                <ReactJson\n                    style={{ padding: 20 }}\n                    src={this.state.dataset}\n                    theme=\"chalk\"\n                    iconStyle=\"square\"\n                    enableClipboard={false}\n                    displayDataTypes={false}\n                    name={false}\n                    collapsed={2}\n                />\n            </es.BlockWrapper>\n        );\n    };\n\n    private renderTabButton = (t, i) => {\n        const changeTab = () => this.changeTab(i);\n        const onCloseTab = this.closerTab(i);\n        return (\n            <es.TabButton active={this.state.activeTabIndex === i} key={`tab-${i}`} onClick={changeTab}>\n                {t.title}\n                <es.CloseTab onClick={onCloseTab} />\n            </es.TabButton>\n        );\n    };\n\n    /* ================== Event Handlers ================== */\n    private onCloseDrawer = () => this.setState({ showDrawer: false, dataset: null });\n\n    private onCustomOptionsCheckboxChange = e => {\n        let adapterOptions = {};\n        if (this.state.currentAdapter === 'rasa') {\n            adapterOptions = Object.assign({}, rasaDefaultOptions);\n        } else if (this.state.currentAdapter === 'snips') {\n            adapterOptions = Object.assign({}, snipsDefaultOptions);\n        }\n        this.setState({ useCustomOptions: e.target.checked, adapterOptions, dataset: null }, () => {\n            this.saveToLocalStorage(false, true, true);\n        });\n    };\n\n    private onAdapterChange = e => {\n        let adapterOptions = {};\n        if (e.target.value === 'rasa') {\n            adapterOptions = Object.assign({}, rasaDefaultOptions);\n        } else if (e.target.value === 'snips') {\n            adapterOptions = Object.assign({}, snipsDefaultOptions);\n        }\n        this.setState({ currentAdapter: e.target.value, adapterOptions, dataset: null }, () => {\n            this.saveToLocalStorage(false, true, true);\n        });\n    };\n\n    private onEditAdapterOptions = changes => {\n        if (changes && changes.updated_src) {\n            this.setState({ adapterOptions: changes.updated_src }, () => {\n                this.saveToLocalStorage(false, true, false);\n            });\n            return null;\n        }\n        return false;\n    };\n\n    private onAddFile = () => {\n        let filename = 'newFile';\n        if (window && window.prompt) {\n            filename = prompt('Please enter the new .chatito file name:', filename);\n        }\n        if (filename) {\n            this.tabs.push({ title: `${filename}.chatito`, value: '' });\n            this.changeTab(this.tabs.length - 1, () => {\n                this.tabsContainer.current.scrollTo({\n                    left: this.tabsContainer.current.scrollWidth,\n                    behavior: 'smooth'\n                });\n            });\n        }\n    };\n\n    private onToggleDrawer = async () => {\n        if (!this.state.showDrawer) {\n            if (this.validateChatitoFiles()) {\n                try {\n                    this.setState({ showDrawer: !this.state.showDrawer });\n                } catch (e) {\n                    return;\n                }\n            } else {\n                if (window && window.alert) {\n                    window.alert('Please fix the errors or warnings found in the code.');\n                }\n            }\n        }\n    };\n\n    /* ================== Utils ================== */\n\n    private saveToLocalStorage = (saveTabs, saveAdapterOptions, saveCurrentAdapter) => {\n        if (window && localStorage) {\n            if (saveTabs) {\n                localStorage.setItem('tabs', JSON.stringify(this.tabs));\n            }\n            if (saveAdapterOptions) {\n                localStorage.setItem('adapterOptions', this.state.useCustomOptions ? JSON.stringify(this.state.adapterOptions) : '');\n            }\n            if (saveCurrentAdapter) {\n                localStorage.setItem('currentAdapter', this.state.currentAdapter);\n            }\n        }\n    };\n\n    private loadFromLocalIfPresent = (key: string, parseAsJSON: boolean) => {\n        if (window && localStorage) {\n            try {\n                const item = localStorage.getItem(key);\n                if (!parseAsJSON) {\n                    return item;\n                }\n                if (item) {\n                    try {\n                        return JSON.parse(item);\n                    } catch (e) {\n                        // just catch the error\n                    }\n                }\n            } catch (e) {\n                // tslint:disable-next-line:no-console\n                console.error(e);\n            }\n        }\n    };\n\n    private loadFromLocalStorage = (cb: () => void) => {\n        if (window && localStorage) {\n            const newState: any = {};\n            const localTabs = this.loadFromLocalIfPresent('tabs', true);\n            const localAdapterOptions = this.loadFromLocalIfPresent('adapterOptions', true);\n            const localCurrentAdapter = this.loadFromLocalIfPresent('currentAdapter', false);\n            this.tabs = localTabs ? localTabs : tabs;\n            if (localAdapterOptions) {\n                newState.adapterOptions = localAdapterOptions;\n                newState.useCustomOptions = true;\n            }\n            if (localCurrentAdapter) {\n                newState.currentAdapter = localCurrentAdapter;\n            }\n            this.setState(newState, cb);\n        } else {\n            this.tabs = tabs;\n        }\n        cb();\n    };\n\n    private changeTab = (i: number, cb?: () => void) => {\n        this.setState({ activeTabIndex: i }, () => {\n            this.codeflask.updateCode(this.tabs[this.state.activeTabIndex].value);\n            this.codeflask.setLineNumber();\n            if (cb) {\n                setTimeout(cb, 600); // note; hack using setTimeout because codeflask uses a timeout on update code\n            }\n        });\n    };\n\n    private closerTab = (i: number) => {\n        return (e: React.SyntheticEvent) => {\n            if (e) {\n                e.stopPropagation();\n            }\n            if (this.tabs[i].value) {\n                if (!window.confirm(`Do you really want to remove '${this.tabs[i].title}'?`)) {\n                    return;\n                }\n            }\n            const ati = this.state.activeTabIndex;\n            let newActiveTabIndex = this.state.activeTabIndex;\n            if (ati === i && ati > 0) {\n                newActiveTabIndex = ati - 1;\n            }\n            this.tabs = [...this.tabs.slice(0, i), ...this.tabs.slice(i + 1)];\n            if (!this.tabs.length) {\n                this.tabs.push({ title: 'newFile.chatito', value: '' });\n                newActiveTabIndex = 0;\n            }\n            this.saveToLocalStorage(true, false, false);\n            this.changeTab(newActiveTabIndex);\n        };\n    };\n\n    private getDSLValidation = (dsl: string): null | { error?: string; warning?: string } => {\n        try {\n            const ast = chatito.astFromString(dsl);\n            const intentsWithoutLimit = ast.filter(entity => entity.type === 'IntentDefinition' && entity.args === null);\n            if (intentsWithoutLimit.length) {\n                return {\n                    warning: `Warning: Limit the number of generated examples for intents. E.g.: %[${\n                        intentsWithoutLimit[0].key\n                    }]('training': '100')`\n                };\n            }\n            return null;\n        } catch (e) {\n            const error =\n                e.constructor === Error\n                    ? e.toString()\n                    : `${e.name}: ${e.message} Line: ${e.location.start.line}, Column: ${e.location.start.column}`;\n            return { error };\n        }\n    };\n\n    private validateChatitoFiles = () => {\n        return !this.tabs.some((tab, i) => {\n            if (tab.value) {\n                const validation = this.getDSLValidation(tab.value);\n                if (validation !== null) {\n                    this.changeTab(i);\n                    return true;\n                }\n            }\n            return false;\n        });\n    };\n\n    private generateDataset = async () => {\n        let dataset: webAdapter.IDefaultDataset | snipsAdapter.ISnipsDataset | rasaAdapter.IRasaDataset | null = null;\n        const testingDataset = {};\n        const adapter = adapters[this.state.currentAdapter];\n        if (!adapter) {\n            return;\n        }\n        for (const [i, tab] of this.tabs.entries()) {\n            try {\n                if (dataset === null && this.state.useCustomOptions && this.state.adapterOptions) {\n                    dataset = JSON.parse(JSON.stringify(this.state.adapterOptions));\n                }\n                const { training, testing } = await adapter.adapter(tab.value, dataset);\n                dataset = training;\n                utils.mergeDeep(testingDataset, testing);\n            } catch (e) {\n                this.setState({ dataset: null, showDrawer: false }, () => {\n                    this.changeTab(i, () =>\n                        this.setState({ error: e.message }, () => {\n                            if (window && window.alert) {\n                                window.alert(`Please fix error: ${e.message}`);\n                            }\n                        })\n                    );\n                });\n                return;\n            }\n        }\n        const datasetBlob = new Blob([JSON.stringify(dataset)], { type: 'text/json;charset=utf-8' });\n        const testingBlob = new Blob([JSON.stringify(testingDataset)], { type: 'text/json;charset=utf-8' });\n        saveAs(datasetBlob, `training_dataset_${Math.round(new Date().getTime() / 1000)}.json`);\n        setTimeout(() => {\n            saveAs(testingBlob, `testing_dataset_${Math.round(new Date().getTime() / 1000)}.json`);\n        }, 100); // note: timeout to allow multiple downloads at once\n        this.setState({ dataset });\n    };\n}\n","import * as gen from '../main';\nimport { ISentenceTokens } from '../types';\nimport * as utils from '../utils';\n\nexport interface IRasaEntity {\n    start: number;\n    end: number;\n    value: string;\n    entity: string;\n}\nexport interface IRasaExample {\n    text: string;\n    intent: string;\n    entities: IRasaEntity[];\n}\nexport interface IRasaDataset {\n    rasa_nlu_data: {\n        regex_features: any[];\n        entity_synonyms: Array<{ value: string; synonyms: string[] }>;\n        common_examples: IRasaExample[];\n    };\n}\n\ninterface IRasaTestingDataset {\n    [intent: string]: ISentenceTokens[][];\n}\n\nexport async function adapter(dsl: string, formatOptions?: any) {\n    const training: IRasaDataset = {\n        rasa_nlu_data: {\n            regex_features: [],\n            entity_synonyms: [],\n            common_examples: []\n        }\n    };\n    const testing: IRasaTestingDataset = {};\n    const synonyms: { [key: string]: Set<string> } = {};\n    if (formatOptions) {\n        utils.mergeDeep(training, formatOptions);\n    }\n    const utteranceWriter = (utterance: ISentenceTokens[], intentKey: string, isTrainingExample: boolean) => {\n        if (isTrainingExample) {\n            const example = utterance.reduce(\n                (acc, next) => {\n                    if (next.type === 'Slot' && next.slot) {\n                        if (next.synonym) {\n                            if (!synonyms[next.synonym]) {\n                                synonyms[next.synonym] = new Set();\n                            }\n                            if (next.synonym !== next.value) {\n                                synonyms[next.synonym].add(next.value);\n                            }\n                        }\n                        acc.entities.push({\n                            end: acc.text.length + next.value.length,\n                            entity: next.slot,\n                            start: acc.text.length,\n                            value: next.value\n                        });\n                    }\n                    acc.text += next.value;\n                    return acc;\n                },\n                { text: '', intent: intentKey, entities: [] } as IRasaExample\n            );\n            training.rasa_nlu_data.common_examples.push(example);\n        } else {\n            if (!testing[intentKey]) {\n                testing[intentKey] = [];\n            }\n            testing[intentKey].push(utterance);\n        }\n    };\n    await gen.datasetFromString(dsl, utteranceWriter);\n    Object.keys(synonyms).forEach(k => {\n        training.rasa_nlu_data.entity_synonyms.push({\n            synonyms: [...synonyms[k]],\n            value: k\n        });\n    });\n    return { training, testing };\n}\n","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { Start: peg$parseStart },\n      peg$startRuleFunction  = peg$parseStart,\n\n      peg$c0 = function(od) { return od; },\n      peg$c1 = \"?\",\n      peg$c2 = peg$literalExpectation(\"?\", false),\n      peg$c3 = \"[\",\n      peg$c4 = peg$literalExpectation(\"[\", false),\n      peg$c5 = \"]\",\n      peg$c6 = peg$literalExpectation(\"]\", false),\n      peg$c7 = function(value) { return value },\n      peg$c8 = function(value, opt) { return { value: value, opt: !!opt  }; },\n      peg$c9 = function(value) { return { value: value, type: \"Text\" }},\n      peg$c10 = \"\\r\\n\",\n      peg$c11 = peg$literalExpectation(\"\\r\\n\", false),\n      peg$c12 = \"\\n\",\n      peg$c13 = peg$literalExpectation(\"\\n\", false),\n      peg$c14 = \"~[\",\n      peg$c15 = peg$literalExpectation(\"~[\", false),\n      peg$c16 = peg$anyExpectation(),\n      peg$c17 = function(t) { return t.join(\"\"); },\n      peg$c18 = function(v) { return v.join(\"\"); },\n      peg$c19 = function(s) { return s; },\n      peg$c20 = \"%\",\n      peg$c21 = peg$literalExpectation(\"%\", false),\n      peg$c22 = function(value, args) { return { value: value, type: \"IntentDefinition\", args: args, location: location() } },\n      peg$c23 = \"@[\",\n      peg$c24 = peg$literalExpectation(\"@[\", false),\n      peg$c25 = function(o, s) { return { type: o.type, key: o.value, args: o.args, location: o.location, inner: s } },\n      peg$c26 = \"#\",\n      peg$c27 = peg$literalExpectation(\"#\", false),\n      peg$c28 = function(id) { return id },\n      peg$c29 = function(value, variation, args) { return { value: value, type: \"SlotDefinition\", variation: variation, args: args, location: location() } },\n      peg$c30 = function(value, variation, opt) { return { value: value, opt: !!opt, variation: variation }; },\n      peg$c31 = \"@\",\n      peg$c32 = peg$literalExpectation(\"@\", false),\n      peg$c33 = function(op) { return { value: op.value, type: \"Slot\", opt: op.opt, location: location(), variation: op.variation } },\n      peg$c34 = function(o, s) { return { type: o.type, key: o.value, args: o.args, location: o.location, inner: s, variation: o.variation } },\n      peg$c35 = \"~\",\n      peg$c36 = peg$literalExpectation(\"~\", false),\n      peg$c37 = function(value) { return { value: value, type: \"AliasDefinition\", location: location() } },\n      peg$c38 = function(op) { return { value: op.value, type: \"Alias\", opt: op.opt } },\n      peg$c39 = function(o, s) { return { type: o.type, key: o.value, location: o.location, inner: s } },\n      peg$c40 = peg$otherExpectation(\"correct indentation\"),\n      peg$c41 = \" \",\n      peg$c42 = peg$literalExpectation(\" \", false),\n      peg$c43 = function(s) { return s.length === level * STEP; },\n      peg$c44 = function() { level++; return true; },\n      peg$c45 = function() { level--; return true; },\n      peg$c46 = \"//\",\n      peg$c47 = peg$literalExpectation(\"//\", false),\n      peg$c48 = function(c) { return { type: \"Comment\" , value: c.trim() }; },\n      peg$c49 = peg$otherExpectation(\"entity name\"),\n      peg$c50 = peg$otherExpectation(\"integer\"),\n      peg$c51 = /^[0-9]/,\n      peg$c52 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c53 = function() { return parseInt(text(), 10); },\n      peg$c54 = peg$otherExpectation(\"end of sentence\"),\n      peg$c55 = peg$otherExpectation(\"end of line \"),\n      peg$c56 = peg$otherExpectation(\"non windows end of line\"),\n      peg$c57 = peg$otherExpectation(\"windows end of line\"),\n      peg$c58 = \"(\",\n      peg$c59 = peg$literalExpectation(\"(\", false),\n      peg$c60 = \")\",\n      peg$c61 = peg$literalExpectation(\")\", false),\n      peg$c62 = function(args) {\n          return args.reduce(function (prev, curr) { prev[curr.key] = curr.value; return prev; }, {});\n      },\n      peg$c63 = \":\",\n      peg$c64 = peg$literalExpectation(\":\", false),\n      peg$c65 = \",\",\n      peg$c66 = peg$literalExpectation(\",\", false),\n      peg$c67 = function(ek, ev) { return { key: ek, value: ev }; },\n      peg$c68 = \"\\\"\",\n      peg$c69 = peg$literalExpectation(\"\\\"\", false),\n      peg$c70 = function(chars) { return chars.join(''); },\n      peg$c71 = \"'\",\n      peg$c72 = peg$literalExpectation(\"'\", false),\n      peg$c73 = \"\\\\\",\n      peg$c74 = peg$literalExpectation(\"\\\\\", false),\n      peg$c75 = function(char) { return char; },\n      peg$c76 = function(sequence) { return sequence; },\n      peg$c77 = \"b\",\n      peg$c78 = peg$literalExpectation(\"b\", false),\n      peg$c79 = function() { return \"\\b\";   },\n      peg$c80 = \"f\",\n      peg$c81 = peg$literalExpectation(\"f\", false),\n      peg$c82 = function() { return \"\\f\";   },\n      peg$c83 = \"n\",\n      peg$c84 = peg$literalExpectation(\"n\", false),\n      peg$c85 = function() { return \"\\n\";   },\n      peg$c86 = \"r\",\n      peg$c87 = peg$literalExpectation(\"r\", false),\n      peg$c88 = function() { return \"\\r\";   },\n      peg$c89 = \"t\",\n      peg$c90 = peg$literalExpectation(\"t\", false),\n      peg$c91 = function() { return \"\\t\";   },\n      peg$c92 = \"v\",\n      peg$c93 = peg$literalExpectation(\"v\", false),\n      peg$c94 = function() { return \"\\x0B\"; },\n      peg$c95 = \"u\",\n      peg$c96 = peg$literalExpectation(\"u\", false),\n      peg$c97 = function(digits) { return String.fromCharCode(parseInt(digits, 16)); },\n      peg$c98 = /^[0-9a-f]/i,\n      peg$c99 = peg$classExpectation([[\"0\", \"9\"], [\"a\", \"f\"]], false, true),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parseStart() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parseTopLevelStatement();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseCommentLine();\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseTopLevelStatement();\n        if (s1 === peg$FAILED) {\n          s1 = peg$parseCommentLine();\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTopLevelStatement() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parseIntentDefinition();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseSlotDefinition();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseAliasDefinition();\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c0(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseEntityOpt() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 63) {\n      s0 = peg$c1;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c2); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntityBody() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c3;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c4); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEntityKeywordLiteral();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s3 = peg$c5;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c7(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntityOptionalBody() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c3;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c4); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEntityKeywordLiteral();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseEntityOpt();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 93) {\n            s4 = peg$c5;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c8(s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseBasicKeywordLiterals() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parseAnyTextWithAlias();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c9(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseAnyTextWithAlias() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$currPos;\n    s4 = peg$currPos;\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c10) {\n      s5 = peg$c10;\n      peg$currPos += 2;\n    } else {\n      s5 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c11); }\n    }\n    peg$silentFails--;\n    if (s5 === peg$FAILED) {\n      s4 = void 0;\n    } else {\n      peg$currPos = s4;\n      s4 = peg$FAILED;\n    }\n    if (s4 !== peg$FAILED) {\n      s5 = peg$currPos;\n      peg$silentFails++;\n      if (input.charCodeAt(peg$currPos) === 10) {\n        s6 = peg$c12;\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c13); }\n      }\n      peg$silentFails--;\n      if (s6 === peg$FAILED) {\n        s5 = void 0;\n      } else {\n        peg$currPos = s5;\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        s6 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c14) {\n          s7 = peg$c14;\n          peg$currPos += 2;\n        } else {\n          s7 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c15); }\n        }\n        peg$silentFails--;\n        if (s7 === peg$FAILED) {\n          s6 = void 0;\n        } else {\n          peg$currPos = s6;\n          s6 = peg$FAILED;\n        }\n        if (s6 !== peg$FAILED) {\n          if (input.length > peg$currPos) {\n            s7 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c16); }\n          }\n          if (s7 !== peg$FAILED) {\n            s4 = [s4, s5, s6, s7];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      peg$savedPos = s2;\n      s3 = peg$c17(s3);\n    }\n    s2 = s3;\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c10) {\n          s5 = peg$c10;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c11); }\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 10) {\n            s6 = peg$c12;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c13); }\n          }\n          peg$silentFails--;\n          if (s6 === peg$FAILED) {\n            s5 = void 0;\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$currPos;\n            peg$silentFails++;\n            if (input.substr(peg$currPos, 2) === peg$c14) {\n              s7 = peg$c14;\n              peg$currPos += 2;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c15); }\n            }\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s7 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c16); }\n              }\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c17(s3);\n        }\n        s2 = s3;\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c18(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseBasicValidInner() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parseOptionalAlias();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseBasicKeywordLiterals();\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseOptionalAlias();\n        if (s1 === peg$FAILED) {\n          s1 = peg$parseBasicKeywordLiterals();\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseBasicInnerStatement() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseSamedent();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseBasicValidInner();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseEOS();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c19(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseBasicInnerStatements() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parseBasicInnerStatement();\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseBasicInnerStatement();\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntityIntentDefinition() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 37) {\n      s1 = peg$c20;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c21); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEntityBody();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseEntityArguments();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c22(s2, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAnyTextWithSlotAndAlias() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$currPos;\n    s4 = peg$currPos;\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c10) {\n      s5 = peg$c10;\n      peg$currPos += 2;\n    } else {\n      s5 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c11); }\n    }\n    peg$silentFails--;\n    if (s5 === peg$FAILED) {\n      s4 = void 0;\n    } else {\n      peg$currPos = s4;\n      s4 = peg$FAILED;\n    }\n    if (s4 !== peg$FAILED) {\n      s5 = peg$currPos;\n      peg$silentFails++;\n      if (input.charCodeAt(peg$currPos) === 10) {\n        s6 = peg$c12;\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c13); }\n      }\n      peg$silentFails--;\n      if (s6 === peg$FAILED) {\n        s5 = void 0;\n      } else {\n        peg$currPos = s5;\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        s6 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c14) {\n          s7 = peg$c14;\n          peg$currPos += 2;\n        } else {\n          s7 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c15); }\n        }\n        peg$silentFails--;\n        if (s7 === peg$FAILED) {\n          s6 = void 0;\n        } else {\n          peg$currPos = s6;\n          s6 = peg$FAILED;\n        }\n        if (s6 !== peg$FAILED) {\n          s7 = peg$currPos;\n          peg$silentFails++;\n          if (input.substr(peg$currPos, 2) === peg$c23) {\n            s8 = peg$c23;\n            peg$currPos += 2;\n          } else {\n            s8 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c24); }\n          }\n          peg$silentFails--;\n          if (s8 === peg$FAILED) {\n            s7 = void 0;\n          } else {\n            peg$currPos = s7;\n            s7 = peg$FAILED;\n          }\n          if (s7 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n              s8 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s8 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c16); }\n            }\n            if (s8 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7, s8];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      peg$savedPos = s2;\n      s3 = peg$c17(s3);\n    }\n    s2 = s3;\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c10) {\n          s5 = peg$c10;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c11); }\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 10) {\n            s6 = peg$c12;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c13); }\n          }\n          peg$silentFails--;\n          if (s6 === peg$FAILED) {\n            s5 = void 0;\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$currPos;\n            peg$silentFails++;\n            if (input.substr(peg$currPos, 2) === peg$c14) {\n              s7 = peg$c14;\n              peg$currPos += 2;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c15); }\n            }\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$currPos;\n              peg$silentFails++;\n              if (input.substr(peg$currPos, 2) === peg$c23) {\n                s8 = peg$c23;\n                peg$currPos += 2;\n              } else {\n                s8 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c24); }\n              }\n              peg$silentFails--;\n              if (s8 === peg$FAILED) {\n                s7 = void 0;\n              } else {\n                peg$currPos = s7;\n                s7 = peg$FAILED;\n              }\n              if (s7 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s8 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c16); }\n                }\n                if (s8 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7, s8];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c17(s3);\n        }\n        s2 = s3;\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c18(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseIntentKeywordLiterals() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parseAnyTextWithSlotAndAlias();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c9(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseIntentValidInner() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parseOptionalSlot();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseOptionalAlias();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseIntentKeywordLiterals();\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseOptionalSlot();\n        if (s1 === peg$FAILED) {\n          s1 = peg$parseOptionalAlias();\n          if (s1 === peg$FAILED) {\n            s1 = peg$parseIntentKeywordLiterals();\n          }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIntentInnerStatements() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parseIntentInnerStatement();\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseIntentInnerStatement();\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIntentInnerStatement() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseSamedent();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseIntentValidInner();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseEOS();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c19(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIntentDefinition() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = peg$parseEOL();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEntityIntentDefinition();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseEOL();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseIndent();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseIntentInnerStatements();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseDedent();\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c25(s2, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSlotVariationStartDefinition() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 35) {\n      s0 = peg$c26;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c27); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseSlotVariationDefinition() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parseSlotVariationStartDefinition();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSlotKeywordLiteral();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c28(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntitySlotDefinition() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c23) {\n      s1 = peg$c23;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c24); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSlotKeywordLiteral();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseSlotVariationDefinition();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 93) {\n            s4 = peg$c5;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseEntityArguments();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c29(s2, s3, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSlotOptionalBody() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c3;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c4); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSlotKeywordLiteral();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseSlotVariationDefinition();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseEntityOpt();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s5 = peg$c5;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c6); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c30(s2, s3, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseOptionalSlot() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 64) {\n      s1 = peg$c31;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c32); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSlotOptionalBody();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c33(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSlotDefinition() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = peg$parseEOL();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEntitySlotDefinition();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseEOL();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseIndent();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseBasicInnerStatements();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseDedent();\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c34(s2, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntityAliasDefinition() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 126) {\n      s1 = peg$c35;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c36); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEntityBody();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c37(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseOptionalAlias() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 126) {\n      s1 = peg$c35;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c36); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEntityOptionalBody();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c38(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAliasDefinition() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = peg$parseEOL();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEntityAliasDefinition();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseEOL();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseIndent();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseBasicInnerStatements();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseDedent();\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c39(s2, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSamedent() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    if (input.charCodeAt(peg$currPos) === 32) {\n      s2 = peg$c41;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c42); }\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      if (input.charCodeAt(peg$currPos) === 32) {\n        s2 = peg$c41;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c42); }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = peg$currPos;\n      s2 = peg$c43(s1);\n      if (s2) {\n        s2 = void 0;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c40); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseIndent() {\n    var s0;\n\n    peg$savedPos = peg$currPos;\n    s0 = peg$c44();\n    if (s0) {\n      s0 = void 0;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDedent() {\n    var s0;\n\n    peg$savedPos = peg$currPos;\n    s0 = peg$c45();\n    if (s0) {\n      s0 = void 0;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAnyTextWithoutEOL() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$currPos;\n    s4 = peg$currPos;\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c10) {\n      s5 = peg$c10;\n      peg$currPos += 2;\n    } else {\n      s5 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c11); }\n    }\n    peg$silentFails--;\n    if (s5 === peg$FAILED) {\n      s4 = void 0;\n    } else {\n      peg$currPos = s4;\n      s4 = peg$FAILED;\n    }\n    if (s4 !== peg$FAILED) {\n      s5 = peg$currPos;\n      peg$silentFails++;\n      if (input.charCodeAt(peg$currPos) === 10) {\n        s6 = peg$c12;\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c13); }\n      }\n      peg$silentFails--;\n      if (s6 === peg$FAILED) {\n        s5 = void 0;\n      } else {\n        peg$currPos = s5;\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        if (input.length > peg$currPos) {\n          s6 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c16); }\n        }\n        if (s6 !== peg$FAILED) {\n          s4 = [s4, s5, s6];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      peg$savedPos = s2;\n      s3 = peg$c17(s3);\n    }\n    s2 = s3;\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c10) {\n          s5 = peg$c10;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c11); }\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 10) {\n            s6 = peg$c12;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c13); }\n          }\n          peg$silentFails--;\n          if (s6 === peg$FAILED) {\n            s5 = void 0;\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n              s6 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c16); }\n            }\n            if (s6 !== peg$FAILED) {\n              s4 = [s4, s5, s6];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c17(s3);\n        }\n        s2 = s3;\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c18(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseCommentLine() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parseEOL();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c46) {\n        s2 = peg$c46;\n        peg$currPos += 2;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c47); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseAnyTextWithoutEOL();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseEOS();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c48(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntityKeywordLiteral() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$currPos;\n    s4 = peg$currPos;\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c10) {\n      s5 = peg$c10;\n      peg$currPos += 2;\n    } else {\n      s5 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c11); }\n    }\n    peg$silentFails--;\n    if (s5 === peg$FAILED) {\n      s4 = void 0;\n    } else {\n      peg$currPos = s4;\n      s4 = peg$FAILED;\n    }\n    if (s4 !== peg$FAILED) {\n      s5 = peg$currPos;\n      peg$silentFails++;\n      if (input.charCodeAt(peg$currPos) === 10) {\n        s6 = peg$c12;\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c13); }\n      }\n      peg$silentFails--;\n      if (s6 === peg$FAILED) {\n        s5 = void 0;\n      } else {\n        peg$currPos = s5;\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        s6 = peg$currPos;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s7 = peg$c5;\n          peg$currPos++;\n        } else {\n          s7 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n        peg$silentFails--;\n        if (s7 === peg$FAILED) {\n          s6 = void 0;\n        } else {\n          peg$currPos = s6;\n          s6 = peg$FAILED;\n        }\n        if (s6 !== peg$FAILED) {\n          s7 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 63) {\n            s8 = peg$c1;\n            peg$currPos++;\n          } else {\n            s8 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c2); }\n          }\n          peg$silentFails--;\n          if (s8 === peg$FAILED) {\n            s7 = void 0;\n          } else {\n            peg$currPos = s7;\n            s7 = peg$FAILED;\n          }\n          if (s7 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n              s8 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s8 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c16); }\n            }\n            if (s8 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7, s8];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      peg$savedPos = s2;\n      s3 = peg$c17(s3);\n    }\n    s2 = s3;\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c10) {\n          s5 = peg$c10;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c11); }\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 10) {\n            s6 = peg$c12;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c13); }\n          }\n          peg$silentFails--;\n          if (s6 === peg$FAILED) {\n            s5 = void 0;\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$currPos;\n            peg$silentFails++;\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s7 = peg$c5;\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c6); }\n            }\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$currPos;\n              peg$silentFails++;\n              if (input.charCodeAt(peg$currPos) === 63) {\n                s8 = peg$c1;\n                peg$currPos++;\n              } else {\n                s8 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c2); }\n              }\n              peg$silentFails--;\n              if (s8 === peg$FAILED) {\n                s7 = void 0;\n              } else {\n                peg$currPos = s7;\n                s7 = peg$FAILED;\n              }\n              if (s7 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s8 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c16); }\n                }\n                if (s8 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7, s8];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c17(s3);\n        }\n        s2 = s3;\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c18(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c49); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseSlotKeywordLiteral() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$currPos;\n    s4 = peg$currPos;\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c10) {\n      s5 = peg$c10;\n      peg$currPos += 2;\n    } else {\n      s5 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c11); }\n    }\n    peg$silentFails--;\n    if (s5 === peg$FAILED) {\n      s4 = void 0;\n    } else {\n      peg$currPos = s4;\n      s4 = peg$FAILED;\n    }\n    if (s4 !== peg$FAILED) {\n      s5 = peg$currPos;\n      peg$silentFails++;\n      if (input.charCodeAt(peg$currPos) === 10) {\n        s6 = peg$c12;\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c13); }\n      }\n      peg$silentFails--;\n      if (s6 === peg$FAILED) {\n        s5 = void 0;\n      } else {\n        peg$currPos = s5;\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        s6 = peg$currPos;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 35) {\n          s7 = peg$c26;\n          peg$currPos++;\n        } else {\n          s7 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c27); }\n        }\n        peg$silentFails--;\n        if (s7 === peg$FAILED) {\n          s6 = void 0;\n        } else {\n          peg$currPos = s6;\n          s6 = peg$FAILED;\n        }\n        if (s6 !== peg$FAILED) {\n          s7 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 93) {\n            s8 = peg$c5;\n            peg$currPos++;\n          } else {\n            s8 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          peg$silentFails--;\n          if (s8 === peg$FAILED) {\n            s7 = void 0;\n          } else {\n            peg$currPos = s7;\n            s7 = peg$FAILED;\n          }\n          if (s7 !== peg$FAILED) {\n            s8 = peg$currPos;\n            peg$silentFails++;\n            if (input.charCodeAt(peg$currPos) === 63) {\n              s9 = peg$c1;\n              peg$currPos++;\n            } else {\n              s9 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c2); }\n            }\n            peg$silentFails--;\n            if (s9 === peg$FAILED) {\n              s8 = void 0;\n            } else {\n              peg$currPos = s8;\n              s8 = peg$FAILED;\n            }\n            if (s8 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s9 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s9 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c16); }\n              }\n              if (s9 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7, s8, s9];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      peg$savedPos = s2;\n      s3 = peg$c17(s3);\n    }\n    s2 = s3;\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c10) {\n          s5 = peg$c10;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c11); }\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 10) {\n            s6 = peg$c12;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c13); }\n          }\n          peg$silentFails--;\n          if (s6 === peg$FAILED) {\n            s5 = void 0;\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$currPos;\n            peg$silentFails++;\n            if (input.charCodeAt(peg$currPos) === 35) {\n              s7 = peg$c26;\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c27); }\n            }\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$currPos;\n              peg$silentFails++;\n              if (input.charCodeAt(peg$currPos) === 93) {\n                s8 = peg$c5;\n                peg$currPos++;\n              } else {\n                s8 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c6); }\n              }\n              peg$silentFails--;\n              if (s8 === peg$FAILED) {\n                s7 = void 0;\n              } else {\n                peg$currPos = s7;\n                s7 = peg$FAILED;\n              }\n              if (s7 !== peg$FAILED) {\n                s8 = peg$currPos;\n                peg$silentFails++;\n                if (input.charCodeAt(peg$currPos) === 63) {\n                  s9 = peg$c1;\n                  peg$currPos++;\n                } else {\n                  s9 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c2); }\n                }\n                peg$silentFails--;\n                if (s9 === peg$FAILED) {\n                  s8 = void 0;\n                } else {\n                  peg$currPos = s8;\n                  s8 = peg$FAILED;\n                }\n                if (s8 !== peg$FAILED) {\n                  if (input.length > peg$currPos) {\n                    s9 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c16); }\n                  }\n                  if (s9 !== peg$FAILED) {\n                    s4 = [s4, s5, s6, s7, s8, s9];\n                    s3 = s4;\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c17(s3);\n        }\n        s2 = s3;\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c18(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c49); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseInteger() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c51.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c52); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c51.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c52); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c53();\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c50); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOS() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$parseEOL();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseEOF();\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c54); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOL() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    s1 = peg$parseEOLNonWindows();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseEOLWindows();\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseEOLNonWindows();\n        if (s1 === peg$FAILED) {\n          s1 = peg$parseEOLWindows();\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c55); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOLNonWindows() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (input.charCodeAt(peg$currPos) === 10) {\n      s0 = peg$c12;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c13); }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c56); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOLWindows() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c10) {\n      s0 = peg$c10;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c11); }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c57); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOF() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    peg$silentFails++;\n    if (input.length > peg$currPos) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n    peg$silentFails--;\n    if (s1 === peg$FAILED) {\n      s0 = void 0;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntityArguments() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c58;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c59); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseEntityArg();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseEntityArg();\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s3 = peg$c60;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c61); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c62(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntityArg() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (input.charCodeAt(peg$currPos) === 32) {\n      s2 = peg$c41;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c42); }\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      if (input.charCodeAt(peg$currPos) === 32) {\n        s2 = peg$c41;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c42); }\n      }\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseArgumentKeyValueString();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (input.charCodeAt(peg$currPos) === 32) {\n          s4 = peg$c41;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c42); }\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (input.charCodeAt(peg$currPos) === 32) {\n            s4 = peg$c41;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c42); }\n          }\n        }\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 58) {\n            s4 = peg$c63;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c64); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            if (input.charCodeAt(peg$currPos) === 32) {\n              s6 = peg$c41;\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c42); }\n            }\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              if (input.charCodeAt(peg$currPos) === 32) {\n                s6 = peg$c41;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c42); }\n              }\n            }\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseArgumentKeyValueString();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$currPos;\n                s8 = [];\n                if (input.charCodeAt(peg$currPos) === 32) {\n                  s9 = peg$c41;\n                  peg$currPos++;\n                } else {\n                  s9 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c42); }\n                }\n                while (s9 !== peg$FAILED) {\n                  s8.push(s9);\n                  if (input.charCodeAt(peg$currPos) === 32) {\n                    s9 = peg$c41;\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c42); }\n                  }\n                }\n                if (s8 === peg$FAILED) {\n                  s8 = null;\n                }\n                if (s8 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 44) {\n                    s9 = peg$c65;\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c66); }\n                  }\n                  if (s9 !== peg$FAILED) {\n                    s8 = [s8, s9];\n                    s7 = s8;\n                  } else {\n                    peg$currPos = s7;\n                    s7 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s7;\n                  s7 = peg$FAILED;\n                }\n                if (s7 === peg$FAILED) {\n                  s7 = null;\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = [];\n                  if (input.charCodeAt(peg$currPos) === 32) {\n                    s9 = peg$c41;\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c42); }\n                  }\n                  while (s9 !== peg$FAILED) {\n                    s8.push(s9);\n                    if (input.charCodeAt(peg$currPos) === 32) {\n                      s9 = peg$c41;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c42); }\n                    }\n                  }\n                  if (s8 === peg$FAILED) {\n                    s8 = null;\n                  }\n                  if (s8 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c67(s2, s6);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseArgumentKeyValueString() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s1 = peg$c68;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c69); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseDoubleQuotedString();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parseDoubleQuotedString();\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 34) {\n          s3 = peg$c68;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c69); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c70(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 39) {\n        s1 = peg$c71;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c72); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseSingleQuotedString();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseSingleQuotedString();\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 39) {\n            s3 = peg$c71;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c72); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c70(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseDoubleQuotedString() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    peg$silentFails++;\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s2 = peg$c68;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c69); }\n    }\n    if (s2 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s2 = peg$c73;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c74); }\n      }\n      if (s2 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 10) {\n          s2 = peg$c12;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c13); }\n        }\n      }\n    }\n    peg$silentFails--;\n    if (s2 === peg$FAILED) {\n      s1 = void 0;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.length > peg$currPos) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c16); }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c75(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s1 = peg$c73;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c74); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseStringEscapedChars();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c76(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseSingleQuotedString() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    peg$silentFails++;\n    if (input.charCodeAt(peg$currPos) === 39) {\n      s2 = peg$c71;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c72); }\n    }\n    if (s2 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s2 = peg$c73;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c74); }\n      }\n      if (s2 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 10) {\n          s2 = peg$c12;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c13); }\n        }\n      }\n    }\n    peg$silentFails--;\n    if (s2 === peg$FAILED) {\n      s1 = void 0;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.length > peg$currPos) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c16); }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c75(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s1 = peg$c73;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c74); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseStringEscapedChars();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c76(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseStringEscapedChars() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    if (input.charCodeAt(peg$currPos) === 39) {\n      s0 = peg$c71;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c72); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s0 = peg$c68;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c69); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 92) {\n          s0 = peg$c73;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c74); }\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 98) {\n            s1 = peg$c77;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c78); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c79();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 102) {\n              s1 = peg$c80;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c81); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c82();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 110) {\n                s1 = peg$c83;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c84); }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c85();\n              }\n              s0 = s1;\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.charCodeAt(peg$currPos) === 114) {\n                  s1 = peg$c86;\n                  peg$currPos++;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c87); }\n                }\n                if (s1 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c88();\n                }\n                s0 = s1;\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  if (input.charCodeAt(peg$currPos) === 116) {\n                    s1 = peg$c89;\n                    peg$currPos++;\n                  } else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c90); }\n                  }\n                  if (s1 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c91();\n                  }\n                  s0 = s1;\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$currPos;\n                    if (input.charCodeAt(peg$currPos) === 118) {\n                      s1 = peg$c92;\n                      peg$currPos++;\n                    } else {\n                      s1 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c93); }\n                    }\n                    if (s1 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c94();\n                    }\n                    s0 = s1;\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$currPos;\n                      if (input.charCodeAt(peg$currPos) === 117) {\n                        s1 = peg$c95;\n                        peg$currPos++;\n                      } else {\n                        s1 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c96); }\n                      }\n                      if (s1 !== peg$FAILED) {\n                        s2 = peg$currPos;\n                        s3 = peg$currPos;\n                        s4 = peg$parseHEXDIG();\n                        if (s4 !== peg$FAILED) {\n                          s5 = peg$parseHEXDIG();\n                          if (s5 !== peg$FAILED) {\n                            s6 = peg$parseHEXDIG();\n                            if (s6 !== peg$FAILED) {\n                              s7 = peg$parseHEXDIG();\n                              if (s7 !== peg$FAILED) {\n                                s4 = [s4, s5, s6, s7];\n                                s3 = s4;\n                              } else {\n                                peg$currPos = s3;\n                                s3 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s3;\n                              s3 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s3;\n                            s3 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s3;\n                          s3 = peg$FAILED;\n                        }\n                        if (s3 !== peg$FAILED) {\n                          s2 = input.substring(s2, peg$currPos);\n                        } else {\n                          s2 = s3;\n                        }\n                        if (s2 !== peg$FAILED) {\n                          peg$savedPos = s0;\n                          s1 = peg$c97(s2);\n                          s0 = s1;\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseHEXDIG() {\n    var s0;\n\n    if (peg$c98.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c99); }\n    }\n\n    return s0;\n  }\n\n   var STEP = 4; var level = 0; var entry = false; \n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","import * as gen from '../main';\nimport { ISentenceTokens } from '../types';\nimport * as utils from '../utils';\n\nexport interface ISnipsUtteranceData {\n    text: string;\n    entity?: string;\n    slot_name?: string;\n}\nexport interface ISnipsUtterance {\n    data: ISnipsUtteranceData[];\n}\nexport interface ISnipsIntent {\n    utterances: ISnipsUtterance[];\n}\nexport interface ISnipsDataset {\n    intents: { [intentKey: string]: ISnipsIntent };\n    entities: {\n        [entityKey: string]: {\n            data?: Array<{ value: string; synonyms: string[] }>;\n            use_synonyms?: boolean;\n            automatically_extensible?: boolean;\n        };\n    };\n    language: string;\n}\n\ninterface ISnipsTestingDataset {\n    [intent: string]: ISentenceTokens[][];\n}\n\nexport async function adapter(dsl: string, formatOptions?: any) {\n    const training: ISnipsDataset = { language: 'en', entities: {}, intents: {} };\n    const testing: ISnipsTestingDataset = {};\n    if (formatOptions) {\n        utils.mergeDeep(training, formatOptions);\n    }\n    const synonymsForSlots: {\n        [slot: string]: { [key: string]: Set<string> };\n    } = {};\n    // const slots: Set<string> = new Set();\n    const entities: Set<string> = new Set();\n    const utteranceWriter = (utterance: ISentenceTokens[], intentKey: string, isTrainingExample: boolean) => {\n        if (isTrainingExample) {\n            if (!training.intents[intentKey]) {\n                training.intents[intentKey] = { utterances: [] };\n            }\n            const data = utterance.map(u => {\n                const ret: ISnipsUtteranceData = { text: u.value };\n                if (u.type === 'Slot' && u.slot) {\n                    ret.slot_name = u.slot;\n                    if (u.args) {\n                        Object.keys(u.args).forEach(key => {\n                            if (u.args && key === 'entity') {\n                                entities.add(u.args[key]);\n                                ret.entity = u.args[key];\n                            }\n                        });\n                    }\n                    if (!ret.entity) {\n                        ret.entity = u.slot;\n                        entities.add(u.slot);\n                        if (u.synonym) {\n                            if (!synonymsForSlots[u.slot]) {\n                                synonymsForSlots[u.slot] = {};\n                            }\n                            const synonyms = synonymsForSlots[u.slot];\n                            if (!synonyms[u.synonym]) {\n                                synonyms[u.synonym] = new Set();\n                            }\n                            if (u.synonym !== u.value) {\n                                synonyms[u.synonym].add(u.value);\n                            }\n                        }\n                    }\n                }\n                return ret;\n            });\n            training.intents[intentKey].utterances.push({ data });\n        } else {\n            if (!testing[intentKey]) {\n                testing[intentKey] = [];\n            }\n            testing[intentKey].push(utterance);\n        }\n    };\n    await gen.datasetFromString(dsl, utteranceWriter);\n    entities.forEach(slotKey => {\n        if (!synonymsForSlots[slotKey]) {\n            if (!training.entities[slotKey]) {\n                training.entities[slotKey] = {};\n            }\n            return;\n        }\n        Object.keys(synonymsForSlots[slotKey]).forEach(synonymsValue => {\n            if (!training.entities[slotKey]) {\n                training.entities[slotKey] = {};\n            }\n            training.entities[slotKey].use_synonyms = true;\n            training.entities[slotKey].automatically_extensible = true;\n            if (!training.entities[slotKey].data) {\n                training.entities[slotKey].data = [];\n            }\n            (training.entities[slotKey].data as any[]).push({\n                synonyms: [...synonymsForSlots[slotKey][synonymsValue]],\n                value: synonymsValue\n            });\n        });\n    });\n    return { training, testing };\n}\n","import * as gen from '../main';\nimport { ISentenceTokens, IUtteranceWriter } from '../types';\nimport * as utils from '../utils';\n\nexport interface IDefaultDataset {\n    [intent: string]: ISentenceTokens[][];\n}\nexport async function adapter(dsl: string, formatOptions?: any) {\n    const training: IDefaultDataset = {};\n    const testing: IDefaultDataset = {};\n    if (formatOptions) {\n        utils.mergeDeep(training, formatOptions);\n    }\n    const utteranceWriter = (utterance: ISentenceTokens[], intentKey: string, isTrainingExample: boolean) => {\n        const dataset = isTrainingExample ? training : testing;\n        if (!dataset[intentKey]) {\n            dataset[intentKey] = [];\n        }\n        dataset[intentKey].push(utterance);\n    };\n    await gen.datasetFromString(dsl, utteranceWriter);\n    return { training, testing };\n}\n","import * as rasaAdapter from '../../src/adapters/rasa';\nimport * as snipsAdapter from '../../src/adapters/snips';\nimport * as webAdapter from '../../src/adapters/web';\n\nconst findRestaurantsByCity = `// Find restaurants by city\n%[findRestaurantsByCity]('training': '100', 'testing': '100')\n    ~[greet?] ~[please?] ~[find?] ~[restaurants] ~[located at] @[city] ~[city?]\n\n@[city]\n    ~[new york]\n    ~[san francisco]\n    ~[atlanta]\n\n~[greet]\n    hey\n    hi\n    hello\n    greetings\n\n~[located at]\n    at\n    in the area of\n    located at\n\n~[restaurants]\n    restaurants\n    places to eat\n    where to eat\n`;\n\nconst affirmative = `// Ways to say yes\n%[affirmative]('training': '100', 'testing': '100')\n    ~[yes]\n    ~[yes] ~[yes?] ~[please?]\n    you got that ~[yes]\n    you're goddamn ~[yes]\n    ~[yes] ~[wantThat]\n    yes that is ~[yes]\n    ~[yes] ~[yes?] ~[yes?] ~[yes?]\n    ~[wantThat]\n\n~[yes]\n    yes\n    right\n    affirmative\n    yes to that\n    correct\n    yep\n    yes sir\n    si\n    correcto\n    ok\n    right\n    allright\n\n~[wantThat]\n    i want that\n    i desire that\n    i agree\n    i want that\n    that is fine\n    that is correct\n    that is what i want\n    you understood me\n    that is right\n    that is what i mean\n    want that\n    im ok with that\n    ok its good\n    im good with that\n    ok its fine\n    is good\n    it is fine\n    im ok with this\n    im good with this\n`;\n\nconst bye = `// Ways to say goodbye\n%[bye]('training': '100', 'testing': '100')\n    ~[leaving?] ~[bye] ~[bye?] ~[bye?] ~[leaving?]\n    ~[leaving] ~[bye?]\n\n~[bye]\n    bye\n    goodbye\n    ttyl\n    gtg\n    adios\n    farewell\n    adieu\n    chao\n    chau\n\n~[leaving]\n    leaving\n    talk to you soon\n    have to go\n    got to go\n    talk to you later\n    heading out\n    im leaving now\n    going out\n`;\n\nconst greet = `// Ways to say hello\n%[greet]('training': '100', 'testing': '100')\n    ~[hi] ~[hi?] ~[hi?]\n    ~[greetings] ~[greetings?]\n    ~[hi] ~[greetings] ~[hi?]\n    ~[greetings] ~[hi] ~[hi?]\n\n~[hi]\n    hi\n    hello\n    hey\n    howdy\n    hola\n\n~[greetings]\n    greetings\n    how are you\n    whats up\n    how are you doing\n    how is it going\n    good morning\n    good afternoon\n    good day\n    good night\n    are you there\n    morning\n    how are things going\n    are you around\n    whatsup\n    sup\n    are you around?\n`;\n\nconst negative = `// Ways to say no\n%[negative]('training': '100', 'testing': '100')\n    ~[no] ~[no?] ~[please?]\n    ~[no] ~[notWhatIWant]\n    ~[no?] ~[notWhatIWant] ~[no?]\n    ~[no] ~[no?] ~[no?]\n\n~[no]\n    no\n    nope\n    negative\n    not correct\n    incorrect\n    no sir\n    wrong\n\n~[notWhatIWant]\n    dont want that\n    dont desire that\n    dont agree on that\n    didnt meant that\n    dont mean that\n    not what i want\n    not correct\n    wrong\n    bad\n    incorrect\n    im not ok with that\n    not good\n    its bad\n    that is bad\n    that is wrong\n    im not good with that\n    ok its not fine\n    definitely no\n    not good for me\n    its not ok\n    its not correct\n`;\n\nexport const tabs = [\n    { title: 'findRestaurantsByCity.chatito', value: findRestaurantsByCity },\n    { title: 'greet.chatito', value: greet },\n    { title: 'bye.chatito', value: bye },\n    { title: 'affirmative.chatito', value: affirmative },\n    { title: 'negative.chatito', value: negative }\n];\n\nexport const chatitoPrism = {\n    comments: [{ pattern: /^\\/\\/.*/, greedy: true }, { pattern: /((\\n|\\r\\n)+)\\/\\/.*/, greedy: true }],\n    intentDefinition: [\n        {\n            pattern: /^%\\[[^\\]]+\\]((\\(.+\\))?)/,\n            inside: { intentArguments: /((\\(.+\\))?)$/ }\n        },\n        {\n            pattern: /((\\n|\\r\\n)+)%\\[[^\\]]+\\]((\\(.+\\))?)/,\n            inside: { intentArguments: /((\\(.+\\))?)$/ }\n        }\n    ],\n    slotDefinition: [\n        {\n            pattern: /^\\@\\[[^\\]]+\\]((\\(.+\\))?)/,\n            inside: { slotArguments: /((\\(.+\\))?)$/ }\n        },\n        {\n            pattern: /((\\n|\\r\\n)+)\\@\\[[^\\]]+\\]((\\(.+\\))?)/,\n            inside: { slotArguments: /((\\(.+\\))?)$/ }\n        }\n    ],\n    slot: { pattern: /\\@\\[[^\\]]+(\\?)?\\]/, greedy: true },\n    alias: { pattern: /~\\[[^\\]]+(\\?)?\\]/, greedy: true },\n    default: { pattern: /[^\\r\\n]/i, greedy: true }\n};\n\nexport const webDefaultOptions: webAdapter.IDefaultDataset = {};\nexport const rasaDefaultOptions: rasaAdapter.IRasaDataset = {\n    rasa_nlu_data: {\n        regex_features: [],\n        entity_synonyms: [],\n        common_examples: []\n    }\n};\nexport const snipsDefaultOptions: snipsAdapter.ISnipsDataset = { language: 'en', entities: {}, intents: {} };\n","export function debounce(func, wait) {\n    let timeout;\n    return function(...args) {\n        const context = this;\n        clearTimeout(timeout);\n        timeout = setTimeout(() => func.apply(context, args), wait);\n    };\n}\n","import styled from 'styled-components';\n\nexport const AlertNotification = styled.div`\n    width: 100%;\n    background-color: ${({ state }: { state: 'error' | 'warning' | 'success' }) =>\n        state === 'error' ? '#c80000' : state === 'warning' ? '#7f8000' : '#008800'};\n    bottom: 0;\n    margin: auto;\n    right: 0;\n    text-align: center;\n    padding: 12px;\n    color: white;\n    z-index: 99;\n    font-size: 14px;\n`;\n\nexport const CodeStyles = styled.div`\n    white-space: pre-wrap;\n    position: relative;\n    margin: auto;\n    width: inherit;\n    height: calc(100vh - 210px) !important;\n    min-height: 400px;\n    background-color: #282a35;\n    > .codeflask {\n        background-color: #282a35;\n        > textarea.codeflask__textarea {\n            color: #282a35;\n            caret-color: #fff;\n        }\n        &.codeflask--has-line-numbers {\n            :before {\n                background-color: #3c3c4c;\n            }\n            > pre {\n                width: auto !important;\n            }\n            div.codeflask__lines {\n                z-index: 3;\n                height: auto !important;\n                padding: 10px 4px 0 0;\n                > .codeflask__lines__line {\n                    color: #6473a0;\n                    background-color: #3c3c4c;\n                }\n            }\n        }\n        *::-webkit-scrollbar {\n            width: 10px;\n            height: 10px;\n        }\n        *::-webkit-scrollbar-thumb {\n            background-color: #7c7c9c;\n            box-shadow: inset 0 0 2px rgba(0, 0, 0, 0.8);\n        }\n        *::-webkit-scrollbar-track {\n            box-shadow: inset 0 0 2px rgba(0, 0, 0, 0.8);\n        }\n        *::-webkit-scrollbar-corner {\n            background-color: transparent;\n        }\n    }\n    .token.comments {\n        color: #999;\n    }\n    .token.intentDefinition {\n        color: #ef82c3;\n    }\n    .token.slotDefinition {\n        color: #ffaf56;\n    }\n    .token.slot {\n        color: #ffaf56;\n    }\n    .token.alias {\n        color: #a0e7fb;\n    }\n    .token.default {\n        color: #e2e2dd;\n    }\n    .token.intentArguments {\n        color: #b5669e;\n    }\n    .token.slotArguments {\n        color: #7a9d98;\n    }\n`;\n\nexport const TabButton = styled.div`\n    cursor: pointer;\n    display: inline-block;\n    background-color: ${({ active }: { active: boolean }) => (active ? '#282A35' : '#3c3c4c')};\n    font-size: 12px;\n    color: #ededed;\n    padding: 13px 3px 13px 13px;\n    border-right: 1px solid #2c2c3c;\n    zoom: 1;\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n`;\n\nexport const CloseTab = styled.div`\n    :after {\n        content: 'x';\n    }\n    padding: 8px;\n    margin-left: 8px;\n    display: inline-block;\n    color: #ccf;\n    line-height: 10px;\n    font-size: 14px;\n    cursor: pointer;\n    font-weight: bold;\n`;\n\nexport const EditorHeader = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    max-width: 100%;\n    background-color: #3c3c4c;\n    padding-left: 40px;\n    padding-top: 10px;\n`;\n\nexport const TabsAreaButton = styled.button`\n    cursor: pointer;\n    background-color: #6c1de2;\n    font-size: 12px;\n    color: #efefef;\n    line-height: 14px;\n    padding: 8px 24px;\n    white-space: nowrap;\n    margin: auto 10px;\n    border-radius: 4px;\n    border-color: #333;\n    -webkit-transition: 0.25s ease;\n    -moz-transition: 0.25s ease;\n    -o-transition: 0.25s ease;\n    transition: 0.25s ease;\n    &:first-of-type {\n        margin-left: 20px;\n    }\n    :disabled {\n        border: 1px solid #999999;\n        background-color: #cccccc;\n        color: #666666;\n    }\n`;\n\nexport const TabsArea = styled.div`\n    width: auto;\n    max-width: 100%;\n    white-space: nowrap;\n    position: relative;\n    overflow-x: auto;\n    overflow-y: hidden;\n    -webkit-overflow-scrolling: touch;\n    &::-webkit-scrollbar {\n        height: 6px;\n    }\n    &::-webkit-scrollbar-thumb {\n        background-color: #7c7c9c;\n        -webkit-box-shadow: inset 0 0 2px rgba(0, 0, 0, 0.8);\n    }\n    &::-webkit-scrollbar-track {\n        -webkit-box-shadow: inset 0 0 2px rgba(0, 0, 0, 0.8);\n    }\n    *::-webkit-scrollbar-corner {\n        background-color: transparent;\n    }\n`;\n\nexport const EditorWrapper = styled.div`\n    width: 90vw;\n    overflow: auto;\n    margin: auto;\n    position: relative;\n    -webkit-box-shadow: 0px 0px 36px 2px rgba(0, 0, 0, 0.63);\n    -moz-box-shadow: 0px 0px 36px 2px rgba(0, 0, 0, 0.63);\n    box-shadow: 0px 0px 36px 2px rgba(0, 0, 0, 0.63);\n`;\n\nexport const Drawer = styled.div`\n    z-index: 99;\n    position: absolute;\n    background-color: #352252;\n    -webkit-box-shadow: -5px 0px 5px -5px rgba(0, 0, 0, 0.55);\n    -moz-box-shadow: -5px 0px 5px -5px rgba(0, 0, 0, 0.55);\n    box-shadow: -5px 0px 5px -5px rgba(0, 0, 0, 0.55);\n    top: 0;\n    right: 0;\n    max-width: 700px;\n    height: 100%;\n    width: ${({ showDrawer }: { showDrawer: boolean }) => (showDrawer ? `100%` : `0px`)};\n    -webkit-transition: 0.65s ease;\n    -moz-transition: 0.65s ease;\n    -o-transition: 0.65s ease;\n    transition: 0.65s ease;\n    overflow: auto;\n`;\n\nexport const EditorOverlay = styled.div`\n    z-index: 999;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.6);\n    visibility: ${({ showDrawer }: { showDrawer: boolean }) => (showDrawer ? 'visible' : 'hidden')};\n    -webkit-transition: 0.25s ease;\n    -moz-transition: 0.25s ease;\n    -o-transition: 0.25s ease;\n    transition: 0.25s ease;\n`;\n\nexport const BlockWrapper = styled.div`\n    background-color: #e4e4e4;\n    margin: 20px;\n    overflow: auto;\n    border-radius: 8px;\n    -webkit-box-shadow: 0px 0px 50px 0px rgba(0, 0, 0, 0.4);\n    -moz-box-shadow: 0px 0px 50px 0px rgba(0, 0, 0, 0.4);\n    box-shadow: 0px 0px 50px 0px rgba(0, 0, 0, 0.4);\n    clear: both;\n`;\n\nexport const BlockWrapperTitle = styled.div`\n    background-color: #6b5a86;\n    color: #efefef;\n    font-size: 13px;\n    padding: 8px 10px;\n    border-top-left-radius: 8px;\n    border-top-right-radius: 8px;\n`;\n\nexport const CloseDrawerButton = styled.div`\n    cursor: pointer;\n    color: white;\n    font-size: 16px;\n    padding: 8px;\n    font-weight: bold;\n    margin: 8px 20px 8px 20px;\n    float: right;\n`;\n\nexport const DrawerFormField = styled.div`\n    padding: 10px 20px;\n    display: flex;\n    align-items: center;\n    flex: 1;\n    > label {\n        font-size: 12px;\n        padding-right: 10px;\n    }\n`;\n\nexport const SelectWrapper = styled.div`\n    position: relative;\n    z-index: 0;\n    display: inline-block;\n    overflow: hidden;\n    height: auto;\n    padding: 0 5px 0 0;\n    margin: 0 5px 0 0;\n    border-radius: 5px;\n    border: solid 1px #ccc;\n    background-color: #fff;\n    :before {\n        position: absolute;\n        z-index: 1;\n        content: '\\\\25BE';\n        top: 50%;\n        right: 10px;\n        margin-top: -9px;\n    }\n    select {\n        position: relative;\n        z-index: 2;\n        outline: none;\n        width: 120%;\n        padding: 5px 20px 5px 10px;\n        background-color: transparent;\n        background-image: none;\n        -webkit-appearance: none;\n        border: none;\n        box-shadow: none;\n    }\n`;\n\nexport const CheckboxWrapper = styled.div`\n    font-size: 12px;\n    text-decoration: underline;\n    cursor: pointer;\n    input {\n        margin-right: 10px;\n        cursor: pointer;\n    }\n`;\n","import styled, { injectGlobal } from 'styled-components';\n\n// tslint:disable-next-line:no-unused-expression\ninjectGlobal`\n  *, *::after, *::before {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n  :focus { outline: none; }\n  h1, h2 { display: inline; font-size: 20px; }\n  ::-moz-focus-inner { border: 0; }\n  html, body, #app {\n      padding: 0;\n      margin: 0;\n      display: flex;\n      flex-direction: column;\n      flex: 1;\n      height: auto !important;\n      font-family: 'Helvetica Neue', Arial, Helvetica, sans-serif;\n      background-color: #ccc;\n  }\n  a { text-decoration: none; }\n  body {\n      box-sizing: border-box;\n      min-height: 100vh;\n      background: #ececec;\n      padding: 0;\n  }\n  a:focus, a:active, a:any-link { text-decoration: none; }\n`;\n\nexport const Header = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    h1,\n    h2 {\n        display: inline;\n    }\n    a {\n        text-decoration: none;\n        color: #990adb;\n    }\n    a:hover {\n        color: #b92afb;\n    }\n    color: '#444';\n    margin: 20px;\n`;\n","import * as React from 'react';\n\nexport default function Logo() {\n    return (\n        <svg fill=\"#990ADB\" viewBox=\"0 0 14 12\" version=\"1.1\" x=\"0px\" y=\"0px\">\n            <g stroke=\"none\" fill=\"none\">\n                <g fill=\"#990ADB\">\n                    <path d=\"M7.032,5.504 C6.672,5.504 6.384,5.792 6.384,6.152 C6.384,6.512 6.672,6.8 7.032,6.8 C7.392,6.8 7.68,6.512 7.68,6.152 C7.688,5.792 7.392,5.504 7.032,5.504 Z M3.88,5.504 C3.52,5.504 3.232,5.792 3.232,6.152 C3.232,6.512 3.52,6.8 3.88,6.8 C4.24,6.8 4.528,6.512 4.528,6.152 C4.528,5.792 4.24,5.504 3.88,5.504 Z M9.544,6.152 C9.544,6.512 9.832,6.8 10.192,6.8 C10.552,6.8 10.84,6.512 10.84,6.152 C10.84,5.792 10.552,5.504 10.192,5.504 C9.832,5.504 9.544,5.792 9.544,6.152 Z\" />\n                    <path d=\"M13.024,3.096 L13.024,3.08 C13.024,2.744 12.856,1.272 12.368,0.816 C12.208,0.664 12.048,0.64 11.944,0.648 C11.544,0.664 10.976,1.088 10.336,1.6 C10.264,1.656 10.184,1.72 10.12,1.768 L4.328,1.768 C4.184,1.768 4.032,1.76 3.888,1.768 C3.856,1.744 3.832,1.736 3.8,1.704 C3.232,1.16 2.68,0.664 2.24,0.648 C2.136,0.64 1.976,0.672 1.816,0.816 C1.376,1.232 1.192,2.48 1.16,2.952 C1.136,2.968 1.12,2.984 1.104,3.008 C0.624,3.624 0.312,4.584 0.312,5.456 L0.312,6.8 C0.312,8.064 1.024,9.184 2.104,9.848 L2.104,11.392 C2.104,11.456 2.152,11.504 2.216,11.504 C2.248,11.504 2.272,11.496 2.296,11.472 L3.392,10.376 C3.728,10.456 4.08,10.496 4.424,10.496 L9.752,10.496 C11.992,10.496 13.752,8.872 13.752,6.8 L13.752,5.456 C13.752,4.624 13.472,3.704 13.024,3.096 Z M13.08,6.8 C13.08,8.496 11.616,9.824 9.752,9.824 L4.424,9.824 C2.528,9.824 0.984,8.464 0.984,6.8 L0.984,5.456 C0.984,4.736 1.248,3.92 1.632,3.424 C1.648,3.4 1.672,3.368 1.688,3.344 C1.824,3.192 1.816,3.064 1.832,2.888 C1.848,2.68 1.88,2.472 1.928,2.264 C1.984,1.968 2.048,1.552 2.248,1.32 C2.424,1.376 2.784,1.664 3.328,2.184 C3.584,2.424 3.744,2.44 4,2.44 L10.024,2.44 C10.248,2.44 10.392,2.416 10.76,2.128 C10.992,1.944 11.672,1.408 11.936,1.336 C12.128,1.552 12.36,2.536 12.36,3.048 C12.352,3.184 12.384,3.312 12.464,3.424 C12.84,3.92 13.088,4.776 13.088,5.472 L13.08,6.8 Z\" />\n                </g>\n            </g>\n        </svg>\n    );\n}\n"],"sourceRoot":""}